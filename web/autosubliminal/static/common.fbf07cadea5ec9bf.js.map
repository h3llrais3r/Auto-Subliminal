{"version":3,"file":"common.fbf07cadea5ec9bf.js","mappings":"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","sources":["./src/app/core/services/api/settings.service.ts","./src/app/shared/components/input/number/input-number.component.ts","./src/app/shared/components/input/number/input-number.component.html","./src/app/shared/components/input/text/input-text.component.ts","./src/app/shared/components/input/text/input-text.component.html","./src/app/shared/components/loading/loading.component.ts","./src/app/shared/components/loading/loading.component.html","./src/app/shared/models/settings.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { GeneralSettings, LibrarySettings, LogSettings, NameMappingSettings, NotificationSettings, PostProcessSettings, SkipMappingSettings, SubliminalSettings, TwitterAuthorization, TwitterRegistration, WebServerSettings } from '../../../shared/models/settings';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingsService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/settings`;\r\n\r\n  // General settings\r\n\r\n  getGeneralSettings(): Observable<GeneralSettings> {\r\n    return this.httpClient.get<GeneralSettings>(`${this.URL}/general`, this.options)\r\n      .pipe(map((settings) => new GeneralSettings(settings)));\r\n  }\r\n\r\n  updateGeneralSettings(generalSettings: GeneralSettings): Observable<boolean> {\r\n    return this.httpClient.put<GeneralSettings>(`${this.URL}/general`, JSON.stringify(generalSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  updateGeneralSetting(settingName: string, value: any): Observable<boolean> {\r\n    return this.httpClient.patch<void>(`${this.URL}/general/${settingName}`, JSON.stringify(value), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // Library settings\r\n\r\n  getLibrarySettings(): Observable<LibrarySettings> {\r\n    return this.httpClient.get<LibrarySettings>(`${this.URL}/library`, this.options)\r\n      .pipe(map((settings) => new LibrarySettings(settings)));\r\n  }\r\n\r\n  updateLibrarySettings(librarySettings: LibrarySettings): Observable<boolean> {\r\n    return this.httpClient.put<LibrarySettings>(`${this.URL}/library`, JSON.stringify(librarySettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // Log settings\r\n\r\n  getLogSettings(): Observable<LogSettings> {\r\n    return this.httpClient.get<LogSettings>(`${this.URL}/logging`, this.options)\r\n      .pipe(map((settings) => new LogSettings(settings)));\r\n  }\r\n\r\n  updateLogSettings(logSettings: LogSettings): Observable<boolean> {\r\n    return this.httpClient.put<LogSettings>(`${this.URL}/logging`, JSON.stringify(logSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // WebServer settings\r\n\r\n  getWebServerSettings(): Observable<WebServerSettings> {\r\n    return this.httpClient.get<WebServerSettings>(`${this.URL}/webserver`, this.options)\r\n      .pipe(map((settings) => new WebServerSettings(settings)));\r\n  }\r\n\r\n  updateWebServerSettings(webServerSettings: WebServerSettings): Observable<boolean> {\r\n    return this.httpClient.put<WebServerSettings>(`${this.URL}/webserver`, JSON.stringify(webServerSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // Subliminal settings\r\n\r\n  getSubliminalSettings(): Observable<SubliminalSettings> {\r\n    return this.httpClient.get<SubliminalSettings>(`${this.URL}/subliminal`, this.options)\r\n      .pipe(map((settings) => new SubliminalSettings(settings)));\r\n  }\r\n\r\n  updateSubliminalSettings(subliminalSettings: SubliminalSettings): Observable<boolean> {\r\n    return this.httpClient.put<SubliminalSettings>(`${this.URL}/subliminal`, JSON.stringify(subliminalSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // NameMapping settings\r\n\r\n  getNameMappingSettings(): Observable<NameMappingSettings> {\r\n    return this.httpClient.get<NameMappingSettings>(`${this.URL}/namemapping`, this.options)\r\n      .pipe(map((settings) => new NameMappingSettings(settings)));\r\n  }\r\n\r\n  updateNameMappingSettings(nameMappingSettings: NameMappingSettings): Observable<boolean> {\r\n    return this.httpClient.put<NameMappingSettings>(`${this.URL}/namemapping`, JSON.stringify(nameMappingSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // SkipMapping settings\r\n\r\n  getSkipMappingSettings(): Observable<SkipMappingSettings> {\r\n    return this.httpClient.get<SkipMappingSettings>(`${this.URL}/skipmapping`, this.options)\r\n      .pipe(map((settings) => new SkipMappingSettings(settings)));\r\n  }\r\n\r\n  updateSkipMappingSettings(skipMappingSettings: SkipMappingSettings): Observable<boolean> {\r\n    return this.httpClient.put<SkipMappingSettings>(`${this.URL}/skipmapping`, JSON.stringify(skipMappingSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  // Notification settings\r\n\r\n  getNotificationSettings(): Observable<NotificationSettings> {\r\n    return this.httpClient.get<NotificationSettings>(`${this.URL}/notification`, this.options)\r\n      .pipe(map((settings) => new NotificationSettings(settings)));\r\n  }\r\n\r\n  updateNotificationSettings(notificationSettings: NotificationSettings): Observable<boolean> {\r\n    return this.httpClient.put<NotificationSettings>(`${this.URL}/notification`, JSON.stringify(notificationSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  testNotifier(notifierName: string): Observable<boolean> {\r\n    return this.httpClient.patch<void>(`${this.URL}/notification/${notifierName}`, {}, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  registerTwitter(): Observable<TwitterRegistration> {\r\n    return this.httpClient.post<TwitterRegistration>(`${this.URL}/notification/twitter`, {}, this.options)\r\n      .pipe(map((twitterRegistration) => new TwitterRegistration(twitterRegistration)));\r\n  }\r\n\r\n  authorizeTwitter(twitterRegistration: TwitterRegistration): Observable<TwitterAuthorization> {\r\n    return this.httpClient.post<any>(`${this.URL}/notification/twitter`, twitterRegistration, this.options)\r\n      .pipe(map((twitterAuthorization) => new TwitterAuthorization(twitterAuthorization)));\r\n  }\r\n\r\n  // PostProcess settings\r\n\r\n  getPostProcessSettings(): Observable<PostProcessSettings> {\r\n    return this.httpClient.get<PostProcessSettings>(`${this.URL}/postprocessing`, this.options)\r\n      .pipe(map((settings) => new PostProcessSettings(settings)));\r\n  }\r\n\r\n  updatePostProcessSettings(postProcessSettings: PostProcessSettings): Observable<boolean> {\r\n    return this.httpClient.put<PostProcessSettings>(`${this.URL}/postprocessing`, JSON.stringify(postProcessSettings), this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n}\r\n","import { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-number',\r\n  templateUrl: './input-number.component.html',\r\n  styleUrls: ['./input-number.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputNumberComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [FormsModule, ReactiveFormsModule, InputNumberModule]\r\n})\r\nexport class InputNumberComponent extends InputComponent {\r\n\r\n  @Input()\r\n  mode = 'decimal'; // default decimal\r\n\r\n  @Input()\r\n  useGrouping = false; // default no grouping\r\n\r\n  @Input()\r\n  showButtons = true; // default show buttons\r\n\r\n  @Input()\r\n  step = 1; // default 1\r\n\r\n  @Input()\r\n  min: number;\r\n\r\n  @Input()\r\n  max: number;\r\n\r\n  @Input()\r\n  suffix: string;\r\n}\r\n","<!-- Input number -->\r\n<p-inputNumber [inputId]=\"id || formControlName\"\r\n               [formControl]=\"control\"\r\n               [mode]=\"mode\"\r\n               [useGrouping]=\"useGrouping\"\r\n               [step]=\"step\"\r\n               [min]=\"min\"\r\n               [max]=\"max\"\r\n               [suffix]=\"suffix\"\r\n               [showButtons]=\"showButtons\"\r\n               decrementButtonClass=\"p-button-outlined input-addon\"\r\n               incrementButtonClass=\"p-button-outlined input-addon\"\r\n               (onFocus)=\"onFocus($event)\"\r\n               (onKeyDown)=\"onKeyDown($event)\"\r\n               (onBlur)=\"onBlur($event)\"\r\n               class=\"w-100\"\r\n               styleClass=\"w-100\"\r\n               inputStyleClass=\"w-100\">\r\n</p-inputNumber>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskDirective } from 'ngx-mask';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-text',\r\n  templateUrl: './input-text.component.html',\r\n  styleUrls: ['./input-text.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputTextComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgClass, FormsModule, ReactiveFormsModule, InputTextModule, NgxMaskDirective]\r\n})\r\nexport class InputTextComponent extends InputComponent {\r\n\r\n  @Input()\r\n  type = 'text';\r\n\r\n  @Input()\r\n  placeholder = '';\r\n\r\n  @Input()\r\n  mask = '';\r\n\r\n  @Input()\r\n  dropSpecialCharacters = true;\r\n\r\n  override writeValue(obj: any): void {\r\n    super.writeValue(obj);\r\n    this.changeDetectorRef.detectChanges(); // ngx-mask makes changes to the input, so detect changes again to prevent ExpressionChangedAfterItHasBeenCheckedError\r\n  }\r\n}\r\n","<!-- Input text -->\r\n<input pInputText\r\n       [type]=\"type\"\r\n       [id]=\"id || formControlName\"\r\n       [formControl]=\"control\"\r\n       [placeholder]=\"placeholder\"\r\n       [ngClass]=\"validationClass\"\r\n       [mask]=\"mask\"\r\n       [dropSpecialCharacters]=\"dropSpecialCharacters\"\r\n       (focus)=\"onFocus($event)\"\r\n       (keydown)=\"onKeyDown($event)\"\r\n       (keyup)=\"onKeyUp($event)\"\r\n       (change)=\"onChange($event)\"\r\n       (blur)=\"onBlur($event)\"\r\n       class=\"w-100\">\r\n","import { Component, Input } from '@angular/core';\r\nimport { DialogModule } from 'primeng/dialog';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss'],\r\n  standalone: true,\r\n  imports: [DialogModule]\r\n})\r\nexport class LoadingComponent {\r\n\r\n  @Input()\r\n  visible = false;\r\n}\r\n","<p-dialog [(visible)]=\"visible\"\r\n          [modal]=\"true\"\r\n          [closable]=\"false\"\r\n          [draggable]=\"false\"\r\n          [resizable]=\"false\"\r\n          [showHeader]=\"false\"\r\n          styleClass=\"dialog-transparent\">\r\n  <div class=\"loading\">\r\n    <i class=\"fa fa-spinner fa-spin fa-5x\" aria-hidden=\"true\"></i>\r\n  </div>\r\n</p-dialog>\r\n","export class GeneralSettings {\r\n  videoPaths: string[];\r\n  defaultLanguage: string;\r\n  defaultLanguageSuffix: string;\r\n  additionalLanguages: string[];\r\n  manualSearchWithScoring: boolean;\r\n  scanDiskInterval: number;\r\n  scanDiskAtStartup: boolean;\r\n  checkSubInterval: number;\r\n  checkSubAtStartup: boolean;\r\n  checkSubDeadline: number;\r\n  checkSubDelta: number;\r\n  checkVersionInterval: number;\r\n  checkVersionAtStartup: boolean;\r\n  checkVersionAutoUpdate: boolean;\r\n  scanEmbeddedSubs: boolean;\r\n  scanHardcodedSubs: boolean;\r\n  skipHiddenDirs: boolean;\r\n  detectInvalidSubLanguage: boolean;\r\n  detectedLanguageProbability: number;\r\n  manualSubSync: boolean;\r\n  ffmpegPath: string;\r\n  minVideoFileSize: number;\r\n  maxDbResults: number;\r\n  timestampFormat: string;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class LibrarySettings {\r\n  libraryMode: boolean;\r\n  libraryPaths: string[];\r\n  scanLibraryInterval: number;\r\n  scanLibraryAtStartup: boolean;\r\n  libraryEditMode: boolean;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class LogSettings {\r\n  logFile: string;\r\n  logLevel: number;\r\n  logNum: number;\r\n  logSize: number;\r\n  logHttpAccess: boolean;\r\n  logExternalLibs: boolean;\r\n  logDetailedFormat: boolean;\r\n  logReversed: boolean;\r\n  logLevelConsole: number;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class WebServerSettings {\r\n  webServerIp: string;\r\n  webServerPort: number;\r\n  webRoot: string;\r\n  userName: string;\r\n  password: string;\r\n  launchBrowser: boolean;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class SubliminalSettings {\r\n  showMatchSource: boolean;\r\n  showMatchQuality: boolean;\r\n  showMatchCodec: boolean;\r\n  showMatchReleaseGroup: boolean;\r\n  movieMatchSource: boolean;\r\n  movieMatchQuality: boolean;\r\n  movieMatchCodec: boolean;\r\n  movieMatchReleaseGroup: boolean;\r\n  subliminalProviders: string[];\r\n  subtitleUtf8Encoding: boolean;\r\n  refineVideo: boolean;\r\n  manualRefineVideo: boolean;\r\n  preferHearingImpaired: boolean;\r\n  antiCaptchaClass: string;\r\n  antiCaptchaClientKey: string;\r\n  addic7edUserName: string;\r\n  addic7edPassword: string;\r\n  addic7edUserId: string;\r\n  opensubtitlesUserName: string;\r\n  opensubtitlesPassword: string;\r\n  legendastvUserName: string;\r\n  legendastvPassword: string;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class NameMappingSettings {\r\n  showNameMapping: string[];\r\n  addic7edShowNameMapping: string[];\r\n  alternativeShowNameMapping: string[];\r\n  movieNameMapping: string[];\r\n  alternativeMovieNameMapping: string[];\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class SkipMappingSettings {\r\n  skipShowMapping: string[];\r\n  skipMovieMapping: string[];\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class NotificationSettings {\r\n  notify: boolean;\r\n  notifyMail: boolean;\r\n  mailServer: string;\r\n  mailFromName: string;\r\n  mailFrom: string;\r\n  mailTo: string;\r\n  mailUserName: string;\r\n  mailPassword: string;\r\n  mailSubject: string;\r\n  mailEncryption: string;\r\n  mailAuthentication: string;\r\n  notifyTwitter: boolean;\r\n  twitterKey: string;\r\n  twitterSecret: string;\r\n  notifyPushalot: boolean;\r\n  pushalotApi: string;\r\n  notifyPushover: boolean;\r\n  pushoverKey: string;\r\n  pushoverApi: string;\r\n  pushoverDevices: string;\r\n  notifyGrowl: boolean;\r\n  growlHost: string;\r\n  growlPort: number;\r\n  growlPassword: string;\r\n  growlPriority: number;\r\n  notifyProwl: boolean;\r\n  prowlApi: string;\r\n  prowlPriority: number;\r\n  notifyPushbullet: boolean;\r\n  pushbulletApi: string;\r\n  notifyTelegram: boolean;\r\n  telegramBotApi: string;\r\n  telegramChatId: string;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class TwitterRegistration {\r\n  url: string;\r\n  tokenKey: string;\r\n  tokenSecret: string;\r\n  tokenPin?: string;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class TwitterAuthorization {\r\n  twitterKey: string;\r\n  twitterSecret: string;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n\r\nexport class PostProcessSettings {\r\n  postProcess: boolean;\r\n  postProcessIndividual: boolean;\r\n  postProcessUtf8Encoding: boolean;\r\n  showPostProcessCmd: string;\r\n  showPostProcessArgs: string;\r\n  moviePostProcessCmd: string;\r\n  moviePostProcessArgs: string;\r\n\r\n  constructor(obj?: any) {\r\n    Object.assign(this, obj);\r\n  }\r\n}\r\n"],"names":["map","appSettings","GeneralSettings","LibrarySettings","LogSettings","NameMappingSettings","NotificationSettings","PostProcessSettings","SkipMappingSettings","SubliminalSettings","TwitterAuthorization","TwitterRegistration","WebServerSettings","ApiServiceTemplate","SettingsService","constructor","URL","webRoot","getGeneralSettings","httpClient","get","options","pipe","settings","updateGeneralSettings","generalSettings","put","JSON","stringify","updateGeneralSetting","settingName","value","patch","getLibrarySettings","updateLibrarySettings","librarySettings","getLogSettings","updateLogSettings","logSettings","getWebServerSettings","updateWebServerSettings","webServerSettings","getSubliminalSettings","updateSubliminalSettings","subliminalSettings","getNameMappingSettings","updateNameMappingSettings","nameMappingSettings","getSkipMappingSettings","updateSkipMappingSettings","skipMappingSettings","getNotificationSettings","updateNotificationSettings","notificationSettings","testNotifier","notifierName","registerTwitter","post","twitterRegistration","authorizeTwitter","twitterAuthorization","getPostProcessSettings","updatePostProcessSettings","postProcessSettings","t","factory","ɵfac","providedIn","forwardRef","FormsModule","NG_VALUE_ACCESSOR","ReactiveFormsModule","InputNumberModule","InputComponent","InputNumberComponent","mode","useGrouping","showButtons","step","selectors","inputs","min","max","suffix","standalone","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","InputNumberComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","InputNumberComponent_Template_p_inputNumber_onFocus_0_listener","$event","onFocus","InputNumberComponent_Template_p_inputNumber_onKeyDown_0_listener","onKeyDown","InputNumberComponent_Template_p_inputNumber_onBlur_0_listener","onBlur","ɵɵelementEnd","ɵɵproperty","id","formControlName","control","i1","NgControlStatus","FormControlDirective","i2","InputNumber","styles","NgClass","NgxMaskDirective","InputTextModule","InputTextComponent","type","placeholder","mask","dropSpecialCharacters","writeValue","obj","changeDetectorRef","detectChanges","InputTextComponent_Template","InputTextComponent_Template_input_focus_0_listener","InputTextComponent_Template_input_keydown_0_listener","InputTextComponent_Template_input_keyup_0_listener","onKeyUp","InputTextComponent_Template_input_change_0_listener","onChange","InputTextComponent_Template_input_blur_0_listener","validationClass","DefaultValueAccessor","InputText","DialogModule","LoadingComponent","visible","LoadingComponent_Template","LoadingComponent_Template_p_dialog_visibleChange_0_listener","ɵɵelement","Dialog","Object","assign"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}