{"version":3,"file":"675.765a0fffce53047c.js","mappings":"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","sources":["./src/app/core/services/api/log.service.ts","./src/app/core/services/scroll.service.ts","./src/app/modules/log/clear/log-clear.component.ts","./src/app/modules/log/log.routes.ts","./src/app/modules/log/view/log-view.component.ts","./src/app/modules/log/view/log-view.component.html","./src/app/shared/components/scroll/scroll.component.ts","./src/app/shared/components/scroll/scroll.component.html","./src/app/shared/models/loglevel.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/logs`;\r\n\r\n  getLogs(lognum?: number): Observable<string[]> {\r\n    const url = lognum ? `${this.URL}/${lognum}` : this.URL;\r\n    return this.httpClient.get<string[]>(url, this.options);\r\n  }\r\n\r\n  clearLogs(): Observable<boolean> {\r\n    return this.httpClient.delete<void>(this.URL, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getLogCount(): Observable<number> {\r\n    return this.httpClient.get<Count>(`${this.URL}/count`, this.options)\r\n      .pipe(map((count) => count.count));\r\n  }\r\n}\r\n\r\ntype Count = { count: number };\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollService {\r\n\r\n  scrollUp$ = new Subject<boolean>();\r\n  scrollDown$ = new Subject<boolean>();\r\n\r\n  triggerScrollUp(): void {\r\n    this.scrollUp$.next(true);\r\n  }\r\n\r\n  triggerScrollDown(): void {\r\n    this.scrollDown$.next(true);\r\n  }\r\n}\r\n","import { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n@Component({\r\n    selector: 'app-log-clear',\r\n    templateUrl: './log-clear.component.html',\r\n    styleUrls: ['./log-clear.component.scss'],\r\n    standalone: true\r\n})\r\nexport class LogClearComponent implements OnInit {\r\n\r\n  private router = inject(Router);\r\n  private logService = inject(LogService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.logService.clearLogs().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => {\r\n        // Redirect to log view after the logs are cleared\r\n        if (result) {\r\n          this.router.navigateByUrl('/log/view');\r\n        }\r\n      },\r\n      error: () => this.messageService.showErrorMessage(`Unable to clear the logs!`)\r\n    });\r\n  }\r\n\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\nimport { LogViewComponent } from './view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'view',\r\n    component: LogViewComponent\r\n  },\r\n  {\r\n    path: 'clear',\r\n    component: LogClearComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'view'\r\n  }\r\n];\r\n\r\n// Use default export for simplified lazy loading (https://angular.io/guide/standalone-components#lazy-loading-and-default-exports)\r\nexport default routes;\r\n","import { NgClass, NgFor } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SelectItem, SharedModule } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { ScrollService } from '../../../core/services/scroll.service';\r\nimport { LoadingComponent } from '../../../shared/components/loading/loading.component';\r\nimport { ScrollComponent } from '../../../shared/components/scroll/scroll.component';\r\nimport { Loglevel } from '../../../shared/models/loglevel';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss'],\r\n  standalone: true,\r\n  imports: [NgFor, NgClass, FormsModule, PanelModule, ButtonModule, DropdownModule, SharedModule, LoadingComponent, ScrollComponent]\r\n})\r\nexport class LogViewComponent implements OnInit {\r\n\r\n  logNums: number[];\r\n  selectedLogNum = 0;\r\n  loglevels: SelectItem[];\r\n  selectedLoglevel = '';\r\n  loading = false;\r\n  tailing = false;\r\n  tailingDisabled = false; // true for non current (lognum != 0) logfiles as tailing has no use in this case\r\n  tailButtonLabel = 'Start tailing';\r\n  tailButtonIcon = 'pi pi-play';\r\n\r\n  private readonly LOG_MESSAGE_REGEX = /^((?<date>\\d{4}-\\d{2}-\\d{2})\\s(?<time>\\d{2}:\\d{2}:\\d{2},\\d{3})\\s(?<loglevel>\\w+))/;\r\n\r\n  private logWebsocket$: WebSocketSubject<string>;\r\n  private logMessages: string[] = [];\r\n\r\n  private logService = inject(LogService);\r\n  private messageService = inject(MessageService);\r\n  private scrollService = inject(ScrollService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  get filteredLogMessages(): string[] {\r\n    return this.logMessages.filter((logMessage) => {\r\n      if (this.selectedLoglevel) {\r\n        const match = this.LOG_MESSAGE_REGEX.exec(logMessage);\r\n        return match && match.groups['loglevel'] === this.selectedLoglevel;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get logContent(): string {\r\n    return this.filteredLogMessages.join('\\n');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loglevels = this.getLogLevels();\r\n    this.logService.getLogCount().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (count) => this.logNums = Array.from(Array(count).keys()).map((i) => i + 1) // get array starting from 1\r\n    });\r\n    this.getLogs(0); // 0 = current logfile\r\n  }\r\n\r\n  getLogs(logNum: number): void {\r\n    this.loading = true;\r\n    this.selectedLogNum = logNum;\r\n    this.tailingDisabled = this.selectedLogNum !== 0; // tailing only allowed when on current logfile -> lognum = 0\r\n    this.logService.getLogs(logNum).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (logLines) => {\r\n        this.logMessages = logLines;\r\n        this.loading = false;\r\n        this.handleLogTailing();\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the logs!')\r\n    });\r\n  }\r\n\r\n  toggleTailing(): void {\r\n    this.tailing = !this.tailing;\r\n    if (this.tailing) {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Stop tailing';\r\n      this.tailButtonIcon = 'pi pi-pause';\r\n      // Scroll to right position when tailing is enabled\r\n      if (appSettings.logReversed) {\r\n        this.scrollService.triggerScrollUp();\r\n      } else {\r\n        this.scrollService.triggerScrollDown();\r\n      }\r\n    } else {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Start tailing';\r\n      this.tailButtonIcon = 'pi pi-play';\r\n    }\r\n    this.handleLogTailing();\r\n  }\r\n\r\n  private getLogLevels(): SelectItem[] {\r\n    const logLevels: SelectItem[] = [];\r\n    logLevels.push({ label: 'ALL', value: '' });\r\n    Object.entries(Loglevel).forEach((entry) => logLevels.push({ label: entry[0], value: entry[1] }));\r\n    return logLevels;\r\n  }\r\n\r\n  private createLogWebSocket(): WebSocketSubject<string> {\r\n    let protocol = 'ws:';\r\n    if (window.location.protocol === 'https:') {\r\n      protocol = 'wss:';\r\n    }\r\n    const url = `${protocol}//${window.location.host}${appSettings.webRoot}/websocket/log`;\r\n    const config: WebSocketSubjectConfig<string> = {\r\n      url,\r\n      deserializer: (e: MessageEvent) => e.data as string,\r\n      serializer: (value: string) => value\r\n    };\r\n    return webSocket(config);\r\n  }\r\n\r\n  private handleLogTailing(): void {\r\n    if (this.tailing && !this.tailingDisabled) {\r\n      // Subscribe on new logs once loaded (only for current logfile -> logNum = 0)\r\n      this.logWebsocket$ = this.createLogWebSocket(); // Need to create a new socket after unsubscribe\r\n      this.logWebsocket$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: (logMessage) => {\r\n          if (appSettings.logReversed) {\r\n            // Append to the top\r\n            this.logMessages.unshift(logMessage);\r\n            this.scrollService.triggerScrollUp();\r\n          } else {\r\n            // Append to the end\r\n            this.logMessages.push(logMessage);\r\n            this.scrollService.triggerScrollDown();\r\n          }\r\n        }\r\n      });\r\n      console.log('Log tailing enabled');\r\n    } else {\r\n      // Unsubscribe when not tailing\r\n      if (this.logWebsocket$) {\r\n        this.logWebsocket$.unsubscribe();\r\n      }\r\n      console.log('Log tailing disabled');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel>\r\n    <!-- Custom panel header -->\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"w-100\">\r\n        <div class=\"p-panel-title\">Logfile</div>\r\n        <div>\r\n          <span class=\"log-num\">\r\n            <span class=\"p-tag p-tag-rounded\" [ngClass]=\"{'p-tag-secondary': selectedLogNum !== 0}\" (click)=\"getLogs(0)\">current</span>\r\n            <span *ngFor=\"let logNum of logNums\" class=\"p-badge\" [ngClass]=\"{'p-badge-secondary': selectedLogNum !== logNum}\" (click)=\"getLogs(logNum)\">{{logNum}}</span>\r\n          </span>\r\n          <span class=\"log-tail\">\r\n            <p-button [label]=\"tailButtonLabel\" [icon]=\"tailButtonIcon\" styleClass=\"p-button-outlined\" [disabled]=\"tailingDisabled\" (onClick)=\"toggleTailing()\"></p-button>\r\n          </span>\r\n          <span class=\"log-level\">\r\n            <p-dropdown [options]=\"loglevels\" [(ngModel)]=\"selectedLoglevel\" styleClass=\"p-dropdown-ar\" scrollHeight=\"300px\"></p-dropdown>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Log content -->\r\n    <pre class=\"log-content\">{{logContent}}</pre>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Loading component -->\r\n<app-loading [visible]=\"loading\"></app-loading>\r\n\r\n<!-- Scroll component -->\r\n<app-scroll></app-scroll>\r\n","import { NgClass } from '@angular/common';\r\nimport { AfterContentChecked, Component, DestroyRef, HostListener, inject, Input, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { ScrollService } from '../../../core/services/scroll.service';\r\n\r\n@Component({\r\n  selector: 'app-scroll',\r\n  templateUrl: './scroll.component.html',\r\n  styleUrls: ['./scroll.component.scss'],\r\n  standalone: true,\r\n  imports: [NgClass]\r\n})\r\nexport class ScrollComponent implements OnInit, AfterContentChecked {\r\n\r\n  @Input()\r\n  target: HTMLElement; // optional target html element, if specified scroll is related to the element\r\n\r\n  private scrollHeight: number;\r\n  private maxScrollHeight: number;\r\n\r\n  private scrollService = inject(ScrollService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  get scrollBottom(): boolean {\r\n    return this.scrollHeight < this.maxScrollHeight;\r\n  }\r\n\r\n  get scrollTop(): boolean {\r\n    return this.scrollHeight >= 100;\r\n  }\r\n\r\n  @HostListener('window:scroll')\r\n  onWindowScroll(): void {\r\n    this.scrollHeight = this.getScrollHeight();\r\n    this.maxScrollHeight = this.getMaxScrollHeight();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.scrollHeight = this.getScrollHeight();\r\n    this.maxScrollHeight = this.getMaxScrollHeight();\r\n    // Subscribe on scrollUp events\r\n    this.scrollService.scrollUp$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.scrollToTop()\r\n    });\r\n    // Subscribe on scrollDown events\r\n    this.scrollService.scrollDown$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.scrollToBottom()\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // Make sure to update the scrollheight after the page/component is loaded\r\n    this.scrollHeight = this.getScrollHeight();\r\n    this.maxScrollHeight = this.getMaxScrollHeight();\r\n  }\r\n\r\n  scrollToTop(): void {\r\n    if (this.scrollHeight > 0) {\r\n      if (this.target) {\r\n        this.target.scrollIntoView({ block: 'start', inline: 'nearest', behavior: 'smooth' });\r\n      } else {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.maxScrollHeight > 0) {\r\n      if (this.target) {\r\n        this.target.scrollIntoView({ block: 'end', inline: 'nearest', behavior: 'smooth' });\r\n      } else {\r\n        window.scrollTo({ top: this.maxScrollHeight, behavior: 'smooth' });\r\n      }\r\n    }\r\n  }\r\n\r\n  private getScrollHeight(): number {\r\n    return document.documentElement.scrollTop || document.body.scrollTop;\r\n  }\r\n\r\n  private getMaxScrollHeight(): number {\r\n    return (document.documentElement.scrollHeight || document.body.scrollHeight) - (document.documentElement.offsetHeight || document.body.offsetHeight);\r\n  }\r\n}\r\n","<!-- Scroll icons top page -->\r\n<span class=\"scroll-icons top\">\r\n  <i class=\"fa fa-arrow-circle-down scroll-icon-bottom\" [ngClass]=\"{'d-none': !scrollBottom}\" aria-hidden=\"true\" title=\"Scroll to bottom\" (click)=\"scrollToBottom()\"></i>\r\n  <i class=\"fa fa-arrow-circle-up scroll-icon-top\" [ngClass]=\"{'d-none': !scrollTop}\" aria-hidden=\"true\" title=\"Scroll to top\" (click)=\"scrollToTop()\"></i>\r\n</span>\r\n\r\n<!-- Scroll icons bottom page -->\r\n<span class=\"scroll-icons bottom\">\r\n  <i class=\"fa fa-arrow-circle-down scroll-icon-bottom\" [ngClass]=\"{'d-none': !scrollBottom}\" aria-hidden=\"true\" title=\"Scroll to bottom\" (click)=\"scrollToBottom()\"></i>\r\n  <i class=\"fa fa-arrow-circle-up scroll-icon-top\" [ngClass]=\"{'d-none': !scrollTop}\" aria-hidden=\"true\" title=\"Scroll to top\" (click)=\"scrollToTop()\"></i>\r\n</span>\r\n","export enum Loglevel {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARNING = 'WARNING',\r\n  ERROR = 'ERROR',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n"],"names":["map","appSettings","ApiServiceTemplate","LogService","constructor","URL","webRoot","getLogs","lognum","url","httpClient","get","options","clearLogs","delete","pipe","getLogCount","count","t","factory","ɵfac","providedIn","Subject","ScrollService","scrollUp$","scrollDown$","triggerScrollUp","next","triggerScrollDown","DestroyRef","inject","takeUntilDestroyed","Router","MessageService","LogClearComponent","router","logService","messageService","destroyRef","ngOnInit","subscribe","result","navigateByUrl","error","showErrorMessage","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","LogClearComponent_Template","rf","ctx","styles","LogViewComponent","routes","path","redirectTo","pathMatch","component","NgClass","NgFor","FormsModule","SharedModule","ButtonModule","DropdownModule","PanelModule","webSocket","LoadingComponent","ScrollComponent","Loglevel","ɵɵelementStart","ɵɵlistener","LogViewComponent_ng_template_2_span_7_Template_span_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","logNum_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r1","selectedLogNum","ɵɵadvance","ɵɵtextInterpolate","LogViewComponent_ng_template_2_Template_span_click_5_listener","_r6","ctx_r5","ɵɵtemplate","LogViewComponent_ng_template_2_span_7_Template","LogViewComponent_ng_template_2_Template_p_button_onClick_9_listener","ctx_r7","toggleTailing","LogViewComponent_ng_template_2_Template_p_dropdown_ngModelChange_11_listener","$event","ctx_r8","selectedLoglevel","_c1","ctx_r0","logNums","tailButtonLabel","tailButtonIcon","tailingDisabled","loglevels","loading","tailing","LOG_MESSAGE_REGEX","logMessages","scrollService","filteredLogMessages","filter","logMessage","match","exec","groups","logContent","join","getLogLevels","Array","from","keys","i","logNum","logLines","handleLogTailing","logReversed","logLevels","push","label","value","Object","entries","forEach","entry","createLogWebSocket","protocol","window","location","host","config","deserializer","e","data","serializer","logWebsocket$","unshift","console","log","unsubscribe","consts","LogViewComponent_Template","LogViewComponent_ng_template_2_Template","ɵɵelement","i1","NgControlStatus","NgModel","i2","Panel","i3","PrimeTemplate","i4","Button","i5","Dropdown","scrollBottom","scrollHeight","maxScrollHeight","scrollTop","onWindowScroll","getScrollHeight","getMaxScrollHeight","scrollToTop","scrollToBottom","ngAfterContentChecked","target","scrollIntoView","block","inline","behavior","scrollTo","top","document","documentElement","body","offsetHeight","hostBindings","ScrollComponent_HostBindings","ɵɵresolveWindow","ScrollComponent_Template_i_click_1_listener","ScrollComponent_Template_i_click_2_listener","ScrollComponent_Template_i_click_4_listener","ScrollComponent_Template_i_click_5_listener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}