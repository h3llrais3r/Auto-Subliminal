{"version":3,"file":"109.7faff9198467db2c.js","mappings":"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","sources":["./src/app/modules/system/info/system-info.component.ts","./src/app/modules/system/info/system-info.component.html","./src/app/modules/system/status/system-status.component.html","./src/app/modules/system/status/system-status.component.ts","./src/app/modules/system/system-routing.module.ts","./src/app/modules/system/system.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SystemService } from '../../../core/services/api/system.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { SystemInfo, SystemInstallType } from '../../../shared/models/systeminfo';\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss']\r\n})\r\nexport class SystemInfoComponent implements OnInit {\r\n\r\n  private readonly NOT_AVAILABLE = 'N/A';\r\n  private readonly CHANGELOG_URL = 'https://raw.githubusercontent.com/h3llrais3r/Auto-Subliminal/master/changelog.html';\r\n\r\n  readonly SOURCE_URL = 'https://github.com/h3llrais3r/Auto-Subliminal';\r\n  readonly ISSUES_URL = `${this.SOURCE_URL}/issues`;\r\n  readonly WIKI_URL = `${this.SOURCE_URL}/wiki`;\r\n\r\n  systemInfo: SystemInfo;\r\n  changelog: string;\r\n  version: string;\r\n  versionUrl: string;\r\n  gitInstall = false;\r\n\r\n  constructor(private httpClient: HttpClient, private systemService: SystemService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Get system info\r\n    this.systemService.getSystemInfo().subscribe({\r\n      next: (systemInfo) => {\r\n        this.systemInfo = systemInfo;\r\n        if (this.systemInfo.installType === SystemInstallType.SOURCE) {\r\n          this.version = this.systemInfo.currentVersion;\r\n          this.versionUrl = this.systemInfo.currentVersionUrl;\r\n        } else if (this.systemInfo.installType === SystemInstallType.GIT) {\r\n          this.version = this.systemInfo.releaseVersion;\r\n          this.gitInstall = true;\r\n        } else {\r\n          this.version = this.NOT_AVAILABLE;\r\n        }\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the system info!')\r\n    });\r\n\r\n    // Get changelog\r\n    this.httpClient.get(this.CHANGELOG_URL, { responseType: 'text' }).subscribe({\r\n      next: (changelog) => {\r\n        this.changelog = this.parseChangelog(changelog);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the changelog!')\r\n    });\r\n  }\r\n\r\n  private parseChangelog(changelogHtml: string): string {\r\n    let result = '';\r\n    const parser = new DOMParser();\r\n    const parsedChangelog = parser.parseFromString(changelogHtml, 'text/html');\r\n    const releases = parsedChangelog.getElementsByClassName('release');\r\n    Array.from(releases).forEach((release, index) => {\r\n      const version = release.getElementsByClassName('version')[0];\r\n      const releaseDate = release.getElementsByClassName('releasedate')[0];\r\n      const changelog = release.getElementsByClassName('changelog')[0];\r\n      if (index > 0) {\r\n        result += '<hr class=\"separator\">';\r\n      }\r\n      result += '<div class=\"release\">';\r\n      result += '<div class=\"version-label\">Version</div>' + version.outerHTML;\r\n      result += '<div class=\"releasedate-label\">Release date</div>' + releaseDate.outerHTML;\r\n      result += '<div class=\"changelog-label\">Changelog</div>' + changelog.outerHTML;\r\n      result += '</div>';\r\n    });\r\n    return result;\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-tabView>\r\n    <!-- Info tab -->\r\n    <p-tabPanel header=\"General\">\r\n      <div class=\"info-wrapper\" *ngIf=\"systemInfo\">\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">OS</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.os}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">PID</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.pid}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Version</div>\r\n          <div class=\"info col-sm-12 col-md-8\" *ngIf=\"!versionUrl\">{{version}}</div>\r\n          <div class=\"info col-sm-12 col-md-8\" *ngIf=\"versionUrl\"><a href=\"{{versionUrl}}\" target=\"_blank\">{{version}}</a></div>\r\n        </div>\r\n        <!-- Only show git branch when installed through git -->\r\n        <div class=\"info-item row\" *ngIf=\"gitInstall\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Git branch</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{systemInfo.currentBranchUrl}}\" target=\"_blank\">{{systemInfo.currentBranch}}</a></div>\r\n        </div>\r\n        <!-- Only show git version when installed through git -->\r\n        <div class=\"info-item row\" *ngIf=\"gitInstall\">\r\n          <div class=\" info-label col-sm-12 col-md-4\">Git version</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{systemInfo.currentVersionUrl}}\" target=\"_blank\">{{systemInfo.currentVersion}}</a></div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">System encoding</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.systemEncoding}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Python version</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.pythonVersion}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Python location</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.pythonLocation}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Config file</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.configFile}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Database file</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.databaseFile}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Log file</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.logFile}}</div>\r\n        </div>\r\n        <hr class=\"separator\">\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Source</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{SOURCE_URL}}\" target=\"_blank\">{{SOURCE_URL}}</a></div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Issues</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{ISSUES_URL}}\" target=\"_blank\">{{ISSUES_URL}}</a></div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Wiki</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{WIKI_URL}}\" target=\"_blank\">{{WIKI_URL}}</a></div>\r\n        </div>\r\n      </div>\r\n    </p-tabPanel>\r\n    <!--- Changelog tab -->\r\n    <p-tabPanel header=\"Changelog\">\r\n      <div class=\"changelog-wrapper\" *ngIf=\"changelog\" [innerHTML]=\"changelog\"></div>\r\n    </p-tabPanel>\r\n  </p-tabView>\r\n</div>\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Status\">\r\n    <!-- Schedulers section -->\r\n    <div class=\"panel-section\">\r\n      <div class=\"panel-section-header\">Schedulers</div>\r\n      <p-table [value]=\"schedulers\" [autoLayout]=\"true\" [rowHover]=\"true\" styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped p-datatable-responsive-mode\">\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th pSortableColumn=\"name\"><span>Name<p-sortIcon field=\"name\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"active\"><span>Active<p-sortIcon field=\"active\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"alive\"><span>Alive<p-sortIcon field=\"alive\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"interval\"><span>Interval<p-sortIcon field=\"interval\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"lastRun\"><span>Last run<p-sortIcon field=\"lastRun\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"nextRun\"><span>Next run<p-sortIcon field=\"nextRun\"></p-sortIcon></span></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-scheduler>\r\n          <tr [ngClass]=\"{'scheduler-running': scheduler.running}\">\r\n            <td><span class=\"p-column-title\">Name</span><span class=\"p-column-data\">{{scheduler.name}}</span></td>\r\n            <td><span class=\"p-column-title\">Active</span><span class=\"p-column-data\">{{scheduler.active}}</span></td>\r\n            <td><span class=\"p-column-title\">Alive</span><span class=\"p-column-data\">{{scheduler.alive}}</span></td>\r\n            <td><span class=\"p-column-title\">Interval</span><span class=\"p-column-data\">{{scheduler.intervalFormatted}}</span></td>\r\n            <td><span class=\"p-column-title\">Last Run</span><span class=\"p-column-data\">{{scheduler.lastRunFormatted}}</span></td>\r\n            <td><span class=\"p-column-title\">Next run</span><span class=\"p-column-data\">{{scheduler.running ? 'Running' : scheduler.nextRunFormatted}}</span></td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <!-- Paths section -->\r\n    <div class=\"panel-section\">\r\n      <div class=\"panel-section-header\">Paths</div>\r\n      <p-table [value]=\"paths\" [autoLayout]=\"true\" [rowHover]=\"true\" styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped p-datatable-responsive-mode\">\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th pSortableColumn=\"name\"><span>Name<p-sortIcon field=\"name\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"path\"><span>Path<p-sortIcon field=\"path\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"freeBytes\"><span>Free space<p-sortIcon field=\"freeBytes\"></p-sortIcon></span></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-pathInfo>\r\n          <tr>\r\n            <td><span class=\"p-column-title\">Name</span><span class=\"p-column-data\">{{pathInfo.name}}</span></td>\r\n            <td><span class=\"p-column-title\">Path</span><span class=\"p-column-data wrap-text\">{{pathInfo.path}}</span></td>\r\n            <td><span class=\"p-column-title\">Free space</span><span class=\"p-column-data\">{{pathInfo.freeSpaceFormatted}}<i *ngIf=\"pathInfo.freePercentage < 10\" class=\"fa fa-exclamation-triangle text-danger ml-1\" title=\"Low disk space\"></i></span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Scheduler } from 'src/app/shared/models/scheduler';\r\nimport { SystemService } from '../../../core/services/api/system.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { SystemEventService } from '../../../core/services/system-event.service';\r\nimport { PathInfo } from '../../../shared/models/pathinfo';\r\n\r\n@Component({\r\n  selector: 'app-system-status',\r\n  templateUrl: './system-status.component.html',\r\n  styleUrls: ['./system-status.component.scss']\r\n})\r\nexport class SystemStatusComponent implements OnInit {\r\n\r\n  schedulers: Scheduler[];\r\n  paths: PathInfo[];\r\n\r\n  constructor(private systemService: SystemService, private systemEventService: SystemEventService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Get schedulers\r\n    this.systemService.getSchedulers().subscribe({\r\n      next: (schedulers) => {\r\n        this.schedulers = schedulers;\r\n        // Subscribe on scheduler start events\r\n        this.systemEventService.schedulerStart.subscribe({\r\n          next: (startedScheduler) => {\r\n            // Replace started scheduler in list of schedulers\r\n            this.schedulers = this.schedulers.map((scheduler) => scheduler.name === startedScheduler.name ? startedScheduler : scheduler);\r\n          }\r\n        });\r\n        // Subscribe on scheduler finish events\r\n        this.systemEventService.schedulerFinish.subscribe({\r\n          next: (finishedScheduler) => {\r\n            // Replace finished scheduler in list of schedulers\r\n            this.schedulers = this.schedulers.map((scheduler) => scheduler.name === finishedScheduler.name ? finishedScheduler : scheduler);\r\n          }\r\n        });\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the system schedulers!')\r\n    });\r\n    // Get paths\r\n    this.systemService.getPaths().subscribe({\r\n      next: (paths) => {\r\n        this.paths = paths;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the system paths!')\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SystemInfoComponent } from './info/system-info.component';\r\nimport { SystemStatusComponent } from './status/system-status.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'info',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'info',\r\n    component: SystemInfoComponent\r\n  },\r\n  {\r\n    path: 'status',\r\n    component: SystemStatusComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'info'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SystemRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { SystemInfoComponent } from './info/system-info.component';\r\nimport { SystemStatusComponent } from './status/system-status.component';\r\nimport { SystemRoutingModule } from './system-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SystemInfoComponent,\r\n    SystemStatusComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    SystemRoutingModule\r\n  ]\r\n})\r\nexport class SystemModule { }\r\n"],"names":["SystemInstallType","i0","SystemInfoComponent","constructor","httpClient","systemService","messageService","SOURCE_URL","ngOnInit","getSystemInfo","subscribe","next","systemInfo","installType","SOURCE","version","currentVersion","versionUrl","currentVersionUrl","GIT","releaseVersion","gitInstall","NOT_AVAILABLE","error","showErrorMessage","get","CHANGELOG_URL","responseType","changelog","parseChangelog","changelogHtml","result","parser","DOMParser","parsedChangelog","parseFromString","releases","getElementsByClassName","Array","from","forEach","release","index","releaseDate","outerHTML","selectors","decls","vars","consts","template","SystemStatusComponent","systemEventService","getSchedulers","schedulers","schedulerStart","startedScheduler","map","scheduler","name","schedulerFinish","finishedScheduler","getPaths","paths","RouterModule","routes","path","redirectTo","pathMatch","component","SystemRoutingModule","forChild","imports","exports","SharedModule","SystemModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}