{"version":3,"file":"710.3550245ff4723cb3.js","mappings":"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","sources":["./src/app/core/services/api/log.service.ts","./src/app/modules/log/clear/log-clear.component.ts","./src/app/modules/log/log-routing.module.ts","./src/app/modules/log/log.module.ts","./src/app/modules/log/view/log-view.component.ts","./src/app/modules/log/view/log-view.component.html","./src/app/shared/models/loglevel.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/logs`;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super(httpClient);\r\n  }\r\n\r\n  getLogs(lognum?: number): Observable<string[]> {\r\n    const url = lognum ? `${this.URL}/${lognum}` : this.URL;\r\n    return this.httpClient.get<string[]>(url, this.options);\r\n  }\r\n\r\n  clearLogs(): Observable<boolean> {\r\n    return this.httpClient.delete<void>(this.URL, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getLogCount(): Observable<number> {\r\n    return this.httpClient.get<Count>(`${this.URL}/count`, this.options)\r\n      .pipe(map((count) => count.count));\r\n  }\r\n}\r\n\r\ntype Count = { count: number };\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-log-clear',\r\n  templateUrl: './log-clear.component.html',\r\n  styleUrls: ['./log-clear.component.scss']\r\n})\r\nexport class LogClearComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private logService: LogService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.logService.clearLogs().subscribe({\r\n      next: (result) => {\r\n        // Redirect to log view after the logs are cleared\r\n        if (result) {\r\n          this.router.navigateByUrl('/log/view');\r\n        }\r\n      },\r\n      error: () => this.messageService.showErrorMessage(`Unable to clear the logs!`)\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\nimport { LogViewComponent } from './view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'view',\r\n    component: LogViewComponent\r\n  },\r\n  {\r\n    path: 'clear',\r\n    component: LogClearComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'view'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LogRoutingModule } from './log-routing.module';\r\nimport { LogViewComponent } from './view/log-view.component';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogViewComponent,\r\n    LogClearComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    LogRoutingModule\r\n  ]\r\n})\r\nexport class LogModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { ScrollService } from '../../../core/services/scroll.service';\r\nimport { Loglevel } from '../../../shared/models/loglevel';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss']\r\n})\r\nexport class LogViewComponent implements OnInit {\r\n\r\n  private readonly LOG_MESSAGE_REGEX = /^((?<date>\\d{4}\\-\\d{2}\\-\\d{2})\\s(?<time>\\d{2}:\\d{2}:\\d{2},\\d{3})\\s(?<loglevel>\\w+))/;\r\n\r\n  logNums: number[];\r\n  selectedLogNum = 0;\r\n  loglevels: SelectItem[];\r\n  selectedLoglevel = '';\r\n  loading = false;\r\n  tailing = false;\r\n  tailingDisabled = false; // true for non current (lognum != 0) logfiles as tailing has no use in this case\r\n  tailButtonLabel = 'Start tailing';\r\n  tailButtonIcon = 'pi pi-play';\r\n\r\n  private logWebsocket: WebSocketSubject<string>;\r\n  private logMessages: string[] = [];\r\n\r\n  constructor(private logService: LogService, private messageService: MessageService, private scrollService: ScrollService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loglevels = this.getLogLevels();\r\n    this.logService.getLogCount().subscribe({\r\n      next: (count) => this.logNums = Array.from(Array(count).keys()).map((i) => i + 1) // get array starting from 1\r\n    });\r\n    this.getLogs(0); // 0 = current logfile\r\n  }\r\n\r\n  getLogs(logNum: number): void {\r\n    this.loading = true;\r\n    this.selectedLogNum = logNum;\r\n    this.tailingDisabled = this.selectedLogNum !== 0; // tailing only allowed when on current logfile -> lognum = 0\r\n    this.logService.getLogs(logNum).subscribe({\r\n      next: (logLines) => {\r\n        this.logMessages = logLines;\r\n        this.loading = false;\r\n        this.handleLogTailing();\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the logs!')\r\n    });\r\n  }\r\n\r\n  toggleTailing(): void {\r\n    this.tailing = !this.tailing;\r\n    if (this.tailing) {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Stop tailing';\r\n      this.tailButtonIcon = 'pi pi-pause';\r\n      // Scroll to right position when tailing is enabled\r\n      if (appSettings.logReversed) {\r\n        this.scrollService.triggerScrollUp();\r\n      } else {\r\n        this.scrollService.triggerScrollDown();\r\n      }\r\n    } else {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Start tailing';\r\n      this.tailButtonIcon = 'pi pi-play';\r\n    }\r\n    this.handleLogTailing();\r\n  }\r\n\r\n  get filteredLogMessages(): string[] {\r\n    return this.logMessages.filter((logMessage) => {\r\n      if (this.selectedLoglevel) {\r\n        const match = this.LOG_MESSAGE_REGEX.exec(logMessage);\r\n        return match && match.groups.loglevel === this.selectedLoglevel;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get logContent(): string {\r\n    return this.filteredLogMessages.join('\\n');\r\n  }\r\n\r\n  private getLogLevels(): SelectItem[] {\r\n    const logLevels: SelectItem[] = [];\r\n    logLevels.push({ label: 'ALL', value: '' });\r\n    Object.entries(Loglevel).forEach((entry) => logLevels.push({ label: entry[0], value: entry[1] }));\r\n    return logLevels;\r\n  }\r\n\r\n  private createLogWebSocket(): WebSocketSubject<string> {\r\n    let protocol = 'ws:';\r\n    if (window.location.protocol === 'https:') {\r\n      protocol = 'wss:';\r\n    }\r\n    const url = `${protocol}//${window.location.host}${appSettings.webRoot}/websocket/log`;\r\n    const config: WebSocketSubjectConfig<string> = {\r\n      url,\r\n      deserializer: (e: MessageEvent) => e.data as string,\r\n      serializer: (value: string) => value,\r\n    };\r\n    return webSocket(config);\r\n  }\r\n\r\n  private handleLogTailing(): void {\r\n    if (this.tailing && !this.tailingDisabled) {\r\n      // Subscribe on new logs once loaded (only for current logfile -> logNum = 0)\r\n      this.logWebsocket = this.createLogWebSocket(); // Need to create a new socket after unsubscribe\r\n      this.logWebsocket.subscribe({\r\n        next: (logMessage) => {\r\n          if (appSettings.logReversed) {\r\n            // Append to the top\r\n            this.logMessages.unshift(logMessage);\r\n            this.scrollService.triggerScrollUp();\r\n          } else {\r\n            // Append to the end\r\n            this.logMessages.push(logMessage);\r\n            this.scrollService.triggerScrollDown();\r\n          }\r\n        }\r\n      });\r\n      console.log('Log tailing enabled');\r\n    } else {\r\n      // Unsubscribe when not tailing\r\n      if (this.logWebsocket) {\r\n        this.logWebsocket.unsubscribe();\r\n      }\r\n      console.log('Log tailing disabled');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel>\r\n    <!-- Custom panel header -->\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"w-100\">\r\n        <div class=\"p-panel-title\">Logfile</div>\r\n        <div>\r\n          <span class=\"log-num\">\r\n            <span class=\"p-tag p-tag-rounded\" [ngClass]=\"{'p-tag-secondary': selectedLogNum !== 0}\" (click)=\"getLogs(0)\">current</span>\r\n            <span *ngFor=\"let logNum of logNums\" class=\"p-badge\" [ngClass]=\"{'p-badge-secondary': selectedLogNum !== logNum}\" (click)=\"getLogs(logNum)\">{{logNum}}</span>\r\n          </span>\r\n          <span class=\"log-tail\">\r\n            <p-button [label]=\"tailButtonLabel\" [icon]=\"tailButtonIcon\" styleClass=\"p-button-outlined\" [disabled]=\"tailingDisabled\" (onClick)=\"toggleTailing()\"></p-button>\r\n          </span>\r\n          <span class=\"log-level\">\r\n            <p-dropdown [options]=\"loglevels\" [(ngModel)]=\"selectedLoglevel\" styleClass=\"p-dropdown-ar\" scrollHeight=\"300px\"></p-dropdown>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Log content -->\r\n    <pre class=\"log-content\">{{logContent}}</pre>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Loading component -->\r\n<app-loading [visible]=\"loading\"></app-loading>\r\n\r\n<!-- Scroll component -->\r\n<app-scroll></app-scroll>\r\n","export enum Loglevel {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARNING = 'WARNING',\r\n  ERROR = 'ERROR',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n"],"names":["map","appSettings","ApiServiceTemplate","LogService","constructor","httpClient","webRoot","getLogs","lognum","url","URL","get","options","clearLogs","delete","pipe","getLogCount","count","factory","providedIn","LogClearComponent","router","logService","messageService","ngOnInit","subscribe","next","result","navigateByUrl","error","showErrorMessage","selectors","decls","vars","template","styles","RouterModule","LogViewComponent","routes","path","redirectTo","pathMatch","component","LogRoutingModule","forChild","imports","exports","SharedModule","LogModule","declarations","webSocket","Loglevel","i0","scrollService","loglevels","getLogLevels","logNums","Array","from","keys","i","logNum","loading","selectedLogNum","tailingDisabled","logLines","logMessages","handleLogTailing","toggleTailing","tailing","tailButtonLabel","tailButtonIcon","logReversed","triggerScrollUp","triggerScrollDown","filteredLogMessages","filter","logMessage","selectedLoglevel","match","LOG_MESSAGE_REGEX","exec","groups","loglevel","logContent","join","logLevels","push","label","value","Object","entries","forEach","entry","createLogWebSocket","protocol","window","location","host","config","deserializer","e","data","serializer","logWebsocket","unshift","console","log","unsubscribe","consts"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}