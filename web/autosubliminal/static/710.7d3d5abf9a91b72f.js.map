{"version":3,"file":"710.7d3d5abf9a91b72f.js","mappings":"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","sources":["./src/app/core/services/api/log.service.ts","./src/app/modules/log/clear/log-clear.component.ts","./src/app/modules/log/log-routing.module.ts","./src/app/modules/log/log.module.ts","./src/app/modules/log/view/log-view.component.ts","./src/app/modules/log/view/log-view.component.html","./src/app/shared/models/loglevel.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/logs`;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super(httpClient);\r\n  }\r\n\r\n  getLogs(lognum?: number): Observable<string[]> {\r\n    const url = lognum ? `${this.URL}/${lognum}` : this.URL;\r\n    return this.httpClient.get<string[]>(url, this.options);\r\n  }\r\n\r\n  clearLogs(): Observable<boolean> {\r\n    return this.httpClient.delete<void>(this.URL, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getLogCount(): Observable<number> {\r\n    return this.httpClient.get<Count>(`${this.URL}/count`, this.options)\r\n      .pipe(map((count) => count.count));\r\n  }\r\n}\r\n\r\ntype Count = { count: number };\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-log-clear',\r\n  templateUrl: './log-clear.component.html',\r\n  styleUrls: ['./log-clear.component.scss']\r\n})\r\nexport class LogClearComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private logService: LogService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.logService.clearLogs().subscribe(\r\n      (result) => {\r\n        // Redirect to log view after the logs are cleared\r\n        if (result) {\r\n          this.router.navigateByUrl('/log/view');\r\n        }\r\n      },\r\n      () => this.messageService.showErrorMessage(`Unable to clear the logs!`)\r\n    );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\nimport { LogViewComponent } from './view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'view',\r\n    component: LogViewComponent\r\n  },\r\n  {\r\n    path: 'clear',\r\n    component: LogClearComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'view'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LogRoutingModule } from './log-routing.module';\r\nimport { LogViewComponent } from './view/log-view.component';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogViewComponent,\r\n    LogClearComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    LogRoutingModule\r\n  ]\r\n})\r\nexport class LogModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { ScrollService } from '../../../core/services/scroll.service';\r\nimport { Loglevel } from '../../../shared/models/loglevel';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss']\r\n})\r\nexport class LogViewComponent implements OnInit {\r\n\r\n  private readonly LOG_MESSAGE_REGEX = /^((?<date>\\d{4}\\-\\d{2}\\-\\d{2})\\s(?<time>\\d{2}:\\d{2}:\\d{2},\\d{3})\\s(?<loglevel>\\w+))/;\r\n\r\n  logNums: number[];\r\n  selectedLogNum = 0;\r\n  loglevels: SelectItem[];\r\n  selectedLoglevel = '';\r\n  loading = false;\r\n  tailing = false;\r\n  tailingDisabled = false; // true for non current (lognum != 0) logfiles as tailing has no use in this case\r\n  tailButtonLabel = 'Start tailing';\r\n  tailButtonIcon = 'pi pi-play';\r\n\r\n  private logWebsocket: WebSocketSubject<string>;\r\n  private logMessages: string[] = [];\r\n\r\n  constructor(private logService: LogService, private messageService: MessageService, private scrollService: ScrollService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loglevels = this.getLogLevels();\r\n    this.logService.getLogCount().subscribe((count) => this.logNums = Array.from(Array(count).keys()).map((i) => i + 1)); // get array starting from 1\r\n    this.getLogs(0); // 0 = current logfile\r\n  }\r\n\r\n  getLogs(logNum: number): void {\r\n    this.loading = true;\r\n    this.selectedLogNum = logNum;\r\n    this.tailingDisabled = this.selectedLogNum !== 0; // tailing only allowed when on current logfile -> lognum = 0\r\n    this.logService.getLogs(logNum).subscribe(\r\n      (logLines) => {\r\n        this.logMessages = logLines;\r\n        this.loading = false;\r\n        this.handleLogTailing();\r\n      },\r\n      () => this.messageService.showErrorMessage('Unable to get the logs!')\r\n    );\r\n  }\r\n\r\n  toggleTailing(): void {\r\n    this.tailing = !this.tailing;\r\n    if (this.tailing) {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Stop tailing';\r\n      this.tailButtonIcon = 'pi pi-pause';\r\n      // Scroll to right position when tailing is enabled\r\n      if (appSettings.logReversed) {\r\n        this.scrollService.triggerScrollUp();\r\n      } else {\r\n        this.scrollService.triggerScrollDown();\r\n      }\r\n    } else {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Start tailing';\r\n      this.tailButtonIcon = 'pi pi-play';\r\n    }\r\n    this.handleLogTailing();\r\n  }\r\n\r\n  get filteredLogMessages(): string[] {\r\n    return this.logMessages.filter((logMessage) => {\r\n      if (this.selectedLoglevel) {\r\n        const match = this.LOG_MESSAGE_REGEX.exec(logMessage);\r\n        return match && match.groups.loglevel === this.selectedLoglevel;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get logContent(): string {\r\n    return this.filteredLogMessages.join('\\n');\r\n  }\r\n\r\n  private getLogLevels(): SelectItem[] {\r\n    const logLevels: SelectItem[] = [];\r\n    logLevels.push({ label: 'ALL', value: '' });\r\n    Object.entries(Loglevel).forEach((entry) => logLevels.push({ label: entry[0], value: entry[1] }));\r\n    return logLevels;\r\n  }\r\n\r\n  private createLogWebSocket(): WebSocketSubject<string> {\r\n    let protocol = 'ws:';\r\n    if (window.location.protocol === 'https:') {\r\n      protocol = 'wss:';\r\n    }\r\n    const url = `${protocol}//${window.location.host}${appSettings.webRoot}/websocket/log`;\r\n    const config: WebSocketSubjectConfig<string> = {\r\n      url,\r\n      deserializer: (e: MessageEvent) => e.data as string,\r\n      serializer: (value: string) => value,\r\n    };\r\n    return webSocket(config);\r\n  }\r\n\r\n  private handleLogTailing(): void {\r\n    if (this.tailing && !this.tailingDisabled) {\r\n      // Subscribe on new logs once loaded (only for current logfile -> logNum = 0)\r\n      this.logWebsocket = this.createLogWebSocket(); // Need to create a new socket after unsubscribe\r\n      this.logWebsocket.subscribe(\r\n        (logMessage) => {\r\n          if (appSettings.logReversed) {\r\n            // Append to the top\r\n            this.logMessages.unshift(logMessage);\r\n            this.scrollService.triggerScrollUp();\r\n          } else {\r\n            // Append to the end\r\n            this.logMessages.push(logMessage);\r\n            this.scrollService.triggerScrollDown();\r\n          }\r\n        });\r\n      console.log('Log tailing enabled');\r\n    } else {\r\n      // Unsubscribe when not tailing\r\n      if (this.logWebsocket) {\r\n        this.logWebsocket.unsubscribe();\r\n      }\r\n      console.log('Log tailing disabled');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel>\r\n    <!-- Custom panel header -->\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"w-100\">\r\n        <div class=\"p-panel-title\">Logfile</div>\r\n        <div>\r\n          <span class=\"log-num\">\r\n            <span class=\"p-tag p-tag-rounded\" [ngClass]=\"{'p-tag-secondary': selectedLogNum !== 0}\" (click)=\"getLogs(0)\">current</span>\r\n            <span *ngFor=\"let logNum of logNums\" class=\"p-badge\" [ngClass]=\"{'p-badge-secondary': selectedLogNum !== logNum}\" (click)=\"getLogs(logNum)\">{{logNum}}</span>\r\n          </span>\r\n          <span class=\"log-tail\">\r\n            <p-button [label]=\"tailButtonLabel\" [icon]=\"tailButtonIcon\" styleClass=\"p-button-outlined\" [disabled]=\"tailingDisabled\" (onClick)=\"toggleTailing()\"></p-button>\r\n          </span>\r\n          <span class=\"log-level\">\r\n            <p-dropdown [options]=\"loglevels\" [(ngModel)]=\"selectedLoglevel\" styleClass=\"p-dropdown-ar\" scrollHeight=\"300px\"></p-dropdown>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Log content -->\r\n    <pre class=\"log-content\">{{logContent}}</pre>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Loading component -->\r\n<app-loading [visible]=\"loading\"></app-loading>\r\n\r\n<!-- Scroll component -->\r\n<app-scroll></app-scroll>\r\n","export enum Loglevel {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARNING = 'WARNING',\r\n  ERROR = 'ERROR',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n"],"names":["map","appSettings","ApiServiceTemplate","LogService","constructor","httpClient","webRoot","getLogs","lognum","url","URL","get","options","clearLogs","delete","pipe","getLogCount","count","i0","factory","providedIn","LogClearComponent","router","logService","messageService","ngOnInit","subscribe","result","navigateByUrl","showErrorMessage","selectors","decls","vars","template","styles","RouterModule","LogViewComponent","routes","path","redirectTo","pathMatch","component","LogRoutingModule","forChild","imports","exports","SharedModule","LogModule","declarations","webSocket","Loglevel","ctx_r0","scrollService","loglevels","getLogLevels","logNums","Array","from","keys","i","logNum","loading","selectedLogNum","tailingDisabled","logLines","logMessages","handleLogTailing","toggleTailing","tailing","tailButtonLabel","tailButtonIcon","logReversed","triggerScrollUp","triggerScrollDown","filteredLogMessages","filter","logMessage","selectedLoglevel","match","LOG_MESSAGE_REGEX","exec","groups","loglevel","logContent","join","logLevels","push","label","value","Object","entries","forEach","entry","createLogWebSocket","protocol","window","location","host","config","deserializer","e","data","serializer","logWebsocket","unshift","console","log","unsubscribe","consts"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}