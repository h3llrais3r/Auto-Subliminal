{"version":3,"file":"202.af03a12585fef06b.js","mappings":"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","sources":["./src/app/core/services/api/filesystem.service.ts","./src/app/modules/settings/general/settings-general.component.ts","./src/app/modules/settings/general/settings-general.component.html","./src/app/modules/settings/library/settings-library.component.ts","./src/app/modules/settings/library/settings-library.component.html","./src/app/modules/settings/logging/settings-logging.component.ts","./src/app/modules/settings/logging/settings-logging.component.html","./src/app/modules/settings/namemapping/settings-namemapping.component.ts","./src/app/modules/settings/namemapping/settings-namemapping.component.html","./src/app/modules/settings/notification/settings-notification.component.ts","./src/app/modules/settings/notification/settings-notification.component.html","./src/app/modules/settings/postprocessing/settings-postprocessing.component.ts","./src/app/modules/settings/postprocessing/settings-postprocessing.component.html","./src/app/modules/settings/settings.routes.ts","./src/app/modules/settings/skipmapping/settings-skipmapping.component.ts","./src/app/modules/settings/skipmapping/settings-skipmapping.component.html","./src/app/modules/settings/subliminal/settings-subliminal.component.ts","./src/app/modules/settings/subliminal/settings-subliminal.component.html","./src/app/modules/settings/webserver/settings-webserver.component.ts","./src/app/modules/settings/webserver/settings-webserver.component.html","./src/app/shared/components/file-browser/file-browser.component.ts","./src/app/shared/components/file-browser/file-browser.component.html","./src/app/shared/components/input/dropdown/input-dropdown.component.ts","./src/app/shared/components/input/dropdown/input-dropdown.component.html","./src/app/shared/components/input/file-browser/input-file-browser.component.ts","./src/app/shared/components/input/file-browser/input-file-browser.component.html","./src/app/shared/components/input/multi-file-browser/input-multi-file-browser.component.ts","./src/app/shared/components/input/multi-file-browser/input-multi-file-browser.component.html","./src/app/shared/components/input/multi-text/input-multi-text.component.ts","./src/app/shared/components/input/multi-text/input-multi-text.component.html","./src/app/shared/models/filebrowser.ts","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/primeng/fesm2022/primeng-listbox.mjs","./node_modules/primeng/fesm2022/primeng-message.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { FileBrowserResult } from '../../../shared/models/filebrowser';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileSystemService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/filesystem`;\r\n\r\n  browse(path = '', includeFiles = true, includeFolders = true): Observable<FileBrowserResult> {\r\n    const url = `${this.URL}?path=${path}&includeFiles=${includeFiles}&includeFolders=${includeFolders}`;\r\n    return this.httpClient.get<FileBrowserResult>(url, this.options);\r\n  }\r\n}\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { FormValidators } from '../../../shared/components/forms/form-validators';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputFileBrowserComponent } from '../../../shared/components/input/file-browser/input-file-browser.component';\r\nimport { InputMultiFileBrowserComponent } from '../../../shared/components/input/multi-file-browser/input-multi-file-browser.component';\r\nimport { InputMultiTextComponent } from '../../../shared/components/input/multi-text/input-multi-text.component';\r\nimport { InputNumberComponent } from '../../../shared/components/input/number/input-number.component';\r\nimport { GeneralSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-general',\r\n  templateUrl: './settings-general.component.html',\r\n  styleUrls: ['./settings-general.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, PanelModule, FormsModule, ReactiveFormsModule, ButtonModule, IconDropdownComponent, InputMultiFileBrowserComponent, InputDropdownComponent, InputMultiTextComponent, InputNumberComponent, InputFileBrowserComponent]\r\n})\r\nexport class SettingsGeneralComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  scanDiskIntervalDefault: number;\r\n  checkSubIntervalDefault: number;\r\n  checkSubDeadlineDefault: number;\r\n  checkSubDeltaDefault: number;\r\n  checkVersionIntervalDefault: number;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  languages: SelectItem[];\r\n  timestampFormats: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.initDefaults();\r\n    this.buildSelectItems();\r\n    this.settingsService.getGeneralSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (generalSettings) => {\r\n        this.buildForm(generalSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the general settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateGeneralSettings(this.getGeneralSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('General settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the general settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  showFfmpegPath(): boolean {\r\n    // FFMPEG is required for manualSubSync\r\n    return FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSubSync');\r\n  }\r\n\r\n  private initDefaults(): void {\r\n    this.scanDiskIntervalDefault = appSettings.scanDiskIntervalDefault;\r\n    this.checkSubIntervalDefault = appSettings.checkSubIntervalDefault;\r\n    this.checkSubDeadlineDefault = appSettings.checkSubDeadlineDefault;\r\n    this.checkSubDeltaDefault = appSettings.checkSubDeltaDefault;\r\n    this.checkVersionIntervalDefault = appSettings.checkVersionIntervalDefault;\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Languages\r\n    this.languages = [];\r\n    this.languages.push({ label: 'Select a language', value: '' });\r\n    appSettings.languages.forEach((language) => this.languages.push({ label: language.name, value: language.code }));\r\n    // Timestamp formats (python strftime() formats)\r\n    this.timestampFormats = [];\r\n    this.timestampFormats.push({ label: 'YYYY-MM-DD HH:MM:SS', value: '%Y-%m-%d %H:%M:%S' });\r\n    this.timestampFormats.push({ label: 'MM-DD-YYYY HH:MM:SS', value: '%m-%d-%Y %H:%M:%S' });\r\n    this.timestampFormats.push({ label: 'DD-MM-YYYY HH:MM:SS', value: '%d-%m-%Y %H:%M:%S' });\r\n  }\r\n\r\n  private buildForm(generalSettings: GeneralSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      videoPaths: [generalSettings.videoPaths || [], [Validators.required, FormValidators.notEmpty]],\r\n      defaultLanguage: [generalSettings.defaultLanguage, [Validators.required]],\r\n      defaultLanguageSuffix: [generalSettings.defaultLanguageSuffix, [Validators.required]],\r\n      additionalLanguages: [generalSettings.additionalLanguages || [], []],\r\n      manualSearchWithScoring: [generalSettings.manualSearchWithScoring, [Validators.required]],\r\n      scanDiskInterval: [generalSettings.scanDiskInterval, [Validators.required]],\r\n      scanDiskAtStartup: [generalSettings.scanDiskAtStartup, [Validators.required]],\r\n      checkSubInterval: [generalSettings.checkSubInterval, [Validators.required]],\r\n      checkSubAtStartup: [generalSettings.checkSubAtStartup, [Validators.required]],\r\n      checkSubDeadline: [generalSettings.checkSubDeadline, [Validators.required]],\r\n      checkSubDelta: [generalSettings.checkSubDelta, [Validators.required]],\r\n      checkVersionInterval: [generalSettings.checkVersionInterval, [Validators.required]],\r\n      checkVersionAtStartup: [generalSettings.checkVersionAtStartup, [Validators.required]],\r\n      checkVersionAutoUpdate: [generalSettings.checkVersionAutoUpdate, [Validators.required]],\r\n      scanEmbeddedSubs: [generalSettings.scanEmbeddedSubs, [Validators.required]],\r\n      scanHardcodedSubs: [generalSettings.scanHardcodedSubs, [Validators.required]],\r\n      skipHiddenDirs: [generalSettings.skipHiddenDirs, [Validators.required]],\r\n      detectInvalidSubLanguage: [generalSettings.detectInvalidSubLanguage, [Validators.required]],\r\n      detectedLanguageProbability: [generalSettings.detectedLanguageProbability * 100, [Validators.required]], // as percentage\r\n      manualSubSync: [generalSettings.manualSubSync, [Validators.required]],\r\n      ffmpegPath: [generalSettings.ffmpegPath, []],\r\n      minVideoFileSize: [generalSettings.minVideoFileSize, [Validators.required]],\r\n      maxDbResults: [generalSettings.maxDbResults, [Validators.required]],\r\n      timestampFormat: [generalSettings.timestampFormat, [Validators.required]]\r\n    }, { validator: this.globalFormValidator });\r\n  }\r\n\r\n  private globalFormValidator(formGroup: UntypedFormGroup): ValidationErrors | null {\r\n    // Return error ffmpegPath is not filled in when manualSubSync is enabled\r\n    const error: ValidationErrors = { ffmpegPathRequired: true };\r\n    const ffmpegPath = FormUtils.getFormControlValue<string>(formGroup, 'ffmpegPath');\r\n    if (FormUtils.getFormControlValue<boolean>(formGroup, 'manualSubSync') && (!ffmpegPath || !ffmpegPath.trim())) {\r\n      FormUtils.addFormControlValidationErrors(formGroup.controls['ffmpegPath'], error);\r\n      FormUtils.markFormControlFieldsAsDirty(formGroup);\r\n      return error;\r\n    }\r\n    FormUtils.clearFormControlValidationErrors(formGroup.controls['ffmpegPath'], error);\r\n    return null;\r\n  }\r\n\r\n  private getGeneralSettings(): GeneralSettings {\r\n    const settings = new GeneralSettings();\r\n    settings.videoPaths = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'videoPaths');\r\n    settings.defaultLanguage = FormUtils.getFormControlValue<string>(this.settingsForm, 'defaultLanguage');\r\n    settings.defaultLanguageSuffix = FormUtils.getFormControlValue<string>(this.settingsForm, 'defaultLanguageSuffix');\r\n    settings.additionalLanguages = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'additionalLanguages');\r\n    settings.manualSearchWithScoring = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSearchWithScoring');\r\n    settings.scanDiskInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'scanDiskInterval');\r\n    settings.scanDiskAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanDiskAtStartup');\r\n    settings.checkSubInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubInterval');\r\n    settings.checkSubAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkSubAtStartup');\r\n    settings.checkSubDeadline = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubDeadline');\r\n    settings.checkSubDelta = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubDelta');\r\n    settings.checkVersionInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkVersionInterval');\r\n    settings.checkVersionAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkVersionAtStartup');\r\n    settings.checkVersionAutoUpdate = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkVersionAutoUpdate');\r\n    settings.scanEmbeddedSubs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanEmbeddedSubs');\r\n    settings.scanHardcodedSubs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanHardcodedSubs');\r\n    settings.skipHiddenDirs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'skipHiddenDirs');\r\n    settings.detectInvalidSubLanguage = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'detectInvalidSubLanguage');\r\n    settings.detectedLanguageProbability = FormUtils.getFormControlValue<number>(this.settingsForm, 'detectedLanguageProbability') / 100; // percentage as decimal number\r\n    settings.manualSubSync = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSubSync');\r\n    settings.ffmpegPath = FormUtils.getFormControlValue<string>(this.settingsForm, 'ffmpegPath');\r\n    settings.minVideoFileSize = FormUtils.getFormControlValue<number>(this.settingsForm, 'minVideoFileSize');\r\n    settings.maxDbResults = FormUtils.getFormControlValue<number>(this.settingsForm, 'maxDbResults');\r\n    settings.timestampFormat = FormUtils.getFormControlValue<string>(this.settingsForm, 'timestampFormat');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"General settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Video paths -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"videoPaths\" class=\"label\">Video paths</label>\r\n          <app-icon-dropdown>\r\n            <li>The folders where your videos are located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-file-browser formControlName=\"videoPaths\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-multi-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Default language -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"defaultLanguage\" class=\"label\">Default language</label>\r\n          <app-icon-dropdown>\r\n            <li>The default subtitle language.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"defaultLanguage\" [options]=\"languages\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Default language suffix -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"defaultLanguageSuffix\" class=\"label\">Default language suffix</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the default subtitle will be extended with the language code (f.e. showname.en.srt).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"defaultLanguageSuffix\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Additional languages -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"additionalLanguages\" class=\"label\">Additional languages</label>\r\n          <app-icon-dropdown>\r\n            <li>The addditional subtitle languages in alpha2 or ietf format.</li>\r\n            <li>If additional languages are provided, subtitles will be extended with the language code (f.e. showname.en.srt).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"additionalLanguages\" [options]=\"languages\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Manual search with scoring -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualSearchWithScoring\" class=\"label\">Manual search with scoring</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, only subtitles matching the minimum default score will be returned.</li>\r\n            <li>When disabled, all found subtitles will be returned.</li>\r\n            <li>REMARK: Disable it at your own risk because it might return even unrelated subtitles!</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualSearchWithScoring\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan disk interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanDiskInterval\" class=\"label\">Disk scan interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Disk scan interval of the ScanDisk thread. It scans the disk for missing subtitle files.</li>\r\n            <li>Cannot be set lower then {{scanDiskIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"scanDiskInterval\" [min]=\"scanDiskIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Scan disk at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanDiskAtStartup\" class=\"label\">Disk scan at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the ScanDisk thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the disk scan interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanDiskAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubInterval\" class=\"label\">Subtitle check interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check interval of the CheckSub thread. It checks if there is a match on the configured subliminal providers.</li>\r\n            <li>Cannot be set lower then {{checkSubIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubInterval\" [min]=\"checkSubIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubAtStartup\" class=\"label\">Subtitle check at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the CheckSub thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the subtitle check interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkSubAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub deadline -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubDeadline\" class=\"label\">Subtitle check deadline</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check deadline in weeks for checking subtitles on daily basis.</li>\r\n            <li>After this deadline, the daily search is replaced by a search every X week(s), defined by the parameter below.</li>\r\n            <li>Cannot be set lower than {{checkSubDeadlineDefault}} week(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubDeadline\" [min]=\"checkSubDeadlineDefault\" suffix=\" week(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub delta -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubDelta\" class=\"label\">Subtitle check delta</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check delta in days for checking subtitles after deadline.</li>\r\n            <li>After the deadline (parameter above) is passed, a subtitle is search every X day(s), defined by this parameter.</li>\r\n            <li>Cannot be set lower than {{checkSubDeltaDefault}} day(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubDelta\" [min]=\"checkSubDeltaDefault\" suffix=\" day(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check version interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionInterval\" class=\"label\">Version check interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Version check interval of the CheckVersion thread. It checks if there is a new version available.</li>\r\n            <li> Cannot be set lower then {{checkVersionIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkVersionInterval\" [min]=\"checkVersionIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check version at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionAtStartup\" class=\"label\">Version check at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the CheckVersion thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the version check interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkVersionAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check version auto update -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionAutoUpdate\" class=\"label\">Version check auto update</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the version check will also try to auto update the system.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkVersionAutoUpdate\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan embedded subs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanEmbeddedSubs\" class=\"label\">Scan for embedded subtitles</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the video files will be scanned for embedded subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanEmbeddedSubs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan hardcoded subs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanHardcodedSubs\" class=\"label\">Scan for hardcoded subtitles</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the video files will be scanned for hardcoded subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanHardcodedSubs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Skip hidden dirs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipHiddenDirs\" class=\"label\">Skip hidden directories</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also hidden directories (directories that start with a dot, f.e. .config) are scanned.</li>\r\n            <li>REMARK: Doesn't work for Windows style hidden directories.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"skipHiddenDirs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Detect invalid sub language -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"detectInvalidSubLanguage\" class=\"label\">Detect invalid subtitle</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the language of a subtitle, without a language suffix, will be detected.</li>\r\n            <li>If the language does not match the default language, the subtitle will be deleted from the system in order to search a new one.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"detectInvalidSubLanguage\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Detected language probabibility -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"detectedLanguageProbability\" class=\"label\">Language detection probability</label>\r\n          <app-icon-dropdown>\r\n            <li>The minimum required probability for the invalid language detection functionality.</li>\r\n            <li>The probability must be at least this value before the language is accepted as the detected language of the subtitle.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"detectedLanguageProbability\" [min]=\"1\" [max]=\"100\" suffix=\" %\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Manual sub sync -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualSubSync\" class=\"label\">Manual subtitle synchronization</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the manual search will have the option to synchronize a subtitle.</li>\r\n            <li>REMARK: This requires ffmpeg (https://www.ffmpeg.org/download.html) to be installed on your system.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualSubSync\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- FFMPEG path -->\r\n      <div class=\"row form-row\" *ngIf=\"showFfmpegPath()\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"ffmpegPath\" class=\"label\">FFMPEG path</label>\r\n          <app-icon-dropdown>\r\n            <li>The directory where the FFMPEG executable is located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"ffmpegPath\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!--Min video file size -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"minVideoFileSize\" class=\"label\">Min video file size</label>\r\n          <app-icon-dropdown>\r\n            <li>The mininum file size in MB that a video must be before it's including in the scanning.</li>\r\n            <li>Files with a size lower than this value will be ignored in the scanning.</li>\r\n            <li>Use 0 to disable this limit.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"minVideoFileSize\" [min]=\"0\" suffix=\" MB\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!--Max db results -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"maxDbResults\" class=\"label\">Max db results</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum number of results returned from the database.</li>\r\n            <li>Use 0 to return all the results.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"maxDbResults\" mode=\"decimal\" [min]=\"0\" suffix=\" results\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Timestamp format -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"timestampFormat\" class=\"label\">Timestamp format</label>\r\n          <app-icon-dropdown>\r\n            <li>The format in which timestamps are displayed.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"timestampFormat\" [options]=\"timestampFormats\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputMultiFileBrowserComponent } from '../../../shared/components/input/multi-file-browser/input-multi-file-browser.component';\r\nimport { InputNumberComponent } from '../../../shared/components/input/number/input-number.component';\r\nimport { LibrarySettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-library',\r\n  templateUrl: './settings-library.component.html',\r\n  styleUrls: ['./settings-library.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputDropdownComponent, InputMultiFileBrowserComponent, InputNumberComponent]\r\n})\r\nexport class SettingsLibraryComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  scanLibraryIntervalDefault: number;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.initDefaults();\r\n    this.buildSelectItems();\r\n    this.settingsService.getLibrarySettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (librarySettings) => {\r\n        this.buildForm(librarySettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the library settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateLibrarySettings(this.getLibrarySettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Library settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the library settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private initDefaults(): void {\r\n    this.scanLibraryIntervalDefault = appSettings.scanLibraryIntervalDefault;\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(librarySettings: LibrarySettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      libraryMode: [librarySettings.libraryMode, [Validators.required]],\r\n      libraryPaths: [librarySettings.libraryPaths || [], []],\r\n      scanLibraryInterval: [librarySettings.scanLibraryInterval, [Validators.required]],\r\n      scanLibraryAtStartup: [librarySettings.scanLibraryAtStartup, [Validators.required]],\r\n      libraryEditMode: [librarySettings.libraryEditMode, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getLibrarySettings(): LibrarySettings {\r\n    const settings = new LibrarySettings();\r\n    settings.libraryMode = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'libraryMode');\r\n    settings.libraryPaths = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'libraryPaths');\r\n    settings.scanLibraryInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'scanLibraryInterval');\r\n    settings.scanLibraryAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanLibraryAtStartup');\r\n    settings.libraryEditMode = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'libraryEditMode');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Log settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Library mode -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryMode\" class=\"label\">Library mode</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a libraryscanner thread will be enabled to scan your complete library.</li>\r\n            <li>This will enable a new menu link 'Library' from which you can view your complete library.</li>\r\n            <li>ATTENTION: this may cause a very long disk scan if your library is very big!</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"libraryMode\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Library paths -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryPaths\" class=\"label\">Library paths</label>\r\n          <app-icon-dropdown>\r\n            <li>The folders where your show/movie libraries are located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-file-browser formControlName=\"libraryPaths\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-multi-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Scan library interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanLibraryInterval\" class=\"label\">Library scan interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Library scan interval of the ScanLibrary thread. It scans the complete library for generating an overview.</li>\r\n            <li>Cannot not be set lower then {{scanLibraryIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"scanLibraryInterval\" [min]=\"scanLibraryIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Scan library at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanLibraryAtStartup\" class=\"label\">Scan library at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the ScanLibrary thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the library scan interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanLibraryAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Library edit mode -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryEditMode\" class=\"label\">Library edit mode</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, edit functionality is enabled in the libraries.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"libraryEditMode\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { FormValidators } from '../../../shared/components/forms/form-validators';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../shared/components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../shared/components/input/text/input-text.component';\r\nimport { LogSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-logging',\r\n  templateUrl: './settings-logging.component.html',\r\n  styleUrls: ['./settings-logging.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputTextComponent, InputDropdownComponent, InputNumberComponent]\r\n})\r\nexport class SettingsLoggingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  logLevels: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getLogSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (logSettings) => {\r\n        this.buildForm(logSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the log settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateLogSettings(this.getLogSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Log settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the log settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Log levels (value corresponds to python log level)\r\n    this.logLevels = [];\r\n    this.logLevels.push({ label: 'Debug', value: 10 });\r\n    this.logLevels.push({ label: 'Info', value: 20 });\r\n    this.logLevels.push({ label: 'Warning', value: 30 });\r\n    this.logLevels.push({ label: 'Error', value: 40 });\r\n    this.logLevels.push({ label: 'Critical', value: 50 });\r\n  }\r\n\r\n  private buildForm(logSettings: LogSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      logFile: [logSettings.logFile, [Validators.required, FormValidators.notEmpty]],\r\n      logLevel: [logSettings.logLevel, [Validators.required]],\r\n      logNum: [logSettings.logNum, [Validators.required]],\r\n      logSize: [logSettings.logSize, [Validators.required]],\r\n      logHttpAccess: [logSettings.logHttpAccess, [Validators.required]],\r\n      logExternalLibs: [logSettings.logExternalLibs, [Validators.required]],\r\n      logDetailedFormat: [logSettings.logDetailedFormat, [Validators.required]],\r\n      logReversed: [logSettings.logReversed, [Validators.required]],\r\n      logLevelConsole: [logSettings.logLevelConsole, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getLogSettings(): LogSettings {\r\n    const settings = new LogSettings();\r\n    settings.logFile = FormUtils.getFormControlValue<string>(this.settingsForm, 'logFile');\r\n    settings.logLevel = FormUtils.getFormControlValue<number>(this.settingsForm, 'logLevel');\r\n    settings.logNum = FormUtils.getFormControlValue<number>(this.settingsForm, 'logNum');\r\n    settings.logSize = FormUtils.getFormControlValue<number>(this.settingsForm, 'logSize');\r\n    settings.logHttpAccess = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logHttpAccess');\r\n    settings.logExternalLibs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logExternalLibs');\r\n    settings.logDetailedFormat = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logDetailedFormat');\r\n    settings.logReversed = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logReversed');\r\n    settings.logLevelConsole = FormUtils.getFormControlValue<number>(this.settingsForm, 'logLevelConsole');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Log settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Log file -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logFile\" class=\"label\">Logfile name</label>\r\n          <app-icon-dropdown>\r\n            <li>The location and the name of the logfile.</li>\r\n            <li>When not set, AutoSubliminal.log will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"logFile\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Log level -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logLevel\" class=\"label\">Log level</label>\r\n          <app-icon-dropdown>\r\n            <li>The level of logging in the logfile.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logLevel\" [options]=\"logLevels\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log num -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logNum\" class=\"label\">Number of backup log files</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum number of backup log files.</li>\r\n            <li>Use 0 for no backup log files.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"logNum\" [min]=\"0\" suffix=\" file(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Log size -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logSize\" class=\"label\">Log size</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum size of the log file(s) in MB.</li>\r\n            <li>Use 0 for unlimited size.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"logSize\" [min]=\"0\" suffix=\" MB\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Log http access -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logHttpAccess\" class=\"label\">Log HTTP access</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also http access calls will be logged.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logHttpAccess\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log external libs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logExternalLibs\" class=\"label\">Log external libs</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also external libs will be logged.</li>\r\n            <li>This only works in combination with the 'Log detailed format' option.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logExternalLibs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log detailed format -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logDetailedFormat\" class=\"label\">Log detailed format</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the detailed log format will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logDetailedFormat\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log reversed -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logReversed\" class=\"label\">Log reversed</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the log output will be shown in reversed order (newest at the top) in the application.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logReversed\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log level console -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logLevelConsole\" class=\"label\">Console log level</label>\r\n          <app-icon-dropdown>\r\n            <li>The level of logging in the console output.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logLevelConsole\" [options]=\"logLevels\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputMultiTextComponent } from '../../../shared/components/input/multi-text/input-multi-text.component';\r\nimport { NameMappingSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-namemapping',\r\n  templateUrl: './settings-namemapping.component.html',\r\n  styleUrls: ['./settings-namemapping.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, MessageModule, IconDropdownComponent, InputMultiTextComponent]\r\n})\r\nexport class SettingsNamemappingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.getNameMappingSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (nameMappingSettings) => {\r\n        this.buildForm(nameMappingSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the namemapping settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateNameMappingSettings(this.getNameMappingSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Namemapping settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the namemapping settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildForm(nameMappingSettings: NameMappingSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      showNameMapping: [nameMappingSettings.showNameMapping || [], []],\r\n      addic7edShowNameMapping: [nameMappingSettings.addic7edShowNameMapping || [], []],\r\n      alternativeShowNameMapping: [nameMappingSettings.alternativeShowNameMapping || [], []],\r\n      movieNameMapping: [nameMappingSettings.movieNameMapping || [], []],\r\n      alternativeMovieNameMapping: [nameMappingSettings.alternativeMovieNameMapping || [], []]\r\n    });\r\n  }\r\n\r\n  private getNameMappingSettings(): NameMappingSettings {\r\n    const settings = new NameMappingSettings();\r\n    settings.showNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'showNameMapping');\r\n    settings.addic7edShowNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'addic7edShowNameMapping');\r\n    settings.alternativeShowNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'alternativeShowNameMapping');\r\n    settings.movieNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'movieNameMapping');\r\n    settings.alternativeMovieNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'alternativeMovieNameMapping');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Namemapping settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Use the namemapping at own risk! Incorrect use of the namemapping may result in subtitles not being found!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showNameMapping\" class=\"label\">Name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local show name mapping to the TVDB ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = 12345</li>\r\n            <li>Show name 2 = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"showNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edShowNameMapping\" class=\"label\">Addic7ed name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local show name mapping to the Addic7ed ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = 12345</li>\r\n            <li>Show name 2 = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"addic7edShowNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Alternative show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"alternativeShowNameMapping\" class=\"label\">Alternative name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>List the alternative names of a show to increase subtitle matching.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = Show name alternative 1a,Show name alternative 1b</li>\r\n            <li>Show name 2 = Show name 2a</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"alternativeShowNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Movie name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"movieNameMapping\" class=\"label\">Name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local movie name mapping to the IMDB ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title (year) = 12345</li>\r\n            <li>Movie title 2 (year) = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"movieNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Alternative movie name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"alternativeMovieNameMapping\" class=\"label\">Alternative name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>List the alternative titles of a movie to increase subtitle matching.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title = Movie title alternative 1a,Movie title alternative 1b</li>\r\n            <li>Movie title 2 = Movie title 2a</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"alternativeMovieNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../shared/components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../shared/components/input/text/input-text.component';\r\nimport { NotificationSettings, TwitterRegistration } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-notification',\r\n  templateUrl: './settings-notification.component.html',\r\n  styleUrls: ['./settings-notification.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, DialogModule, InputTextModule, MessageModule, IconDropdownComponent, InputDropdownComponent, InputTextComponent, InputNumberComponent]\r\n})\r\nexport class SettingsNotificationComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  growlProwlPriorities: SelectItem[];\r\n\r\n  twitterRegistration: TwitterRegistration;\r\n  twitterRegistrationDialog = false;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getNotificationSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (notificationSettings) => {\r\n        this.buildForm(notificationSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the notification settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateNotificationSettings(this.getNotificationSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Notification settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the notification settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  test(notifierName: string): void {\r\n    this.settingsService.testNotifier(notifierName).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.messageService.showSuccessMessage(`Test ${notifierName} notification sent.`),\r\n      error: () => this.messageService.showErrorMessage(`Test ${notifierName} notification failed!`)\r\n    });\r\n  }\r\n\r\n  registerTwitter(): void {\r\n    this.settingsService.registerTwitter().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (twitterRegistration) => {\r\n        // Show dialog to finish the registration\r\n        this.twitterRegistration = twitterRegistration;\r\n        this.twitterRegistrationDialog = true;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Twitter registration failed!')\r\n    });\r\n  }\r\n\r\n  authorizeTwitter(): void {\r\n    this.settingsService.authorizeTwitter(this.twitterRegistration).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (twitterAuthorization) => {\r\n        // Update form with twitter key and secret\r\n        FormUtils.setFormControlValue(this.settingsForm, 'twitterKey', twitterAuthorization.twitterKey);\r\n        FormUtils.setFormControlValue(this.settingsForm, 'twitterSecret', twitterAuthorization.twitterSecret);\r\n        this.messageService.showSuccessMessage('Twitter registration successful. Please save and test Twitter.');\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Twitter authorization failed!')\r\n    });\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Growl/Prowl priorities\r\n    this.growlProwlPriorities = [];\r\n    this.growlProwlPriorities.push({ label: 'Very low', value: -2 });\r\n    this.growlProwlPriorities.push({ label: 'Moderate', value: -1 });\r\n    this.growlProwlPriorities.push({ label: 'Normal', value: 0 });\r\n    this.growlProwlPriorities.push({ label: 'High', value: 1 });\r\n    this.growlProwlPriorities.push({ label: 'Emergency', value: 2 });\r\n  }\r\n\r\n  private buildForm(notificationSettings: NotificationSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      notify: [notificationSettings.notify, [Validators.required]],\r\n      notifyMail: [notificationSettings.notifyMail, []],\r\n      mailServer: [notificationSettings.mailServer, []],\r\n      mailFromName: [notificationSettings.mailFromName, []],\r\n      mailFrom: [notificationSettings.mailFrom, []],\r\n      mailTo: [notificationSettings.mailTo, []],\r\n      mailUserName: [notificationSettings.mailUserName, []],\r\n      mailPassword: [notificationSettings.mailPassword, []],\r\n      mailSubject: [notificationSettings.mailSubject, []],\r\n      mailEncryption: [notificationSettings.mailEncryption, []],\r\n      mailAuthentication: [notificationSettings.mailAuthentication, []],\r\n      notifyTwitter: [notificationSettings.notifyTwitter, []],\r\n      twitterKey: [notificationSettings.twitterKey, []],\r\n      twitterSecret: [notificationSettings.twitterSecret, []],\r\n      notifyPushalot: [notificationSettings.notifyPushalot, []],\r\n      pushalotApi: [notificationSettings.pushalotApi, []],\r\n      notifyPushover: [notificationSettings.notifyPushover, []],\r\n      pushoverKey: [notificationSettings.pushoverKey, []],\r\n      pushoverApi: [notificationSettings.pushoverApi, []],\r\n      pushoverDevices: [notificationSettings.pushoverDevices, []],\r\n      notifyGrowl: [notificationSettings.notifyGrowl, []],\r\n      growlHost: [notificationSettings.growlHost, []],\r\n      growlPort: [notificationSettings.growlPort, []],\r\n      growlPassword: [notificationSettings.growlPassword, []],\r\n      growlPriority: [notificationSettings.growlPriority || 0, []],\r\n      notifyProwl: [notificationSettings.notifyProwl, []],\r\n      prowlApi: [notificationSettings.prowlApi, []],\r\n      prowlPriority: [notificationSettings.prowlPriority || 0, []],\r\n      notifyPushbullet: [notificationSettings.notifyPushbullet, []],\r\n      pushbulletApi: [notificationSettings.pushbulletApi, []],\r\n      notifyTelegram: [notificationSettings.notifyTelegram, []],\r\n      telegramBotApi: [notificationSettings.telegramBotApi, []],\r\n      telegramChatId: [notificationSettings.telegramChatId, []]\r\n    });\r\n  }\r\n\r\n  private getNotificationSettings(): NotificationSettings {\r\n    const settings = new NotificationSettings();\r\n    settings.notify = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notify');\r\n    settings.notifyMail = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyMail');\r\n    settings.mailServer = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailServer');\r\n    settings.mailFromName = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailFromName');\r\n    settings.mailFrom = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailFrom');\r\n    settings.mailTo = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailTo');\r\n    settings.mailUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailUserName');\r\n    settings.mailPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailPassword');\r\n    settings.mailSubject = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailSubject');\r\n    settings.mailEncryption = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailEncryption');\r\n    settings.mailAuthentication = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailAuthentication');\r\n    settings.notifyTwitter = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyTwitter');\r\n    settings.twitterKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'twitterKey');\r\n    settings.twitterSecret = FormUtils.getFormControlValue<string>(this.settingsForm, 'twitterSecret');\r\n    settings.notifyPushalot = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushalot');\r\n    settings.pushalotApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushalotApi');\r\n    settings.notifyPushover = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushover');\r\n    settings.pushoverKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverKey');\r\n    settings.pushoverApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverApi');\r\n    settings.pushoverDevices = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverDevices');\r\n    settings.notifyGrowl = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyGrowl');\r\n    settings.growlHost = FormUtils.getFormControlValue<string>(this.settingsForm, 'growlHost');\r\n    settings.growlPort = FormUtils.getFormControlValue<number>(this.settingsForm, 'growlPort');\r\n    settings.growlPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'growlPassword');\r\n    settings.growlPriority = FormUtils.getFormControlValue<number>(this.settingsForm, 'growlPriority');\r\n    settings.notifyProwl = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyProwl');\r\n    settings.prowlApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'prowlApi');\r\n    settings.prowlPriority = FormUtils.getFormControlValue<number>(this.settingsForm, 'prowlPriority');\r\n    settings.notifyPushbullet = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushbullet');\r\n    settings.pushbulletApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushbulletApi');\r\n    settings.notifyTelegram = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyTelegram');\r\n    settings.telegramBotApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'telegramBotApi');\r\n    settings.telegramChatId = FormUtils.getFormControlValue<string>(this.settingsForm, 'telegramChatId');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Notification settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Passwords and keys are stored in plaintext!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Information notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"info\" text=\"You first need to save before you can test a notification.\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Notify -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notify\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, notification(s) will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notify\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\"></div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Mail settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Mail</span>\r\n          <img src=\"assets/notifiers/email.png\" class=\"notifier-icon\" alt=\"Mail\" title=\"Mail\">\r\n        </div>\r\n      </div>\r\n      <!-- Notify Mail -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyMail\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, an email notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyMail\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Mail server -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailServer\" class=\"label\">Server</label>\r\n          <app-icon-dropdown>\r\n            <li>The mail server address (and port if needed).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailServer\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail from Name -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailFromName\" class=\"label\">Sender name</label>\r\n          <app-icon-dropdown>\r\n            <li>The name from which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailFromName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail from -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailFrom\" class=\"label\">Sender</label>\r\n          <app-icon-dropdown>\r\n            <li>The email address from which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailFrom\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail to -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailTo\" class=\"label\">Receiver</label>\r\n          <app-icon-dropdown>\r\n            <li>The email address(es) to which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailTo\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username on the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for the username on the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail subject -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailSubject\" class=\"label\">Subject</label>\r\n          <app-icon-dropdown>\r\n            <li>The email subject.</li>\r\n            <li>If not provided, the default subject will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailSubject\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail encryption -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailEncryption\" class=\"label\">Encryption</label>\r\n          <app-icon-dropdown>\r\n            <li>The encryption method used by the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailEncryption\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail authentication -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailAuthentication\" class=\"label\">Authentication</label>\r\n          <app-icon-dropdown>\r\n            <li>The authentication mechanism used by the mail server.</li>\r\n            <li>Don't change this if you don't know what you are doing.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailAuthentication\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('mail')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Twitter</span>\r\n          <a href=\"https://twitter.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/twitter.png\" class=\"notifier-icon\" alt=\"Twitter\" title=\"Twitter\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Twitter -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyTwitter\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Twitter notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyTwitter\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"twitterKey\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Twitter.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"twitterKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter secret -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"twitterSecret\" class=\"label\">Secret code</label>\r\n          <app-icon-dropdown>\r\n            <li>The secret code for Twitter.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"twitterSecret\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Register\" styleClass=\"p-button-secondary\" (onClick)=\"registerTwitter()\"></p-button>\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('twitter')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushalot settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushalot</span>\r\n          <a href=\"https://pushalot.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushalot.png\" class=\"notifier-icon\" alt=\"Pushalot\" title=\"Pushalot\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushalot -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushalot\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushalot notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushalot\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushalot api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushalotApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushalot.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushalotApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushalot')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushover</span>\r\n          <a href=\"https://pushover.net/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushover.png\" class=\"notifier-icon\" alt=\"Pushover\" title=\"Pushover\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushover -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushover\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushover notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushover\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverKey\" class=\"label\">User key</label>\r\n          <app-icon-dropdown>\r\n            <li>The user key for Pushover.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushover.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover devices -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverDevices\" class=\"label\">Devices</label>\r\n          <app-icon-dropdown>\r\n            <li>The devices (comma separated list) used for Pushover notifications.</li>\r\n            <li>If not provided, notifications will be sent to all your Pushover devices.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverDevices\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushover')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Growl settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Growl</span>\r\n          <a href=\"http://www.growl.info/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/growl.png\" class=\"notifier-icon\" alt=\"Growl\" title=\"Growl\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Growl -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyGrowl\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Growl notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyGrowl\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Growl host -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlHost\" class=\"label\">Server</label>\r\n          <app-icon-dropdown>\r\n            <li>The Growl host server address.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"growlHost\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Growl port -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPort\" class=\"label\">Port</label>\r\n          <app-icon-dropdown>\r\n            <li>The port of the Growl host server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"growlPort\" [showButtons]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Growl password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password on the growl host server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"growlPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Growl priority -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPriority\" class=\"label\">Priority</label>\r\n          <app-icon-dropdown>\r\n            <li>The priority for the Growl notification.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"growlPriority\" [options]=\"growlProwlPriorities\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('growl')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Prowl</span>\r\n          <a href=\"https://www.prowlapp.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/prowl.png\" class=\"notifier-icon\" alt=\"Prowl\" title=\"Prowl\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Prowl -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyProwl\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Prowl notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyProwl\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"prowlApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Prowl.</li>\r\n            <li>Your API key can be found by visiting: <a href=\"https://prowlapp.com/api_settings.php\" target=\"_blank\">https://prowlapp.com/api_settings.php</a></li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"prowlApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl priority -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"prowlPriority\" class=\"label\">Priority</label>\r\n          <app-icon-dropdown>\r\n            <li>The priority for the Prowl notification.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"prowlPriority\" [options]=\"growlProwlPriorities\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('prowl')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushbullet settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushbullet</span>\r\n          <a href=\"https://www.pushbullet.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushbullet.png\" class=\"notifier-icon\" alt=\"Pushbullet\" title=\"Pushbullet\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushbullet -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushbullet\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushbullet notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushbullet\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushbullet api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushbulletApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushbullet.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushbulletApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushbullet')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Telegram</span>\r\n          <a href=\"https://telegram.org/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/telegram.png\" class=\"notifier-icon\" alt=\"Telegram\" title=\"Telegram\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Telegram -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyTelegram\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Telegram notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyTelegram\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"telegramBotApi\" class=\"label\">Bot API key (token)</label>\r\n          <app-icon-dropdown>\r\n            <li>The bot API key (token) for Telegram.</li>\r\n            <li>Contact @BotFather on Telegram to set up one.</li>\r\n            <li>See <a href=\"https://core.telegram.org/bots\" target=\"_blank\">https://core.telegram.org/bots</a></li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"telegramBotApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram chat id -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"telegramChatId\" class=\"label\">Chat ID</label>\r\n          <app-icon-dropdown>\r\n            <li>Unique identifier for the target chat or username of the target channel (in the format @channelusername).</li>\r\n            <li>Contact @myidbot on Telegram to get an ID.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"telegramChatId\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('telegram')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"twitterRegistrationDialog\"\r\n          [modal]=\"true\"\r\n          [closable]=\"true\"\r\n          [resizable]=\"false\"\r\n          [showHeader]=\"true\"\r\n          header=\"Twitter registration\">\r\n  <div *ngIf=\"twitterRegistration\">\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <label>In order to use twitter, you need to give permission to 'Auto-Subliminal' to send tweets with your account.</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <label>Execute the following steps:</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <ul>\r\n          <li><label>Go to <a [href]=\"twitterRegistration.url\" target=\"_blank\">twitter</a></label></li>\r\n          <li><label>Login</label></li>\r\n          <li><label>Authorize 'Auto-Subliminal'</label></li>\r\n          <li><label>Enter pin below and click 'OK'</label></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-6 col-6 col-sm-6 col-md-4 col-lg-4\">\r\n        <div class=\"p-inputgroup\">\r\n          <input type=\"text\" pInputText [(ngModel)]=\"twitterRegistration.tokenPin\" placeholder=\"Pin\">\r\n          <p-button label=\"Ok\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"authorizeTwitter()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-dialog>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputFileBrowserComponent } from '../../../shared/components/input/file-browser/input-file-browser.component';\r\nimport { InputTextComponent } from '../../../shared/components/input/text/input-text.component';\r\nimport { PostProcessSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-postprocessing',\r\n  templateUrl: './settings-postprocessing.component.html',\r\n  styleUrls: ['./settings-postprocessing.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputDropdownComponent, InputFileBrowserComponent, InputTextComponent]\r\n})\r\nexport class SettingsPostprocessingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getPostProcessSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (postProcessSettings) => {\r\n        this.buildForm(postProcessSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the postprocessing settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updatePostProcessSettings(this.getPostProcessSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Postprocessing settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the postprocessing settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(postProcessSettings: PostProcessSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      postProcess: [postProcessSettings.postProcess, [Validators.required]],\r\n      postProcessIndividual: [postProcessSettings.postProcessIndividual, [Validators.required]],\r\n      postProcessUtf8Encoding: [postProcessSettings.postProcessUtf8Encoding, [Validators.required]],\r\n      showPostProcessCmd: [postProcessSettings.showPostProcessCmd, []],\r\n      showPostProcessArgs: [postProcessSettings.showPostProcessArgs, []],\r\n      moviePostProcessCmd: [postProcessSettings.moviePostProcessCmd, []],\r\n      moviePostProcessArgs: [postProcessSettings.moviePostProcessArgs, []]\r\n    });\r\n  }\r\n\r\n  private getPostProcessSettings(): PostProcessSettings {\r\n    const settings = new PostProcessSettings();\r\n    settings.postProcess = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcess');\r\n    settings.postProcessIndividual = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcessIndividual');\r\n    settings.postProcessUtf8Encoding = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcessUtf8Encoding');\r\n    settings.showPostProcessCmd = FormUtils.getFormControlValue<string>(this.settingsForm, 'showPostProcessCmd');\r\n    settings.showPostProcessArgs = FormUtils.getFormControlValue<string>(this.settingsForm, 'showPostProcessArgs');\r\n    settings.moviePostProcessCmd = FormUtils.getFormControlValue<string>(this.settingsForm, 'moviePostProcessCmd');\r\n    settings.moviePostProcessArgs = FormUtils.getFormControlValue<string>(this.settingsForm, 'moviePostProcessArgs');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Postprocessing settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Post process -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcess\" class=\"label\">Post-process</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing command(s) will be executed.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcess\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Post process individual -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcessIndividual\" class=\"label\">Individual</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing will be executed after each subtitle download for a video.</li>\r\n            <li>If disabled, the post processing will only be executed when all wanted subtitles are downloaded for a video.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcessIndividual\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Post process utf8 encoding -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcessUtf8Encoding\" class=\"label\">UTF-8 encoding</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing command(s) and argument(s) will be encoded in UTF-8.</li>\r\n            <li>This means that the post processing script will need to decode the argument(s) from UTF-8.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcessUtf8Encoding\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show post process cmd -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showPostProcessCmd\" class=\"label\">Post-process command</label>\r\n          <app-icon-dropdown>\r\n            <li>The command to run after downloading a subtitle for a show.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"showPostProcessCmd\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Show post process args -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showPostProcessArgs\" class=\"label\">Post-process argument(s)</label>\r\n          <app-icon-dropdown>\r\n            <li>The argument(s) (separated by |) to pass to the command above after downloading a subtitle for a show.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"showPostProcessArgs\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Movie post process cmd -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"moviePostProcessCmd\" class=\"label\">Post-process command</label>\r\n          <app-icon-dropdown>\r\n            <li>The command to run after downloading a subtitle for a movie.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"moviePostProcessCmd\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Movie post process args -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"moviePostProcessArgs\" class=\"label\">Post-process argument(s)</label>\r\n          <app-icon-dropdown>\r\n            <li>The argument(s) (separated by |) to pass to the command above after downloading a subtitle for a movie.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"moviePostProcessArgs\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { SettingsGeneralComponent } from './general/settings-general.component';\r\nimport { SettingsLibraryComponent } from './library/settings-library.component';\r\nimport { SettingsLoggingComponent } from './logging/settings-logging.component';\r\nimport { SettingsNamemappingComponent } from './namemapping/settings-namemapping.component';\r\nimport { SettingsNotificationComponent } from './notification/settings-notification.component';\r\nimport { SettingsPostprocessingComponent } from './postprocessing/settings-postprocessing.component';\r\nimport { SettingsSkipmappingComponent } from './skipmapping/settings-skipmapping.component';\r\nimport { SettingsSubliminalComponent } from './subliminal/settings-subliminal.component';\r\nimport { SettingsWebserverComponent } from './webserver/settings-webserver.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'general',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'general',\r\n    component: SettingsGeneralComponent\r\n  },\r\n  {\r\n    path: 'library',\r\n    component: SettingsLibraryComponent\r\n  },\r\n  {\r\n    path: 'logging',\r\n    component: SettingsLoggingComponent\r\n  },\r\n  {\r\n    path: 'webserver',\r\n    component: SettingsWebserverComponent\r\n  },\r\n  {\r\n    path: 'subliminal',\r\n    component: SettingsSubliminalComponent\r\n  },\r\n  {\r\n    path: 'namemapping',\r\n    component: SettingsNamemappingComponent\r\n  },\r\n  {\r\n    path: 'skipmapping',\r\n    component: SettingsSkipmappingComponent\r\n  },\r\n  {\r\n    path: 'notification',\r\n    component: SettingsNotificationComponent\r\n  },\r\n  {\r\n    path: 'postprocessing',\r\n    component: SettingsPostprocessingComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'general'\r\n  }\r\n];\r\n\r\n// Use default export for simplified lazy loading (https://angular.io/guide/standalone-components#lazy-loading-and-default-exports)\r\nexport default routes;\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputMultiTextComponent } from '../../../shared/components/input/multi-text/input-multi-text.component';\r\nimport { SkipMappingSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-skipmapping',\r\n  templateUrl: './settings-skipmapping.component.html',\r\n  styleUrls: ['./settings-skipmapping.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputMultiTextComponent]\r\n})\r\nexport class SettingsSkipmappingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.getSkipMappingSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (skipMappingSettings) => {\r\n        this.buildForm(skipMappingSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the skipmapping settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateSkipMappingSettings(this.getSkipMappingSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Skipmapping settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the skipmapping settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildForm(skipMappingSettings: SkipMappingSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      skipShowMapping: [skipMappingSettings.skipShowMapping || [], []],\r\n      skipMovieMapping: [skipMappingSettings.skipMovieMapping || [], []]\r\n    });\r\n  }\r\n\r\n  private getSkipMappingSettings(): SkipMappingSettings {\r\n    const settings = new SkipMappingSettings();\r\n    settings.skipShowMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'skipShowMapping');\r\n    settings.skipMovieMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'skipMovieMapping');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Skipmapping settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Skip show mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipShowMapping\" class=\"label\">Skip show mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The mapping to skip a show.</li>\r\n            <li>Examples:</li>\r\n            <li>Serie Name = 00 (this will skip the show 'Serie Name' completely</li>\r\n            <li>Another Serie name = 1,5,6 (this will skip the show 'Another Serie Name' season 1, 5 and 6</li>\r\n            <li>Show Name = 0,6,7 (this will skip the show 'Show Name' season 0 (specials), 6 and 7.</li>\r\n            <li>00 is different then 0, 00 skips a show, 0 skips specials (season 0)</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"skipShowMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Skip movie mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipMovieMapping\" class=\"label\">Skip movie mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The mapping to skip a movie.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title (year) = 00</li>\r\n            <li>Movie title 2 (year) = 00</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"skipMovieMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputSwitchComponent } from '../../../shared/components/input/switch/input-switch.component';\r\nimport { InputTextComponent } from '../../../shared/components/input/text/input-text.component';\r\nimport { SubliminalSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-subliminal',\r\n  templateUrl: './settings-subliminal.component.html',\r\n  styleUrls: ['./settings-subliminal.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, MessageModule, ButtonModule, ListboxModule, IconDropdownComponent, InputSwitchComponent, InputDropdownComponent, InputTextComponent]\r\n})\r\nexport class SettingsSubliminalComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  subliminalProviders: SelectItem[];\r\n  antiCaptchaProviders: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getSubliminalSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (subliminalSettings) => {\r\n        this.buildForm(subliminalSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the subliminal settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateSubliminalSettings(this.getSubliminalSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Subliminal settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the subliminal settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Subliminal providers\r\n    this.subliminalProviders = [];\r\n    appSettings.subliminalProviders.forEach((provider) => this.subliminalProviders.push({ label: provider, value: provider }));\r\n    // Anti-Captcha providers\r\n    this.antiCaptchaProviders = [];\r\n    this.antiCaptchaProviders.push({ label: 'Disabled', value: '' });\r\n    appSettings.antiCaptchaProviders.forEach((provider) => this.antiCaptchaProviders.push({ label: provider.source, value: provider.class }));\r\n  }\r\n\r\n  private buildForm(subliminalSettings: SubliminalSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      showMatchSource: [subliminalSettings.showMatchSource, [Validators.required]],\r\n      showMatchQuality: [subliminalSettings.showMatchQuality, [Validators.required]],\r\n      showMatchCodec: [subliminalSettings.showMatchCodec, [Validators.required]],\r\n      showMatchReleaseGroup: [subliminalSettings.showMatchReleaseGroup, [Validators.required]],\r\n      movieMatchSource: [subliminalSettings.movieMatchSource, [Validators.required]],\r\n      movieMatchQuality: [subliminalSettings.movieMatchQuality, [Validators.required]],\r\n      movieMatchCodec: [subliminalSettings.movieMatchCodec, [Validators.required]],\r\n      movieMatchReleaseGroup: [subliminalSettings.movieMatchReleaseGroup, [Validators.required]],\r\n      subliminalProviders: [subliminalSettings.subliminalProviders || [], []],\r\n      subtitleUtf8Encoding: [subliminalSettings.subtitleUtf8Encoding, [Validators.required]],\r\n      refineVideo: [subliminalSettings.refineVideo, [Validators.required]],\r\n      manualRefineVideo: [subliminalSettings.manualRefineVideo, [Validators.required]],\r\n      preferHearingImpaired: [subliminalSettings.preferHearingImpaired, [Validators.required]],\r\n      antiCaptchaClass: [subliminalSettings.antiCaptchaClass, []],\r\n      antiCaptchaClientKey: [subliminalSettings.antiCaptchaClientKey, []],\r\n      addic7edUserName: [subliminalSettings.addic7edUserName, []],\r\n      addic7edPassword: [subliminalSettings.addic7edPassword, []],\r\n      addic7edUserId: [subliminalSettings.addic7edUserId, []],\r\n      opensubtitlesUserName: [subliminalSettings.opensubtitlesUserName, []],\r\n      opensubtitlesPassword: [subliminalSettings.opensubtitlesPassword, []],\r\n      legendastvUserName: [subliminalSettings.legendastvUserName, []],\r\n      legendastvPassword: [subliminalSettings.legendastvPassword, []]\r\n    });\r\n  }\r\n\r\n  private getSubliminalSettings(): SubliminalSettings {\r\n    const settings = new SubliminalSettings();\r\n    settings.showMatchSource = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchSource');\r\n    settings.showMatchQuality = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchQuality');\r\n    settings.showMatchCodec = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchCodec');\r\n    settings.showMatchReleaseGroup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchReleaseGroup');\r\n    settings.movieMatchSource = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchSource');\r\n    settings.movieMatchQuality = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchQuality');\r\n    settings.movieMatchCodec = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchCodec');\r\n    settings.movieMatchReleaseGroup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchReleaseGroup');\r\n    settings.subliminalProviders = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'subliminalProviders');\r\n    settings.subtitleUtf8Encoding = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'subtitleUtf8Encoding');\r\n    settings.refineVideo = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'refineVideo');\r\n    settings.manualRefineVideo = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualRefineVideo');\r\n    settings.preferHearingImpaired = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'preferHearingImpaired');\r\n    settings.antiCaptchaClass = FormUtils.getFormControlValue<string>(this.settingsForm, 'antiCaptchaClass');\r\n    settings.antiCaptchaClientKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'antiCaptchaClientKey');\r\n    settings.addic7edUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edUserName');\r\n    settings.addic7edPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edPassword');\r\n    settings.addic7edUserId = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edUserId');\r\n    settings.opensubtitlesUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesUserName');\r\n    settings.opensubtitlesPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesPassword');\r\n    settings.legendastvUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'legendastvUserName');\r\n    settings.legendastvPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'legendastvPassword');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Subliminal settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Passwords and keys are stored in plain text!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Show MinMatchScore</label>\r\n          <app-icon-dropdown>\r\n            <li>The items that must match before a show subtitle is downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-switches\">\r\n          <app-input-switch formControlName=\"showMatchSource\" label=\"Source\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchQuality\" label=\"Quality\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchCodec\" label=\"Codec\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchReleaseGroup\" label=\"Group\"></app-input-switch>\r\n        </div>\r\n      </div>\r\n      <!-- Movie min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Movie MinMatchScore</label>\r\n          <app-icon-dropdown>\r\n            <li>The items that must match before a movie subtitle is downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-switches\">\r\n          <app-input-switch formControlName=\"movieMatchSource\" label=\"Source\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchQuality\" label=\"Quality\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchCodec\" label=\"Codec\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchReleaseGroup\" label=\"Group\"></app-input-switch>\r\n        </div>\r\n      </div>\r\n      <!-- Movie min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Providers</label>\r\n          <app-icon-dropdown>\r\n            <li>The subliminal providers that must be used for searching and downloading subtitles.</li>\r\n            <li>Multiple providers can be selected (use ctrl key).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-label\">\r\n          <p-listbox formControlName=\"subliminalProviders\" [options]=\"subliminalProviders\" [multiple]=\"true\"></p-listbox>\r\n        </div>\r\n      </div>\r\n      <!-- Subtitle utf8 encoding -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"subtitleUtf8Encoding\" class=\"label\">Subtitles in utf-8 encoding</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, all subtitles will be saved in utf-8 encoding.</li>\r\n            <li>When disabled, the original encoding of the subtitle is used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"subtitleUtf8Encoding\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Refine video -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"refineVideo\" class=\"label\">Refine video</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, subliminal will enable 'refiners' to enrich the video meta-data before searching for subtitles.</li>\r\n            <li>This can result in a higher score matching and thus a higher automatic subtitle download.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"refineVideo\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Manual refine video -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualRefineVideo\" class=\"label\">Refine video manually</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, you will be able to edit the video meta-data before searching for subtitles.</li>\r\n            <li>An edit icon will appear next to the show/movie name to edit the show/movie details.</li>\r\n            <li>This only affects a manual search temporarily until the next disk scan.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualRefineVideo\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Prefer hearing impaired -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"preferHearingImpaired\" class=\"label\">Prefer hearing impaired subs</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, 'hearing impaired' subtitles will be preferred over 'regular' subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"preferHearingImpaired\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-captcha settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Anti-captcha</span>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-Captcha class -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"antiCaptchaClass\" class=\"label\">Anti-captcha service</label>\r\n          <app-icon-dropdown>\r\n            <li>The anti-captcha service.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"antiCaptchaClass\" [options]=\"antiCaptchaProviders\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-Captcha client key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"antiCaptchaClientKey\" class=\"label\">Anti-captcha client key</label>\r\n          <app-icon-dropdown>\r\n            <li>The anti-captcha client key.</li>\r\n            <li>anti-captcha.com: account_key</li>\r\n            <li>deathbycaptcha.com: username:password</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"antiCaptchaClientKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Addic7ed provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your Addic7ed account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your Addic7ed account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed userid -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edUserId\" class=\"label\">UserId</label>\r\n          <app-icon-dropdown>\r\n            <li>The user id for your Addic7ed account.</li>\r\n            <li> It can be found in the url when you visit the details of your user in the profile page of your account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edUserId\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">OpenSubtitles provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your OpenSubtitles account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your OpenSubtitles account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Legendas.TV provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"legendastvUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your Legendas.TV account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"legendastvUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"legendastvPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your Legendas.TV account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"legendastvPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { SettingsService } from '../../../core/services/api/settings.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { FormValidators } from '../../../shared/components/forms/form-validators';\r\nimport { IconDropdownComponent } from '../../../shared/components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../shared/components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../shared/components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../shared/components/input/text/input-text.component';\r\nimport { WebServerSettings } from '../../../shared/models/settings';\r\n\r\n@Component({\r\n  selector: 'app-settings-webserver',\r\n  templateUrl: './settings-webserver.component.html',\r\n  styleUrls: ['./settings-webserver.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, MessageModule, IconDropdownComponent, InputTextComponent, InputNumberComponent, InputDropdownComponent]\r\n})\r\nexport class SettingsWebserverComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getWebServerSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (webServerSettings) => {\r\n        this.buildForm(webServerSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the webserver settings!')\r\n    });\r\n  }\r\n\r\n  formatWebRoot(): void {\r\n    let webRoot = FormUtils.getFormControlValue<string>(this.settingsForm, 'webRoot');\r\n    if (webRoot) {\r\n      if (!webRoot.startsWith('/')) {\r\n        webRoot = `/${webRoot}`;\r\n      }\r\n      if (webRoot.endsWith('/')) {\r\n        webRoot = webRoot.replace(new RegExp('/+$'), '');\r\n      }\r\n    }\r\n    FormUtils.setFormControlValue(this.settingsForm, 'webRoot', webRoot);\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateWebServerSettings(this.getWebServerSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Webserver settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the webserver settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(webServerSettings: WebServerSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      webServerIp: [webServerSettings.webServerIp, [Validators.required, FormValidators.notEmpty]],\r\n      webServerPort: [webServerSettings.webServerPort, [Validators.required, FormValidators.notEmpty]],\r\n      webRoot: [webServerSettings.webRoot, []],\r\n      userName: [webServerSettings.userName, []],\r\n      password: [webServerSettings.password, []],\r\n      launchBrowser: [webServerSettings.launchBrowser, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getWebServerSettings(): WebServerSettings {\r\n    const settings = new WebServerSettings();\r\n    settings.webServerIp = FormUtils.getFormControlValue<string>(this.settingsForm, 'webServerIp');\r\n    settings.webServerPort = FormUtils.getFormControlValue<number>(this.settingsForm, 'webServerPort');\r\n    settings.webRoot = FormUtils.getFormControlValue<string>(this.settingsForm, 'webRoot');\r\n    settings.userName = FormUtils.getFormControlValue<string>(this.settingsForm, 'userName');\r\n    settings.password = FormUtils.getFormControlValue<string>(this.settingsForm, 'password');\r\n    settings.launchBrowser = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'launchBrowser');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Webserver settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Changing webserver settings will result in no automatic reload! You'll need to change the url manually in order to reload correctly!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Webserver ip -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webServerIp\" class=\"label\">IP address</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver IP address.</li>\r\n            <li>To allow hosts to connect to any IP address, use '0.0.0.0'.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"webServerIp\" mask=\"IP\" [dropSpecialCharacters]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Webserver port -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webServerPort\" class=\"label\">Port</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver port.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"webServerPort\" [showButtons]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Webroot -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webRoot\" class=\"label\">Webroot</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver webroot for reverse proxying.</li>\r\n            <li>Example: to proxy it to 'http://localhost/autosubliminal/' the webroot needs to be '/autosubliminal'.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"webRoot\" [validationFeedback]=\"saveAttempt\" (keyUpEvent)=\"formatWebRoot()\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"userName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for the webserver authentication.</li>\r\n            <li>If a username and password are set, the webserver requires authentication.</li>\r\n            <li>Otherwise no authentication is set or required.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"userName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"password\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for the webserver authentication.</li>\r\n            <li>If a username and password are set, the webserver requires authentication.</li>\r\n            <li>Otherwise no authentication is set or required.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"password\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Launch browser -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"launchBrowser\" class=\"label\">Launch browser</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the browser will start every time Auto-Subliminal starts.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"launchBrowser\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, ElementRef, EventEmitter, inject, Input, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\r\nimport { SharedModule } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { TableModule } from 'primeng/table';\r\nimport { debounceTime, of } from 'rxjs';\r\nimport { catchError, mergeMap } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { FileSystemService } from '../../../core/services/api/filesystem.service';\r\nimport { FileBrowserFile, FileBrowserFileType, FileBrowserResult } from '../../models/filebrowser';\r\nimport { joinPaths, splitPathInChunks } from '../../utils/path-utils';\r\n\r\n@Component({\r\n  selector: 'app-file-browser',\r\n  templateUrl: './file-browser.component.html',\r\n  styleUrls: ['./file-browser.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, DialogModule, TableModule, ButtonModule, SharedModule, InputTextModule]\r\n})\r\nexport class FileBrowserComponent implements OnInit {\r\n\r\n  @ViewChildren('rowElement')\r\n  rowElements: QueryList<ElementRef<HTMLTableRowElement>>;\r\n\r\n  @Input()\r\n  visible = false;\r\n\r\n  @Output()\r\n  visibleChange = new EventEmitter<boolean>(); // Setup 2-way binding [(visible)]=\"...\"\r\n\r\n  @Input()\r\n  path = ''; // no path by default, if specified, the file browser will start to browse on this path\r\n\r\n  @Output()\r\n  pathChange = new EventEmitter<string>(); // Setup 2-way binding [(path)]=\"...\"\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  fileBrowserFiles: FileBrowserFile[];\r\n  selectedFile: FileBrowserFile;\r\n  //selectedFilePath: string;\r\n  selectedFilePath: UntypedFormControl;\r\n\r\n  private readonly FOLDER_UP = '...';\r\n\r\n  private fileBrowserResult: FileBrowserResult;\r\n  private fileBrowserPath: string;\r\n  private includeFiles = true;\r\n  private includeFolders = true;\r\n\r\n  private fileSystemService = inject(FileSystemService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    // In folder mode we don't want to select files, so do not include them\r\n    if (this.folderMode) {\r\n      this.includeFiles = false;\r\n    }\r\n    // Create and subscribe for selected file path changes\r\n    // Use debounceTime to prevent too much calls to backend while typing\r\n    // Use mergeMap to handle fast changes by typing in text field\r\n    // Proper error catching to make sure the subscribe does not break on error (f.e. when invalid path is typed)\r\n    this.selectedFilePath = new UntypedFormControl(this.path);\r\n    this.selectedFilePath.valueChanges.pipe(\r\n      debounceTime(500),\r\n      mergeMap((path) => this.fileSystemService.browse(path, this.includeFiles, this.includeFolders)),\r\n      catchError(() => of(null)),\r\n      takeUntilDestroyed(this.destroyRef)\r\n    ).subscribe({\r\n      next: (result) => this.loadFileBrowserResult(result)\r\n    });\r\n    // Trigger initial browse\r\n    this.fileSystemService.browse(this.path, this.includeFiles, this.includeFolders).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => this.loadFileBrowserResult(result)\r\n    });\r\n  }\r\n\r\n  select(): void {\r\n    // Handle selection of file or folder\r\n    if (this.selectedFile.type === FileBrowserFileType.FOLDER) {\r\n      let folder = this.selectedFile.name;\r\n      if (folder === this.FOLDER_UP) {\r\n        const pathInChunks = splitPathInChunks(this.fileBrowserPath);\r\n        const parentFolderchunks = pathInChunks.slice(0, -1); // get parent folder path in chunks\r\n        // On Windows, if parent chunk is a drive letter (without \\) we clear the path to get the root path\r\n        if (parentFolderchunks.length === 1 && parentFolderchunks[0].match(/[A-Z]+:/)) {\r\n          folder = '';\r\n        } else {\r\n          // All other cases, join chunks together for parent path\r\n          folder = joinPaths(...parentFolderchunks);\r\n        }\r\n      } else {\r\n        folder = this.getFilePath(folder); // get complete path of the folder\r\n      }\r\n      this.selectedFilePath.setValue(folder);\r\n    } else {\r\n      this.selectedFilePath.setValue(this.getFilePath(this.selectedFile.name));\r\n    }\r\n  }\r\n\r\n  isFile(type: FileBrowserFileType): boolean {\r\n    return FileBrowserFileType.FILE === type;\r\n  }\r\n\r\n  isFolder(type: FileBrowserFileType): boolean {\r\n    return FileBrowserFileType.FOLDER === type;\r\n  }\r\n\r\n  isFolderUp(name: string): boolean {\r\n    return name === this.FOLDER_UP;\r\n  }\r\n\r\n  selectFile(): void {\r\n    this.pathChange.emit(this.selectedFilePath.value);\r\n    this.close();\r\n  }\r\n\r\n  close(): void {\r\n    this.visibleChange.emit(false);\r\n  }\r\n\r\n  private loadFileBrowserResult(fileBrowserResult: FileBrowserResult): void {\r\n    // Check if present as the result can be null after an catch of an error in the api call\r\n    if (fileBrowserResult) {\r\n      // Set browser result\r\n      this.fileBrowserResult = fileBrowserResult;\r\n      // Set filebrowser path\r\n      this.fileBrowserPath = this.fileBrowserResult.path;\r\n      // Determine previously selected file name\r\n      const selectedFileName = this.getSelectedFileName(this.selectedFilePath.value, this.fileBrowserPath);\r\n      // Build browser files\r\n      this.fileBrowserFiles = this.getFileBrowserFiles(this.fileBrowserResult, selectedFileName);\r\n      // Insert folder up at beginning when not at root level (empty on Windows, / on unix)\r\n      if (this.fileBrowserPath !== '' && this.fileBrowserPath !== '/') {\r\n        this.fileBrowserFiles.unshift(new FileBrowserFile(FileBrowserFileType.FOLDER, this.FOLDER_UP));\r\n      }\r\n      // scroll to previously selected file name\r\n      this.scrollToSelectedFileName(selectedFileName);\r\n    }\r\n  }\r\n\r\n  private getSelectedFileName(selectedFilePath: string, fileBrowserPath: string): string {\r\n    let selectedFileName = null;\r\n    if (selectedFilePath && fileBrowserPath) {\r\n      // The selected filename is the extra part after stripping the file browser path (which is always a folder) from the selected file path\r\n      selectedFileName = joinPaths(...splitPathInChunks(selectedFilePath).filter((part) => !splitPathInChunks(fileBrowserPath).includes(part)));\r\n    } else if (selectedFilePath) {\r\n      // If file browser path is empty, the selecte file path is the selected filename\r\n      selectedFileName = selectedFilePath;\r\n    }\r\n    return selectedFileName;\r\n  }\r\n\r\n  private getFileBrowserFiles(fileBrowserResult: FileBrowserResult, selectedFileName: string): FileBrowserFile[] {\r\n    const files: FileBrowserFile[] = [];\r\n    this.selectedFile = null;\r\n    // Add folders\r\n    fileBrowserResult.folders.forEach((folder) => files.push(new FileBrowserFile(FileBrowserFileType.FOLDER, folder)));\r\n    // Add files\r\n    fileBrowserResult.files.forEach((file) => {\r\n      const fileBrowserFile = new FileBrowserFile(FileBrowserFileType.FILE, file);\r\n      files.push(fileBrowserFile);\r\n      // If the file is the selected file, mark it as selected\r\n      if (file === selectedFileName) {\r\n        this.selectedFile = fileBrowserFile;\r\n      }\r\n    });\r\n    return files;\r\n  }\r\n\r\n  private scrollToSelectedFileName(selectedFileName: string): void {\r\n    // Find the selected file name (if available) in the rows and scroll to it\r\n    if (selectedFileName) {\r\n      setTimeout(() => {\r\n        // Find element based on data-id attribute\r\n        const row = this.rowElements.find((r) => r.nativeElement.getAttribute('data-id') === selectedFileName);\r\n        if (row) {\r\n          row.nativeElement.scrollIntoView({ inline: 'start', block: 'start' });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private getFilePath(path: string): string {\r\n    let fileBrowserPath = this.fileBrowserPath;\r\n    if (fileBrowserPath.endsWith(appSettings.pathSeparator)) {\r\n      // Make sure not to end up with double path separators, so remove trailing path separator if available\r\n      fileBrowserPath = fileBrowserPath.slice(0, -1);\r\n    }\r\n    return fileBrowserPath ? joinPaths(fileBrowserPath, path) : path;\r\n  }\r\n}\r\n","<!-- File browser dialog -->\r\n<p-dialog [(visible)]=\"visible\"\r\n          [modal]=\"true\"\r\n          [closable]=\"false\"\r\n          [resizable]=\"false\"\r\n          header=\"File browser\"\r\n          styleClass=\"dialog-file-browser\">\r\n  <!-- Selection -->\r\n  <p-table [value]=\"fileBrowserFiles\"\r\n           [(selection)]=\"selectedFile\"\r\n           [scrollable]=\"true\"\r\n           (onRowSelect)=\"select()\"\r\n           selectionMode=\"single\"\r\n           scrollHeight=\"50vh\"\r\n           styleClass=\"p-datatable-sm p-datatable-striped\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"caption w-100\">\r\n        <input type=\"text\" pInputText [formControl]=\"selectedFilePath\" class=\"p-inputtext-sm w-100\" placeholder=\"Select or type path\">\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th class=\"col-type\">Type</th>\r\n        <th class=\"col-name\">Name</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-file>\r\n      <tr #rowElement [attr.data-id]=\"file.name\" [pSelectableRow]=\"file\">\r\n        <td class=\"col-type\">\r\n          <i *ngIf=\"isFolder(file.type) && isFolderUp(file.name)\" class=\"fa fa-level-up\" aria-hidden=\"true\" title=\"File\"></i>\r\n          <i *ngIf=\"isFolder(file.type) && !isFolderUp(file.name)\" class=\"fa fa-folder-o\" aria-hidden=\"true\" title=\"Folder\"></i>\r\n          <i *ngIf=\"isFile(file.type)\" class=\"fa fa-file-o\" aria-hidden=\"true\" title=\"File\"></i>\r\n        </td>\r\n        <td class=\"col-name\">{{file.name}}</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <!-- Buttons -->\r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-times\" label=\"Cancel\" styleClass=\"p-button p-button-secondary\" (click)=\"close()\"></p-button>\r\n    <p-button icon=\"pi pi-check\" label=\"Ok\" styleClass=\"p-button mr-0\" (click)=\"selectFile()\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-dropdown',\r\n  templateUrl: './input-dropdown.component.html',\r\n  styleUrls: ['./input-dropdown.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputDropdownComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgClass, FormsModule, ReactiveFormsModule, DropdownModule]\r\n})\r\nexport class InputDropdownComponent extends InputComponent {\r\n\r\n  @Input()\r\n  options: SelectItem[];\r\n\r\n  override writeValue(obj: any): void {\r\n    super.writeValue(obj);\r\n    this.changeDetectorRef.detectChanges(); // p-dropdown makes changes to the input, so detect changes again to prevent ExpressionChangedAfterItHasBeenCheckedError\r\n  }\r\n\r\n  onDropDownChange(event: DropdownChangeEvent): void {\r\n    this.changeEvent.emit(event.originalEvent);\r\n  }\r\n}\r\n","<!-- Dropdown -->\r\n<p-dropdown [inputId]=\"id || formControlName\"\r\n            [formControl]=\"control\"\r\n            [options]=\"options\"\r\n            [ngClass]=\"validationClass\"\r\n            (onFocus)=\"onFocus($event)\"\r\n            (onChange)=\"onDropDownChange($event)\"\r\n            (onBlur)=\"onBlur($event)\"\r\n            styleClass=\"w-100\">\r\n</p-dropdown>\r\n","import { NgClass, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileBrowserComponent } from '../../file-browser/file-browser.component';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-file-browser',\r\n  templateUrl: './input-file-browser.component.html',\r\n  styleUrls: ['./input-file-browser.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputFileBrowserComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, ButtonModule, FileBrowserComponent]\r\n})\r\nexport class InputFileBrowserComponent extends InputComponent {\r\n\r\n  @Input()\r\n  path = ''; // no path by default, if specified, the file browser will always start to browse on this path\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  @Input()\r\n  placeholder = '';\r\n\r\n  showFileBrowser = false;\r\n  browserPath = '';\r\n\r\n  openFileBrowser(): void {\r\n    this.browserPath = this.path || this.control.value || ''; // use fixed path, path from input field or empty if not specified\r\n    this.showFileBrowser = true;\r\n  }\r\n\r\n  setFilePath(filePath: string): void {\r\n    this.control.setValue(filePath);\r\n  }\r\n}\r\n","<!-- Input text -->\r\n<div class=\"p-inputgroup\">\r\n  <input pInputText\r\n         type=\"text\"\r\n         [id]=\"id || formControlName\"\r\n         [formControl]=\"control\"\r\n         [placeholder]=\"placeholder\"\r\n         [ngClass]=\"validationClass\"\r\n         (focus)=\"onFocus($event)\"\r\n         (keydown)=\"onKeyDown($event)\"\r\n         (keyup)=\"onKeyUp($event)\"\r\n         (change)=\"onChange($event)\"\r\n         (blur)=\"onBlur($event)\"\r\n         class=\"w-100\">\r\n  <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser()\"></p-button>\r\n</div>\r\n<!-- File browser -->\r\n<app-file-browser *ngIf=\"showFileBrowser\"\r\n                  [(visible)]=\"showFileBrowser\"\r\n                  [path]=\"browserPath\"\r\n                  [folderMode]=\"folderMode\"\r\n                  (pathChange)=\"setFilePath($event)\">\r\n</app-file-browser>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileBrowserComponent } from '../../file-browser/file-browser.component';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-multi-file-browser',\r\n  templateUrl: './input-multi-file-browser.component.html',\r\n  styleUrls: ['./input-multi-file-browser.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputMultiFileBrowserComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, ButtonModule, FileBrowserComponent]\r\n})\r\nexport class InputMultiFileBrowserComponent extends InputComponent {\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  showFileBrowser = false;\r\n  addButtonDisabled = true;\r\n  browserPath = '';\r\n  browserIndex = -1;\r\n  newValue: string;\r\n\r\n  get values(): string[] {\r\n    return this.control ? this.control.value : [];\r\n  }\r\n\r\n  // Required to only update single value inside array (https://angular.io/api/core/TrackByFunction) and do not refresh complete array\r\n  trackValueByIndex(index: number, value: string): number {\r\n    return index;\r\n  }\r\n\r\n  onValueKeyup(event: KeyboardEvent, originalValue: string): void {\r\n    // Replace original value with change value\r\n    const changedValue = (event.target as HTMLInputElement).value;\r\n    if (changedValue && changedValue.trim()) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  removeValue(value: string): void {\r\n    // Remove value\r\n    this.control.setValue(this.values.filter((val) => val !== value));\r\n  }\r\n\r\n  onNewValueKeyup(event: KeyboardEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    if (value && value.trim()) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  addNewValue(): void {\r\n    // Add new value\r\n    if (this.newValue) {\r\n      if (!this.values.includes(this.newValue.trim())) {\r\n        this.control.setValue(this.values.concat(this.newValue.trim()));\r\n      }\r\n      this.newValue = ''; // clear new value\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  openFileBrowser(path: string, index: number): void {\r\n    this.browserPath = path || '';\r\n    this.browserIndex = index;\r\n    this.showFileBrowser = true;\r\n  }\r\n\r\n  setFilePath(filePath: string): void {\r\n    if (this.browserIndex >= 0) {\r\n      this.values[this.browserIndex] = filePath.trim();\r\n    } else {\r\n      this.values.push(filePath.trim());\r\n    }\r\n    this.control.setValue(this.values);\r\n  }\r\n}\r\n","<!-- Input multi text -->\r\n<div class=\"input-multi-text\">\r\n  <!-- Existing fields -->\r\n  <div class=\"p-inputgroup\" *ngFor=\"let value of values; let i=index; trackBy:trackValueByIndex\">\r\n    <div class=\"p-inputgroup\">\r\n      <input type=\"text\" pInputText [value]=\"value\" (keyup)=\"onValueKeyup($event, value)\">\r\n      <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser(value, i)\"></p-button>\r\n      <p-button icon=\"pi pi-times\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"removeValue(value)\"></p-button>\r\n    </div>\r\n  </div>\r\n  <!-- New field -->\r\n  <div class=\"p-inputgroup\">\r\n    <div class=\"p-inputgroup\">\r\n      <input type=\"text\" pInputText [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (keyup)=\"onNewValueKeyup($event)\" placeholder=\"New value\">\r\n      <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser(newValue, -1)\"></p-button>\r\n      <p-button icon=\"pi pi-plus\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"addNewValue()\" [disabled]=\"addButtonDisabled\"></p-button>\r\n    </div>\r\n  </div>\r\n  <!-- File browser -->\r\n  <app-file-browser *ngIf=\"showFileBrowser\"\r\n                    [(visible)]=\"showFileBrowser\"\r\n                    [path]=\"browserPath\"\r\n                    [folderMode]=\"folderMode\"\r\n                    (pathChange)=\"setFilePath($event)\">\r\n  </app-file-browser>\r\n  <!-- Hidden input -->\r\n  <input type=\"hidden\" [id]=\"id || formControlName\" [formControl]=\"control\">\r\n</div>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-multi-text',\r\n  templateUrl: './input-multi-text.component.html',\r\n  styleUrls: ['./input-multi-text.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputMultiTextComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, DropdownModule, ButtonModule]\r\n})\r\nexport class InputMultiTextComponent extends InputComponent {\r\n\r\n  @Input()\r\n  options: SelectItem[]; // optional list of options to select from\r\n\r\n  newValue: string;\r\n\r\n  addButtonDisabled = true;\r\n\r\n  get values(): string[] {\r\n    return this.control ? this.control.value : [];\r\n  }\r\n\r\n  // Required to only update single value inside array (https://angular.io/api/core/TrackByFunction) and do not refresh complete array\r\n  trackValueByIndex(index: number, value: string): number {\r\n    return index;\r\n  }\r\n\r\n  onValueChange(event: DropdownChangeEvent, originalValue: string): void { // event model exposed by p-dropdown onchange\r\n    // Replace original value with change value\r\n    const changedValue = event.value;\r\n    if (changedValue) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  onValueKeyup(event: KeyboardEvent, originalValue: string): void {\r\n    // Replace original value with change value\r\n    const changedValue = (event.target as HTMLInputElement).value;\r\n    if (changedValue && changedValue.trim()) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  removeValue(value: string): void {\r\n    // Remove value\r\n    this.control.setValue(this.values.filter((val) => val !== value));\r\n  }\r\n\r\n  onNewValueChange(event: DropdownChangeEvent): void { // event model exposed by p-dropdown onchange\r\n    if (event.value) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  onNewValueKeyup(event: KeyboardEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    if (value && value.trim()) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  addNewValue(): void {\r\n    // Add new value\r\n    if (this.newValue) {\r\n      if (!this.values.includes(this.newValue.trim())) {\r\n        this.control.setValue(this.values.concat(this.newValue.trim()));\r\n      }\r\n      this.newValue = ''; // clear new value\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n}\r\n","<!-- Input multi text -->\r\n<div class=\"input-multi-text\">\r\n  <!-- Existing fields -->\r\n  <div class=\"p-inputgroup\" *ngFor=\"let value of values; trackBy:trackValueByIndex\">\r\n    <p-dropdown *ngIf=\"options\" [options]=\"options\" [ngModel]=\"value\" (onChange)=\"onValueChange($event, value)\" styleClass=\"w-100\"></p-dropdown>\r\n    <input *ngIf=\"!options\" type=\"text\" pInputText [value]=\"value\" (keyup)=\"onValueKeyup($event, value)\">\r\n    <p-button icon=\"pi pi-times\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"removeValue(value)\"></p-button>\r\n  </div>\r\n  <!-- New field -->\r\n  <div class=\"p-inputgroup\">\r\n    <p-dropdown *ngIf=\"options\" [options]=\"options\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (onChange)=\"onNewValueChange($event)\" styleClass=\"w-100\"></p-dropdown>\r\n    <input *ngIf=\"!options\" type=\"text\" pInputText [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (keyup)=\"onNewValueKeyup($event)\" placeholder=\"New value\">\r\n    <p-button icon=\"pi pi-plus\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"addNewValue()\" [disabled]=\"addButtonDisabled\"></p-button>\r\n  </div>\r\n  <!-- Hidden input -->\r\n  <input type=\"hidden\" [id]=\"id || formControlName\" [formControl]=\"control\">\r\n</div>\r\n","export class FileBrowserResult {\r\n  files: string[];\r\n  folders: string[];\r\n  path: string;\r\n}\r\n\r\nexport enum FileBrowserFileType {\r\n  FILE = 'file',\r\n  FOLDER = 'folder'\r\n}\r\n\r\nexport class FileBrowserFile {\r\n  type: FileBrowserFileType;\r\n  name: string;\r\n\r\n  constructor(type: FileBrowserFileType, name: string) {\r\n    this.type = type;\r\n    this.name = name;\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, Header, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { SearchIcon } from 'primeng/icons/search';\nimport { CheckIcon } from 'primeng/icons/check';\n\nconst LISTBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Listbox),\n    multi: true\n};\n/**\n * ListBox is used to select one or more values from a list of items.\n * @group Components\n */\nclass Listbox {\n    el;\n    cd;\n    filterService;\n    config;\n    /**\n     * When specified, allows selecting multiple values.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Inline style of the container.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the container.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the list element.\n     * @group Props\n     */\n    listStyle;\n    /**\n     * Style class of the list element.\n     * @group Props\n     */\n    listStyleClass;\n    /**\n     * When present, it specifies that the element value cannot be changed.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * When specified, allows selecting items with checkboxes.\n     * @group Props\n     */\n    checkbox = false;\n    /**\n     * When specified, displays a filter input at header.\n     * @group Props\n     */\n    filter = false;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    metaKeySelection = true;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Whether header checkbox is shown in multiple mode.\n     * @group Props\n     */\n    showToggleAll = true;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Defines placeholder of the filter input.\n     * @group Props\n     */\n    filterPlaceHolder;\n    /**\n     * Text to display when filtering does not return any results.\n     * @group Props\n     */\n    emptyFilterMessage;\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * An array of selectitems to display as the available options.\n     * @group Props\n     */\n    get options() {\n        return this._options;\n    }\n    set options(val) {\n        this._options = val;\n        if (this.hasFilter())\n            this.activateFilter();\n    }\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n        return this._filterValue;\n    }\n    set filterValue(val) {\n        this._filterValue = val;\n        this.activateFilter();\n    }\n    /**\n     * Callback to invoke on value change.\n     * @param {ListboxChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when option is clicked.\n     * @param {ListboxClickEvent} event - Custom click event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when option is double clicked.\n     * @param {ListboxDoubleClickEvent} event - Custom double click event.\n     * @group Emits\n     */\n    onDblClick = new EventEmitter();\n    headerCheckboxViewChild;\n    filterViewChild;\n    headerFacet;\n    footerFacet;\n    templates;\n    _options;\n    itemTemplate;\n    groupTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    filterIconTemplate;\n    checkIconTemplate;\n    _filterValue;\n    _filteredOptions;\n    filterOptions;\n    filtered;\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    optionTouched;\n    focus;\n    headerCheckboxFocus;\n    translationSubscription;\n    constructor(el, cd, filterService, config) {\n        this.el = el;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.config = config;\n    }\n    ngOnInit() {\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.cd.markForCheck();\n        });\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilter(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'filtericon':\n                    this.filterIconTemplate = item.template;\n                    break;\n                case 'checkicon':\n                    this.checkIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : this.optionLabel || option.value === undefined ? option : option.value;\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onOptionClick(event, option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        if (this.multiple) {\n            if (this.checkbox)\n                this.onOptionClickCheckbox(event, option);\n            else\n                this.onOptionClickMultiple(event, option);\n        }\n        else {\n            this.onOptionClickSingle(event, option);\n        }\n        this.onClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n        this.optionTouched = false;\n    }\n    onOptionTouchEnd(option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        this.optionTouched = true;\n    }\n    onOptionDoubleClick(event, option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        this.onDblClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n    }\n    onOptionClickSingle(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                if (metaKey) {\n                    this.value = null;\n                    valueChanged = true;\n                }\n            }\n            else {\n                this.value = this.getOptionValue(option);\n                valueChanged = true;\n            }\n        }\n        else {\n            this.value = selected ? null : this.getOptionValue(option);\n            valueChanged = true;\n        }\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n    onOptionClickMultiple(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                if (metaKey) {\n                    this.removeOption(option);\n                }\n                else {\n                    this.value = [this.getOptionValue(option)];\n                }\n                valueChanged = true;\n            }\n            else {\n                this.value = metaKey ? this.value || [] : [];\n                this.value = [...this.value, this.getOptionValue(option)];\n                valueChanged = true;\n            }\n        }\n        else {\n            if (selected) {\n                this.removeOption(option);\n            }\n            else {\n                this.value = [...(this.value || []), this.getOptionValue(option)];\n            }\n            valueChanged = true;\n        }\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n    onOptionClickCheckbox(event, option) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        let selected = this.isSelected(option);\n        if (selected) {\n            this.removeOption(option);\n        }\n        else {\n            this.value = this.value ? this.value : [];\n            this.value = [...this.value, this.getOptionValue(option)];\n        }\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    removeOption(option) {\n        this.value = this.value.filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.dataKey));\n    }\n    isSelected(option) {\n        let selected = false;\n        let optionValue = this.getOptionValue(option);\n        if (this.multiple) {\n            if (this.value) {\n                for (let val of this.value) {\n                    if (ObjectUtils.equals(val, optionValue, this.dataKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            selected = ObjectUtils.equals(this.value, optionValue, this.dataKey);\n        }\n        return selected;\n    }\n    get allChecked() {\n        let optionsToRender = this.optionsToRender;\n        if (!optionsToRender || optionsToRender.length === 0) {\n            return false;\n        }\n        else {\n            let selectedDisabledItemsLength = 0;\n            let unselectedDisabledItemsLength = 0;\n            let selectedEnabledItemsLength = 0;\n            let visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\n            for (let option of optionsToRender) {\n                if (!this.group) {\n                    let disabled = this.isOptionDisabled(option);\n                    let selected = this.isSelected(option);\n                    if (disabled) {\n                        if (selected)\n                            selectedDisabledItemsLength++;\n                        else\n                            unselectedDisabledItemsLength++;\n                    }\n                    else {\n                        if (selected)\n                            selectedEnabledItemsLength++;\n                        else\n                            return false;\n                    }\n                }\n                else {\n                    for (let opt of this.getOptionGroupChildren(option)) {\n                        let disabled = this.isOptionDisabled(opt);\n                        let selected = this.isSelected(opt);\n                        if (disabled) {\n                            if (selected)\n                                selectedDisabledItemsLength++;\n                            else\n                                unselectedDisabledItemsLength++;\n                        }\n                        else {\n                            if (selected)\n                                selectedEnabledItemsLength++;\n                            else {\n                                return false;\n                            }\n                        }\n                        visibleOptionsLength++;\n                    }\n                }\n            }\n            return (visibleOptionsLength === selectedDisabledItemsLength ||\n                visibleOptionsLength === selectedEnabledItemsLength ||\n                (selectedEnabledItemsLength && visibleOptionsLength === selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength));\n        }\n    }\n    get optionsToRender() {\n        return this._filteredOptions || this.options;\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    hasFilter() {\n        return this._filterValue && this._filterValue.trim().length > 0;\n    }\n    isEmpty() {\n        return !this.optionsToRender || (this.optionsToRender && this.optionsToRender.length === 0);\n    }\n    onFilter(event) {\n        this._filterValue = event.target.value;\n        this.activateFilter();\n    }\n    activateFilter() {\n        if (this.hasFilter() && this._options) {\n            if (this.group) {\n                let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n                let filteredGroups = [];\n                for (let optgroup of this.options) {\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push({ ...optgroup, ...{ [this.optionGroupChildren]: filteredSubOptions } });\n                    }\n                }\n                this._filteredOptions = filteredGroups;\n            }\n            else {\n                this._filteredOptions = this._options.filter((option) => this.filterService.filters[this.filterMatchMode](this.getOptionLabel(option), this._filterValue, this.filterLocale));\n            }\n        }\n        else {\n            this._filteredOptions = null;\n        }\n    }\n    resetFilter() {\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this._filterValue = null;\n        this._filteredOptions = null;\n    }\n    get toggleAllDisabled() {\n        let optionsToRender = this.optionsToRender;\n        if (!optionsToRender || optionsToRender.length === 0) {\n            return true;\n        }\n        else {\n            for (let option of optionsToRender) {\n                if (!this.isOptionDisabled(option))\n                    return false;\n            }\n            return true;\n        }\n    }\n    toggleAll(event) {\n        if (this.disabled || this.toggleAllDisabled || this.readonly) {\n            return;\n        }\n        let allChecked = this.allChecked;\n        if (allChecked)\n            this.uncheckAll();\n        else\n            this.checkAll();\n        this.onModelChange(this.value);\n        this.onChange.emit({ originalEvent: event, value: this.value });\n        event.preventDefault();\n    }\n    checkAll() {\n        let optionsToRender = this.optionsToRender;\n        let val = [];\n        optionsToRender.forEach((opt) => {\n            if (!this.group) {\n                let optionDisabled = this.isOptionDisabled(opt);\n                if (!optionDisabled || (optionDisabled && this.isSelected(opt))) {\n                    val.push(this.getOptionValue(opt));\n                }\n            }\n            else {\n                let subOptions = this.getOptionGroupChildren(opt);\n                if (subOptions) {\n                    subOptions.forEach((option) => {\n                        let optionDisabled = this.isOptionDisabled(option);\n                        if (!optionDisabled || (optionDisabled && this.isSelected(option))) {\n                            val.push(this.getOptionValue(option));\n                        }\n                    });\n                }\n            }\n        });\n        this.value = val;\n    }\n    uncheckAll() {\n        let optionsToRender = this.optionsToRender;\n        let val = [];\n        optionsToRender.forEach((opt) => {\n            if (!this.group) {\n                let optionDisabled = this.isOptionDisabled(opt);\n                if (optionDisabled && this.isSelected(opt)) {\n                    val.push(this.getOptionValue(opt));\n                }\n            }\n            else {\n                if (opt.items) {\n                    opt.items.forEach((option) => {\n                        let optionDisabled = this.isOptionDisabled(option);\n                        if (optionDisabled && this.isSelected(option)) {\n                            val.push(this.getOptionValue(option));\n                        }\n                    });\n                }\n            }\n        });\n        this.value = val;\n    }\n    onOptionKeyDown(event, option) {\n        if (this.readonly) {\n            return;\n        }\n        let item = event.currentTarget;\n        switch (event.which) {\n            //down\n            case 40:\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    nextItem.focus();\n                }\n                event.preventDefault();\n                break;\n            //up\n            case 38:\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    prevItem.focus();\n                }\n                event.preventDefault();\n                break;\n            //enter\n            case 13:\n                this.onOptionClick(event, option);\n                event.preventDefault();\n                break;\n        }\n    }\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-disabled') || DomHandler.isHidden(nextItem) || DomHandler.hasClass(nextItem, 'p-listbox-item-group') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return null;\n    }\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-disabled') || DomHandler.isHidden(prevItem) || DomHandler.hasClass(prevItem, 'p-listbox-item-group') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return null;\n    }\n    onHeaderCheckboxFocus() {\n        this.headerCheckboxFocus = true;\n    }\n    onHeaderCheckboxBlur() {\n        this.headerCheckboxFocus = false;\n    }\n    ngOnDestroy() {\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Listbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Listbox, selector: \"p-listbox\", inputs: { multiple: \"multiple\", style: \"style\", styleClass: \"styleClass\", listStyle: \"listStyle\", listStyleClass: \"listStyleClass\", readonly: \"readonly\", disabled: \"disabled\", checkbox: \"checkbox\", filter: \"filter\", filterBy: \"filterBy\", filterMatchMode: \"filterMatchMode\", filterLocale: \"filterLocale\", metaKeySelection: \"metaKeySelection\", dataKey: \"dataKey\", showToggleAll: \"showToggleAll\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", optionDisabled: \"optionDisabled\", ariaFilterLabel: \"ariaFilterLabel\", filterPlaceHolder: \"filterPlaceHolder\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", group: \"group\", options: \"options\", filterValue: \"filterValue\" }, outputs: { onChange: \"onChange\", onClick: \"onClick\", onDblClick: \"onDblClick\" }, host: { classAttribute: \"p-element\" }, providers: [LISTBOX_VALUE_ACCESSOR], queries: [{ propertyName: \"headerFacet\", first: true, predicate: Header, descendants: true }, { propertyName: \"footerFacet\", first: true, predicate: Footer, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"headerCheckboxViewChild\", first: true, predicate: [\"headerchkbox\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"{ 'p-listbox p-component': true, 'p-disabled': disabled }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple && showToggleAll\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\">\n                    <div class=\"p-hidden-accessible\">\n                        <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\" [disabled]=\"disabled || toggleAllDisabled\" />\n                    </div>\n                    <div #headerchkbox class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\" (click)=\"toggleAll($event)\">\n                        <ng-container *ngIf=\"allChecked\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filter\n                            type=\"text\"\n                            [value]=\"filterValue || ''\"\n                            (input)=\"onFilter($event)\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            [disabled]=\"disabled\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\">\n                <ul class=\"p-listbox-list\" role=\"listbox\" [attr.aria-multiselectable]=\"multiple\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"optionsToRender\">\n                            <li class=\"p-listbox-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: optionsToRender }\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-optionsToDisplay>\n                        <li\n                            *ngFor=\"let option of optionsToDisplay; let i = index\"\n                            [attr.tabindex]=\"disabled || isOptionDisabled(option) ? null : '0'\"\n                            pRipple\n                            [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-disabled': this.isOptionDisabled(option) }\"\n                            role=\"option\"\n                            [attr.aria-label]=\"getOptionLabel(option)\"\n                            [attr.aria-selected]=\"isSelected(option)\"\n                            (click)=\"onOptionClick($event, option)\"\n                            (dblclick)=\"onOptionDoubleClick($event, option)\"\n                            (touchend)=\"onOptionTouchEnd(option)\"\n                            (keydown)=\"onOptionKeyDown($event, option)\"\n                        >\n                            <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                    <ng-container *ngIf=\"isSelected(option)\">\n                                        <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                                        <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                            <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                        </li>\n                    </ng-template>\n                    <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                            {{ emptyFilterMessageLabel }}\n                        </ng-container>\n                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                    </li>\n                    <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                            {{ emptyMessageLabel }}\n                        </ng-container>\n                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i3.Ripple; }), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(function () { return SearchIcon; }), selector: \"SearchIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Listbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-listbox', template: `\n        <div [ngClass]=\"{ 'p-listbox p-component': true, 'p-disabled': disabled }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple && showToggleAll\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\">\n                    <div class=\"p-hidden-accessible\">\n                        <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\" [disabled]=\"disabled || toggleAllDisabled\" />\n                    </div>\n                    <div #headerchkbox class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\" (click)=\"toggleAll($event)\">\n                        <ng-container *ngIf=\"allChecked\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filter\n                            type=\"text\"\n                            [value]=\"filterValue || ''\"\n                            (input)=\"onFilter($event)\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            [disabled]=\"disabled\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\">\n                <ul class=\"p-listbox-list\" role=\"listbox\" [attr.aria-multiselectable]=\"multiple\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"optionsToRender\">\n                            <li class=\"p-listbox-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: optionsToRender }\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-optionsToDisplay>\n                        <li\n                            *ngFor=\"let option of optionsToDisplay; let i = index\"\n                            [attr.tabindex]=\"disabled || isOptionDisabled(option) ? null : '0'\"\n                            pRipple\n                            [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-disabled': this.isOptionDisabled(option) }\"\n                            role=\"option\"\n                            [attr.aria-label]=\"getOptionLabel(option)\"\n                            [attr.aria-selected]=\"isSelected(option)\"\n                            (click)=\"onOptionClick($event, option)\"\n                            (dblclick)=\"onOptionDoubleClick($event, option)\"\n                            (touchend)=\"onOptionTouchEnd(option)\"\n                            (keydown)=\"onOptionKeyDown($event, option)\"\n                        >\n                            <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                    <ng-container *ngIf=\"isSelected(option)\">\n                                        <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                                        <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                            <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                        </li>\n                    </ng-template>\n                    <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                            {{ emptyFilterMessageLabel }}\n                        </ng-container>\n                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                    </li>\n                    <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                            {{ emptyMessageLabel }}\n                        </ng-container>\n                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, providers: [LISTBOX_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }, { type: i1.PrimeNGConfig }]; }, propDecorators: { multiple: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], listStyle: [{\n                type: Input\n            }], listStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], checkbox: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], showToggleAll: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], filterPlaceHolder: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onDblClick: [{\n                type: Output\n            }], headerCheckboxViewChild: [{\n                type: ViewChild,\n                args: ['headerchkbox']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], headerFacet: [{\n                type: ContentChild,\n                args: [Header]\n            }], footerFacet: [{\n                type: ContentChild,\n                args: [Footer]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ListboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, declarations: [Listbox], imports: [CommonModule, SharedModule, RippleModule, SearchIcon, CheckIcon], exports: [Listbox, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, imports: [CommonModule, SharedModule, RippleModule, SearchIcon, CheckIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, RippleModule, SearchIcon, CheckIcon],\n                    exports: [Listbox, SharedModule],\n                    declarations: [Listbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LISTBOX_VALUE_ACCESSOR, Listbox, ListboxModule };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ExclamationTriangleIcon } from 'primeng/icons/exclamationtriangle';\nimport { InfoCircleIcon } from 'primeng/icons/infocircle';\nimport { TimesCircleIcon } from 'primeng/icons/timescircle';\n\n/**\n * Message groups a collection of contents in tabs.\n * @group Components\n */\nclass UIMessage {\n    /**\n     * Severity level of the message.\n     * @group Props\n     */\n    severity;\n    /**\n     * Text content.\n     * @group Props\n     */\n    text;\n    /**\n     * Whether displaying messages would be escaped or not.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    get icon() {\n        if (this.severity && this.severity.trim()) {\n            return this.severity;\n        }\n        else {\n            return 'info';\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: UIMessage, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: UIMessage, selector: \"p-message\", inputs: { severity: \"severity\", text: \"text\", escape: \"escape\", style: \"style\", styleClass: \"styleClass\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div\n            aria-live=\"polite\"\n            class=\"p-inline-message p-component p-inline-message\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-inline-message-info': severity === 'info',\n                'p-inline-message-warn': severity === 'warn',\n                'p-inline-message-error': severity === 'error',\n                'p-inline-message-success': severity === 'success',\n                'p-inline-message-icon-only': this.text == null\n            }\"\n        >\n            <CheckIcon *ngIf=\"icon === 'success'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <InfoCircleIcon *ngIf=\"icon === 'info'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <TimesCircleIcon *ngIf=\"icon === 'error'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <ExclamationTriangleIcon *ngIf=\"icon === 'warn'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{ text }}</span>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return InfoCircleIcon; }), selector: \"InfoCircleIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return TimesCircleIcon; }), selector: \"TimesCircleIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ExclamationTriangleIcon; }), selector: \"ExclamationTriangleIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: UIMessage, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-message', template: `\n        <div\n            aria-live=\"polite\"\n            class=\"p-inline-message p-component p-inline-message\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-inline-message-info': severity === 'info',\n                'p-inline-message-warn': severity === 'warn',\n                'p-inline-message-error': severity === 'error',\n                'p-inline-message-success': severity === 'success',\n                'p-inline-message-icon-only': this.text == null\n            }\"\n        >\n            <CheckIcon *ngIf=\"icon === 'success'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <InfoCircleIcon *ngIf=\"icon === 'info'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <TimesCircleIcon *ngIf=\"icon === 'error'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <ExclamationTriangleIcon *ngIf=\"icon === 'warn'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{ text }}</span>\n            </ng-template>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}\\n\"] }]\n        }], propDecorators: { severity: [{\n                type: Input\n            }], text: [{\n                type: Input\n            }], escape: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }] } });\nclass MessageModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, declarations: [UIMessage], imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon], exports: [UIMessage] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon],\n                    exports: [UIMessage],\n                    declarations: [UIMessage]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MessageModule, UIMessage };\n"],"names":["appSettings","ApiServiceTemplate","FileSystemService","constructor","URL","webRoot","browse","path","includeFiles","includeFolders","url","httpClient","get","options","t","factory","ɵfac","providedIn","NgIf","DestroyRef","inject","takeUntilDestroyed","FormsModule","ReactiveFormsModule","UntypedFormBuilder","Validators","ButtonModule","PanelModule","AppSettingsService","SettingsService","MessageService","FormUtils","FormValidators","IconDropdownComponent","InputDropdownComponent","InputFileBrowserComponent","InputMultiFileBrowserComponent","InputMultiTextComponent","InputNumberComponent","GeneralSettings","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r1","saveAttempt","ɵɵtemplate","SettingsGeneralComponent_form_2_div_215_Template","ɵɵlistener","SettingsGeneralComponent_form_2_Template_p_button_onClick_251_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","save","ctx_r0","settingsForm","languages","enabledOrDisabled","ɵɵtextInterpolate1","scanDiskIntervalDefault","checkSubIntervalDefault","checkSubDeadlineDefault","checkSubDeltaDefault","checkVersionIntervalDefault","showFfmpegPath","timestampFormats","SettingsGeneralComponent","fb","settingsService","appSettingsService","messageService","destroyRef","ngOnInit","initDefaults","buildSelectItems","getGeneralSettings","pipe","subscribe","next","generalSettings","buildForm","error","showErrorMessage","valid","updateGeneralSettings","showSuccessMessage","reload","scrollToFirstInvalidField","getFormControlValue","enabledOrDisabledSelectItems","push","label","value","forEach","language","name","code","group","videoPaths","required","notEmpty","defaultLanguage","defaultLanguageSuffix","additionalLanguages","manualSearchWithScoring","scanDiskInterval","scanDiskAtStartup","checkSubInterval","checkSubAtStartup","checkSubDeadline","checkSubDelta","checkVersionInterval","checkVersionAtStartup","checkVersionAutoUpdate","scanEmbeddedSubs","scanHardcodedSubs","skipHiddenDirs","detectInvalidSubLanguage","detectedLanguageProbability","manualSubSync","ffmpegPath","minVideoFileSize","maxDbResults","timestampFormat","validator","globalFormValidator","formGroup","ffmpegPathRequired","trim","addFormControlValidationErrors","controls","markFormControlFieldsAsDirty","clearFormControlValidationErrors","settings","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SettingsGeneralComponent_Template","rf","ctx","SettingsGeneralComponent_form_2_Template","i1","Panel","i2","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i3","Button","styles","LibrarySettings","SettingsLibraryComponent_form_2_Template_p_button_onClick_56_listener","_r2","scanLibraryIntervalDefault","SettingsLibraryComponent","getLibrarySettings","librarySettings","updateLibrarySettings","libraryMode","libraryPaths","scanLibraryInterval","scanLibraryAtStartup","libraryEditMode","SettingsLibraryComponent_Template","SettingsLibraryComponent_form_2_Template","InputTextComponent","LogSettings","SettingsLoggingComponent_form_2_Template_p_button_onClick_92_listener","logLevels","SettingsLoggingComponent","getLogSettings","logSettings","updateLogSettings","logFile","logLevel","logNum","logSize","logHttpAccess","logExternalLibs","logDetailedFormat","logReversed","logLevelConsole","SettingsLoggingComponent_Template","SettingsLoggingComponent_form_2_Template","MessageModule","NameMappingSettings","SettingsNamemappingComponent_form_2_Template_p_button_onClick_89_listener","SettingsNamemappingComponent","getNameMappingSettings","nameMappingSettings","updateNameMappingSettings","showNameMapping","addic7edShowNameMapping","alternativeShowNameMapping","movieNameMapping","alternativeMovieNameMapping","SettingsNamemappingComponent_Template","SettingsNamemappingComponent_form_2_Template","i4","UIMessage","DialogModule","InputTextModule","NotificationSettings","SettingsNotificationComponent_form_2_Template_p_button_onClick_23_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_125_listener","ctx_r4","test","SettingsNotificationComponent_form_2_Template_p_button_onClick_126_listener","ctx_r5","SettingsNotificationComponent_form_2_Template_p_button_onClick_162_listener","ctx_r6","registerTwitter","SettingsNotificationComponent_form_2_Template_p_button_onClick_163_listener","ctx_r7","SettingsNotificationComponent_form_2_Template_p_button_onClick_164_listener","ctx_r8","SettingsNotificationComponent_form_2_Template_p_button_onClick_191_listener","ctx_r9","SettingsNotificationComponent_form_2_Template_p_button_onClick_192_listener","ctx_r10","SettingsNotificationComponent_form_2_Template_p_button_onClick_239_listener","ctx_r11","SettingsNotificationComponent_form_2_Template_p_button_onClick_240_listener","ctx_r12","SettingsNotificationComponent_form_2_Template_p_button_onClick_294_listener","ctx_r13","SettingsNotificationComponent_form_2_Template_p_button_onClick_295_listener","ctx_r14","SettingsNotificationComponent_form_2_Template_p_button_onClick_335_listener","ctx_r15","SettingsNotificationComponent_form_2_Template_p_button_onClick_336_listener","ctx_r16","SettingsNotificationComponent_form_2_Template_p_button_onClick_363_listener","ctx_r17","SettingsNotificationComponent_form_2_Template_p_button_onClick_364_listener","ctx_r18","SettingsNotificationComponent_form_2_Template_p_button_onClick_408_listener","ctx_r19","SettingsNotificationComponent_form_2_Template_p_button_onClick_409_listener","ctx_r20","SettingsNotificationComponent_form_2_Template_p_button_onClick_412_listener","ctx_r21","growlProwlPriorities","SettingsNotificationComponent_div_4_Template_input_ngModelChange_29_listener","$event","_r23","ctx_r22","twitterRegistration","tokenPin","SettingsNotificationComponent_div_4_Template_p_button_onClick_30_listener","ctx_r24","authorizeTwitter","ɵɵsanitizeUrl","SettingsNotificationComponent","twitterRegistrationDialog","getNotificationSettings","notificationSettings","updateNotificationSettings","notifierName","testNotifier","twitterAuthorization","setFormControlValue","twitterKey","twitterSecret","notify","notifyMail","mailServer","mailFromName","mailFrom","mailTo","mailUserName","mailPassword","mailSubject","mailEncryption","mailAuthentication","notifyTwitter","notifyPushalot","pushalotApi","notifyPushover","pushoverKey","pushoverApi","pushoverDevices","notifyGrowl","growlHost","growlPort","growlPassword","growlPriority","notifyProwl","prowlApi","prowlPriority","notifyPushbullet","pushbulletApi","notifyTelegram","telegramBotApi","telegramChatId","SettingsNotificationComponent_Template","SettingsNotificationComponent_form_2_Template","SettingsNotificationComponent_Template_p_dialog_visibleChange_3_listener","SettingsNotificationComponent_div_4_Template","DefaultValueAccessor","NgModel","Dialog","i5","InputText","i6","PostProcessSettings","SettingsPostprocessingComponent_form_2_Template_p_button_onClick_82_listener","SettingsPostprocessingComponent","getPostProcessSettings","postProcessSettings","updatePostProcessSettings","postProcess","postProcessIndividual","postProcessUtf8Encoding","showPostProcessCmd","showPostProcessArgs","moviePostProcessCmd","moviePostProcessArgs","SettingsPostprocessingComponent_Template","SettingsPostprocessingComponent_form_2_Template","SettingsSkipmappingComponent","SettingsSubliminalComponent","SettingsWebserverComponent","routes","redirectTo","pathMatch","component","SkipMappingSettings","SettingsSkipmappingComponent_form_2_Template_p_button_onClick_45_listener","getSkipMappingSettings","skipMappingSettings","updateSkipMappingSettings","skipShowMapping","skipMovieMapping","SettingsSkipmappingComponent_Template","SettingsSkipmappingComponent_form_2_Template","ListboxModule","InputSwitchComponent","SubliminalSettings","SettingsSubliminalComponent_form_2_Template_p_button_onClick_192_listener","subliminalProviders","antiCaptchaProviders","getSubliminalSettings","subliminalSettings","updateSubliminalSettings","provider","source","class","showMatchSource","showMatchQuality","showMatchCodec","showMatchReleaseGroup","movieMatchSource","movieMatchQuality","movieMatchCodec","movieMatchReleaseGroup","subtitleUtf8Encoding","refineVideo","manualRefineVideo","preferHearingImpaired","antiCaptchaClass","antiCaptchaClientKey","addic7edUserName","addic7edPassword","addic7edUserId","opensubtitlesUserName","opensubtitlesPassword","legendastvUserName","legendastvPassword","SettingsSubliminalComponent_Template","SettingsSubliminalComponent_form_2_Template","Listbox","WebServerSettings","SettingsWebserverComponent_form_2_Template_app_input_text_keyUpEvent_34_listener","formatWebRoot","SettingsWebserverComponent_form_2_Template_p_button_onClick_72_listener","ctx_r3","getWebServerSettings","webServerSettings","startsWith","endsWith","replace","RegExp","updateWebServerSettings","webServerIp","webServerPort","userName","password","launchBrowser","SettingsWebserverComponent_Template","SettingsWebserverComponent_form_2_Template","EventEmitter","UntypedFormControl","SharedModule","TableModule","debounceTime","of","catchError","mergeMap","FileBrowserFile","FileBrowserFileType","joinPaths","splitPathInChunks","selectedFilePath","FileBrowserComponent_ng_template_4_i_3_Template","FileBrowserComponent_ng_template_4_i_4_Template","FileBrowserComponent_ng_template_4_i_5_Template","file_r4","ɵɵattribute","isFolder","type","isFolderUp","isFile","ɵɵtextInterpolate","FileBrowserComponent_ng_template_5_Template_p_button_click_0_listener","_r10","close","FileBrowserComponent_ng_template_5_Template_p_button_click_1_listener","selectFile","FileBrowserComponent","visible","visibleChange","pathChange","folderMode","FOLDER_UP","fileSystemService","valueChanges","result","loadFileBrowserResult","select","selectedFile","FOLDER","folder","pathInChunks","fileBrowserPath","parentFolderchunks","slice","length","match","getFilePath","setValue","FILE","emit","fileBrowserResult","selectedFileName","getSelectedFileName","fileBrowserFiles","getFileBrowserFiles","unshift","scrollToSelectedFileName","filter","part","includes","files","folders","file","fileBrowserFile","setTimeout","row","rowElements","find","r","nativeElement","getAttribute","scrollIntoView","inline","block","pathSeparator","viewQuery","FileBrowserComponent_Query","FileBrowserComponent_Template_p_dialog_visibleChange_0_listener","FileBrowserComponent_Template_p_table_selectionChange_1_listener","FileBrowserComponent_Template_p_table_onRowSelect_1_listener","FileBrowserComponent_ng_template_2_Template","FileBrowserComponent_ng_template_3_Template","FileBrowserComponent_ng_template_4_Template","FileBrowserComponent_ng_template_5_Template","FormControlDirective","PrimeTemplate","Table","SelectableRow","NgClass","forwardRef","NG_VALUE_ACCESSOR","DropdownModule","InputComponent","writeValue","obj","changeDetectorRef","detectChanges","onDropDownChange","event","changeEvent","originalEvent","inputs","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵInheritDefinitionFeature","InputDropdownComponent_Template","InputDropdownComponent_Template_p_dropdown_onFocus_0_listener","onFocus","InputDropdownComponent_Template_p_dropdown_onChange_0_listener","InputDropdownComponent_Template_p_dropdown_onBlur_0_listener","onBlur","id","formControlName","control","validationClass","Dropdown","InputFileBrowserComponent_app_file_browser_3_Template_app_file_browser_visibleChange_0_listener","showFileBrowser","InputFileBrowserComponent_app_file_browser_3_Template_app_file_browser_pathChange_0_listener","setFilePath","browserPath","placeholder","openFileBrowser","filePath","InputFileBrowserComponent_Template","InputFileBrowserComponent_Template_input_focus_1_listener","InputFileBrowserComponent_Template_input_keydown_1_listener","onKeyDown","InputFileBrowserComponent_Template_input_keyup_1_listener","onKeyUp","InputFileBrowserComponent_Template_input_change_1_listener","onChange","InputFileBrowserComponent_Template_input_blur_1_listener","InputFileBrowserComponent_Template_p_button_onClick_2_listener","InputFileBrowserComponent_app_file_browser_3_Template","NgFor","InputMultiFileBrowserComponent_div_1_Template_input_keyup_2_listener","restoredCtx","_r5","value_r2","$implicit","onValueKeyup","InputMultiFileBrowserComponent_div_1_Template_p_button_onClick_3_listener","i_r3","index","InputMultiFileBrowserComponent_div_1_Template_p_button_onClick_4_listener","removeValue","InputMultiFileBrowserComponent_app_file_browser_7_Template_app_file_browser_visibleChange_0_listener","_r9","InputMultiFileBrowserComponent_app_file_browser_7_Template_app_file_browser_pathChange_0_listener","addButtonDisabled","browserIndex","values","trackValueByIndex","originalValue","changedValue","target","map","val","onNewValueKeyup","addNewValue","newValue","concat","InputMultiFileBrowserComponent_Template","InputMultiFileBrowserComponent_div_1_Template","InputMultiFileBrowserComponent_Template_input_ngModelChange_4_listener","InputMultiFileBrowserComponent_Template_input_keyup_4_listener","InputMultiFileBrowserComponent_Template_p_button_onClick_5_listener","InputMultiFileBrowserComponent_Template_p_button_onClick_6_listener","InputMultiFileBrowserComponent_app_file_browser_7_Template","InputMultiTextComponent_div_1_p_dropdown_1_Template_p_dropdown_onChange_0_listener","_r8","value_r3","onValueChange","InputMultiTextComponent_div_1_input_2_Template_input_keyup_0_listener","_r12","InputMultiTextComponent_div_1_p_dropdown_1_Template","InputMultiTextComponent_div_1_input_2_Template","InputMultiTextComponent_div_1_Template_p_button_onClick_3_listener","_r15","InputMultiTextComponent_p_dropdown_3_Template_p_dropdown_ngModelChange_0_listener","_r17","InputMultiTextComponent_p_dropdown_3_Template_p_dropdown_onChange_0_listener","onNewValueChange","InputMultiTextComponent_input_4_Template_input_ngModelChange_0_listener","_r20","InputMultiTextComponent_input_4_Template_input_keyup_0_listener","InputMultiTextComponent_Template","InputMultiTextComponent_div_1_Template","InputMultiTextComponent_p_dropdown_3_Template","InputMultiTextComponent_input_4_Template","InputMultiTextComponent_Template_p_button_onClick_5_listener","FileBrowserResult","asyncScheduler","operate","createOperatorSubscriber","dueTime","scheduler","subscriber","activeTask","lastValue","lastTime","unsubscribe","emitWhenIdle","targetTime","now","schedule","undefined","add","complete","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChild","ContentChildren","NgModule","CommonModule","TranslationKeys","Header","Footer","DomHandler","ObjectUtils","RippleModule","SearchIcon","CheckIcon","_c0","_c1","Listbox_div_1_ng_container_2_Template","ɵɵelementContainer","Listbox_div_1_Template","ɵɵprojection","headerTemplate","Listbox_div_2_div_1_ng_container_5_CheckIcon_1_Template","Listbox_div_2_div_1_ng_container_5_span_2_1_ng_template_0_Template","Listbox_div_2_div_1_ng_container_5_span_2_1_Template","Listbox_div_2_div_1_ng_container_5_span_2_Template","checkIconTemplate","Listbox_div_2_div_1_ng_container_5_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","_c2","a0","_c3","a1","a2","Listbox_div_2_div_1_Template","_r21","ɵɵgetCurrentView","Listbox_div_2_div_1_Template_input_focus_2_listener","onHeaderCheckboxFocus","Listbox_div_2_div_1_Template_input_blur_2_listener","onHeaderCheckboxBlur","Listbox_div_2_div_1_Template_input_keydown_space_2_listener","ctx_r23","toggleAll","Listbox_div_2_div_1_Template_div_click_3_listener","ɵɵpureFunction1","disabled","toggleAllDisabled","allChecked","ɵɵpureFunction3","headerCheckboxFocus","Listbox_div_2_ng_container_2_ng_container_1_Template","_c4","Listbox_div_2_ng_container_2_Template","filterTemplate","filterOptions","Listbox_div_2_ng_template_3_div_0_SearchIcon_3_Template","Listbox_div_2_ng_template_3_div_0_span_4_1_ng_template_0_Template","Listbox_div_2_ng_template_3_div_0_span_4_1_Template","Listbox_div_2_ng_template_3_div_0_span_4_Template","ctx_r29","filterIconTemplate","Listbox_div_2_ng_template_3_div_0_Template","_r33","Listbox_div_2_ng_template_3_div_0_Template_input_input_1_listener","ctx_r32","onFilter","ctx_r26","filterValue","filterPlaceHolder","ariaFilterLabel","Listbox_div_2_ng_template_3_Template","Listbox_div_2_Template","ɵɵtemplateRefExtractor","ɵɵreference","checkbox","multiple","showToggleAll","Listbox_ng_container_5_ng_template_1_span_1_Template","optgroup_r35","ctx_r36","getOptionGroupLabel","Listbox_ng_container_5_ng_template_1_ng_container_2_Template","Listbox_ng_container_5_ng_template_1_ng_container_3_Template","_c5","Listbox_ng_container_5_ng_template_1_Template","ctx_r34","_r4","groupTemplate","getOptionGroupChildren","Listbox_ng_container_5_Template","optionsToRender","Listbox_ng_container_6_ng_container_1_Template","Listbox_ng_container_6_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_CheckIcon_1_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_span_2_1_ng_template_0_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_span_2_1_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_span_2_Template","ctx_r50","Listbox_ng_template_7_li_0_div_1_ng_container_2_Template","ctx_r48","_c6","Listbox_ng_template_7_li_0_div_1_Template","option_r43","ctx_r45","isOptionDisabled","isSelected","Listbox_ng_template_7_li_0_span_2_Template","ctx_r46","getOptionLabel","Listbox_ng_template_7_li_0_ng_container_3_Template","_c7","_c8","Listbox_ng_template_7_li_0_Template","_r56","Listbox_ng_template_7_li_0_Template_li_click_0_listener","ctx_r55","onOptionClick","Listbox_ng_template_7_li_0_Template_li_dblclick_0_listener","ctx_r57","onOptionDoubleClick","Listbox_ng_template_7_li_0_Template_li_touchend_0_listener","ctx_r58","onOptionTouchEnd","Listbox_ng_template_7_li_0_Template_li_keydown_0_listener","ctx_r59","onOptionKeyDown","i_r44","ctx_r42","ɵɵpureFunction2","itemTemplate","Listbox_ng_template_7_Template","optionsToDisplay_r41","Listbox_li_9_ng_container_1_Template","ctx_r60","emptyFilterMessageLabel","Listbox_li_9_ng_container_2_Template","Listbox_li_9_Template","emptyFilterTemplate","emptyTemplate","emptyFilter","Listbox_li_10_ng_container_1_Template","ctx_r63","emptyMessageLabel","Listbox_li_10_ng_container_2_Template","Listbox_li_10_Template","empty","Listbox_div_11_ng_container_2_Template","Listbox_div_11_Template","footerTemplate","_c9","_c10","_c11","LISTBOX_VALUE_ACCESSOR","_options","hasFilter","activateFilter","_filterValue","el","cd","filterService","config","_defineProperty","translationSubscription","translationObserver","markForCheck","filterBy","reset","resetFilter","ngAfterContentInit","templates","item","getType","option","optionLabel","resolveFieldData","optionGroup","optionGroupChildren","items","optionGroupLabel","getOptionValue","optionValue","optionDisabled","registerOnChange","fn","onModelChange","registerOnTouched","onModelTouched","setDisabledState","readonly","onOptionClickCheckbox","onOptionClickMultiple","onOptionClickSingle","onClick","optionTouched","onDblClick","selected","valueChanged","metaSelection","metaKeySelection","metaKey","ctrlKey","removeOption","equals","dataKey","selectedDisabledItemsLength","unselectedDisabledItemsLength","selectedEnabledItemsLength","visibleOptionsLength","opt","_filteredOptions","emptyMessage","getTranslation","EMPTY_MESSAGE","emptyFilterMessage","EMPTY_FILTER_MESSAGE","isEmpty","searchFields","split","filteredGroups","optgroup","filteredSubOptions","filterMatchMode","filterLocale","filters","filterViewChild","uncheckAll","checkAll","preventDefault","subOptions","currentTarget","which","nextItem","findNextItem","focus","prevItem","findPrevItem","nextElementSibling","hasClass","isHidden","previousElementSibling","ngOnDestroy","Listbox_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","FilterService","PrimeNGConfig","ɵɵdefineComponent","contentQueries","Listbox_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","headerFacet","first","footerFacet","Listbox_Query","ɵɵviewQuery","headerCheckboxViewChild","hostAttrs","style","styleClass","listStyle","listStyleClass","outputs","ngContentSelectors","Listbox_Template","ɵɵprojectionDef","ɵɵclassMap","dependencies","NgForOf","NgTemplateOutlet","NgStyle","Ripple","encapsulation","changeDetection","ngDevMode","ListboxModule_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","ExclamationTriangleIcon","InfoCircleIcon","TimesCircleIcon","UIMessage_CheckIcon_1_Template","UIMessage_InfoCircleIcon_2_Template","UIMessage_TimesCircleIcon_3_Template","UIMessage_ExclamationTriangleIcon_4_Template","UIMessage_div_5_span_1_Template","text","ɵɵsanitizeHtml","UIMessage_div_5_Template","escape","UIMessage_ng_template_6_span_0_Template","UIMessage_ng_template_6_Template","a3","a4","icon","severity","UIMessage_Factory","UIMessage_Template","ɵɵpureFunction5","MessageModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[31,32,33]}