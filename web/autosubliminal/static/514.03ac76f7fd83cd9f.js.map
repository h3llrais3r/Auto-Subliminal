{"version":3,"file":"514.03ac76f7fd83cd9f.js","mappings":"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","sources":["./src/app/core/services/api/log.service.ts","./src/app/modules/log/clear/log-clear.component.ts","./src/app/modules/log/log-routing.module.ts","./src/app/modules/log/log.module.ts","./src/app/modules/log/view/log-view.component.ts","./src/app/modules/log/view/log-view.component.html","./src/app/shared/models/loglevel.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/logs`;\r\n\r\n  getLogs(lognum?: number): Observable<string[]> {\r\n    const url = lognum ? `${this.URL}/${lognum}` : this.URL;\r\n    return this.httpClient.get<string[]>(url, this.options);\r\n  }\r\n\r\n  clearLogs(): Observable<boolean> {\r\n    return this.httpClient.delete<void>(this.URL, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getLogCount(): Observable<number> {\r\n    return this.httpClient.get<Count>(`${this.URL}/count`, this.options)\r\n      .pipe(map((count) => count.count));\r\n  }\r\n}\r\n\r\ntype Count = { count: number };\r\n","import { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-log-clear',\r\n  templateUrl: './log-clear.component.html',\r\n  styleUrls: ['./log-clear.component.scss']\r\n})\r\nexport class LogClearComponent implements OnInit {\r\n\r\n  private router = inject(Router);\r\n  private logService = inject(LogService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.logService.clearLogs().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => {\r\n        // Redirect to log view after the logs are cleared\r\n        if (result) {\r\n          this.router.navigateByUrl('/log/view');\r\n        }\r\n      },\r\n      error: () => this.messageService.showErrorMessage(`Unable to clear the logs!`)\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\nimport { LogViewComponent } from './view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'view',\r\n    component: LogViewComponent\r\n  },\r\n  {\r\n    path: 'clear',\r\n    component: LogClearComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'view'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LogRoutingModule } from './log-routing.module';\r\nimport { LogViewComponent } from './view/log-view.component';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogViewComponent,\r\n    LogClearComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    LogRoutingModule\r\n  ]\r\n})\r\nexport class LogModule { }\r\n","import { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { ScrollService } from '../../../core/services/scroll.service';\r\nimport { Loglevel } from '../../../shared/models/loglevel';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss']\r\n})\r\nexport class LogViewComponent implements OnInit {\r\n\r\n  logNums: number[];\r\n  selectedLogNum = 0;\r\n  loglevels: SelectItem[];\r\n  selectedLoglevel = '';\r\n  loading = false;\r\n  tailing = false;\r\n  tailingDisabled = false; // true for non current (lognum != 0) logfiles as tailing has no use in this case\r\n  tailButtonLabel = 'Start tailing';\r\n  tailButtonIcon = 'pi pi-play';\r\n\r\n  private readonly LOG_MESSAGE_REGEX = /^((?<date>\\d{4}-\\d{2}-\\d{2})\\s(?<time>\\d{2}:\\d{2}:\\d{2},\\d{3})\\s(?<loglevel>\\w+))/;\r\n\r\n  private logWebsocket$: WebSocketSubject<string>;\r\n  private logMessages: string[] = [];\r\n\r\n  private logService = inject(LogService);\r\n  private messageService = inject(MessageService);\r\n  private scrollService = inject(ScrollService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  get filteredLogMessages(): string[] {\r\n    return this.logMessages.filter((logMessage) => {\r\n      if (this.selectedLoglevel) {\r\n        const match = this.LOG_MESSAGE_REGEX.exec(logMessage);\r\n        return match && match.groups['loglevel'] === this.selectedLoglevel;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get logContent(): string {\r\n    return this.filteredLogMessages.join('\\n');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loglevels = this.getLogLevels();\r\n    this.logService.getLogCount().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (count) => this.logNums = Array.from(Array(count).keys()).map((i) => i + 1) // get array starting from 1\r\n    });\r\n    this.getLogs(0); // 0 = current logfile\r\n  }\r\n\r\n  getLogs(logNum: number): void {\r\n    this.loading = true;\r\n    this.selectedLogNum = logNum;\r\n    this.tailingDisabled = this.selectedLogNum !== 0; // tailing only allowed when on current logfile -> lognum = 0\r\n    this.logService.getLogs(logNum).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (logLines) => {\r\n        this.logMessages = logLines;\r\n        this.loading = false;\r\n        this.handleLogTailing();\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the logs!')\r\n    });\r\n  }\r\n\r\n  toggleTailing(): void {\r\n    this.tailing = !this.tailing;\r\n    if (this.tailing) {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Stop tailing';\r\n      this.tailButtonIcon = 'pi pi-pause';\r\n      // Scroll to right position when tailing is enabled\r\n      if (appSettings.logReversed) {\r\n        this.scrollService.triggerScrollUp();\r\n      } else {\r\n        this.scrollService.triggerScrollDown();\r\n      }\r\n    } else {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Start tailing';\r\n      this.tailButtonIcon = 'pi pi-play';\r\n    }\r\n    this.handleLogTailing();\r\n  }\r\n\r\n  private getLogLevels(): SelectItem[] {\r\n    const logLevels: SelectItem[] = [];\r\n    logLevels.push({ label: 'ALL', value: '' });\r\n    Object.entries(Loglevel).forEach((entry) => logLevels.push({ label: entry[0], value: entry[1] }));\r\n    return logLevels;\r\n  }\r\n\r\n  private createLogWebSocket(): WebSocketSubject<string> {\r\n    let protocol = 'ws:';\r\n    if (window.location.protocol === 'https:') {\r\n      protocol = 'wss:';\r\n    }\r\n    const url = `${protocol}//${window.location.host}${appSettings.webRoot}/websocket/log`;\r\n    const config: WebSocketSubjectConfig<string> = {\r\n      url,\r\n      deserializer: (e: MessageEvent) => e.data as string,\r\n      serializer: (value: string) => value\r\n    };\r\n    return webSocket(config);\r\n  }\r\n\r\n  private handleLogTailing(): void {\r\n    if (this.tailing && !this.tailingDisabled) {\r\n      // Subscribe on new logs once loaded (only for current logfile -> logNum = 0)\r\n      this.logWebsocket$ = this.createLogWebSocket(); // Need to create a new socket after unsubscribe\r\n      this.logWebsocket$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: (logMessage) => {\r\n          if (appSettings.logReversed) {\r\n            // Append to the top\r\n            this.logMessages.unshift(logMessage);\r\n            this.scrollService.triggerScrollUp();\r\n          } else {\r\n            // Append to the end\r\n            this.logMessages.push(logMessage);\r\n            this.scrollService.triggerScrollDown();\r\n          }\r\n        }\r\n      });\r\n      console.log('Log tailing enabled');\r\n    } else {\r\n      // Unsubscribe when not tailing\r\n      if (this.logWebsocket$) {\r\n        this.logWebsocket$.unsubscribe();\r\n      }\r\n      console.log('Log tailing disabled');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel>\r\n    <!-- Custom panel header -->\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"w-100\">\r\n        <div class=\"p-panel-title\">Logfile</div>\r\n        <div>\r\n          <span class=\"log-num\">\r\n            <span class=\"p-tag p-tag-rounded\" [ngClass]=\"{'p-tag-secondary': selectedLogNum !== 0}\" (click)=\"getLogs(0)\">current</span>\r\n            <span *ngFor=\"let logNum of logNums\" class=\"p-badge\" [ngClass]=\"{'p-badge-secondary': selectedLogNum !== logNum}\" (click)=\"getLogs(logNum)\">{{logNum}}</span>\r\n          </span>\r\n          <span class=\"log-tail\">\r\n            <p-button [label]=\"tailButtonLabel\" [icon]=\"tailButtonIcon\" styleClass=\"p-button-outlined\" [disabled]=\"tailingDisabled\" (onClick)=\"toggleTailing()\"></p-button>\r\n          </span>\r\n          <span class=\"log-level\">\r\n            <p-dropdown [options]=\"loglevels\" [(ngModel)]=\"selectedLoglevel\" styleClass=\"p-dropdown-ar\" scrollHeight=\"300px\"></p-dropdown>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Log content -->\r\n    <pre class=\"log-content\">{{logContent}}</pre>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Loading component -->\r\n<app-loading [visible]=\"loading\"></app-loading>\r\n\r\n<!-- Scroll component -->\r\n<app-scroll></app-scroll>\r\n","export enum Loglevel {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARNING = 'WARNING',\r\n  ERROR = 'ERROR',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n"],"names":["map","appSettings","ApiServiceTemplate","LogService","constructor","URL","webRoot","getLogs","lognum","url","httpClient","get","options","clearLogs","delete","pipe","getLogCount","count","t","factory","ɵfac","providedIn","DestroyRef","inject","takeUntilDestroyed","Router","MessageService","LogClearComponent","router","logService","messageService","destroyRef","ngOnInit","subscribe","next","result","navigateByUrl","error","showErrorMessage","selectors","decls","vars","template","LogClearComponent_Template","rf","ctx","styles","RouterModule","LogViewComponent","routes","path","redirectTo","pathMatch","component","LogRoutingModule","forChild","imports","i1","exports","SharedModule","LogModule","declarations","webSocket","ScrollService","Loglevel","i0","ɵɵelementStart","ɵɵlistener","LogViewComponent_ng_template_2_span_7_Template_span_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","logNum_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r1","selectedLogNum","ɵɵadvance","ɵɵtextInterpolate","LogViewComponent_ng_template_2_Template_span_click_5_listener","_r6","ctx_r5","ɵɵtemplate","LogViewComponent_ng_template_2_span_7_Template","LogViewComponent_ng_template_2_Template_p_button_onClick_9_listener","ctx_r7","toggleTailing","LogViewComponent_ng_template_2_Template_p_dropdown_ngModelChange_11_listener","$event","ctx_r8","selectedLoglevel","_c1","ctx_r0","logNums","tailButtonLabel","tailButtonIcon","tailingDisabled","loglevels","loading","tailing","LOG_MESSAGE_REGEX","logMessages","scrollService","filteredLogMessages","filter","logMessage","match","exec","groups","logContent","join","getLogLevels","Array","from","keys","i","logNum","logLines","handleLogTailing","logReversed","triggerScrollUp","triggerScrollDown","logLevels","push","label","value","Object","entries","forEach","entry","createLogWebSocket","protocol","window","location","host","config","deserializer","e","data","serializer","logWebsocket$","unshift","console","log","unsubscribe","consts","LogViewComponent_Template","LogViewComponent_ng_template_2_Template","ɵɵelement"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}