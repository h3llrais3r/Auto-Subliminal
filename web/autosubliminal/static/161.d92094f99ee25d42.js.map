{"version":3,"file":"161.d92094f99ee25d42.js","mappings":"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","sources":["./src/app/modules/library/library-routing.module.ts","./src/app/modules/library/library.module.ts","./src/app/modules/library/movie/detail/library-movie-detail.component.ts","./src/app/modules/library/movie/detail/library-movie-detail.component.html","./src/app/modules/library/movie/overview/library-movie-overview.component.ts","./src/app/modules/library/movie/overview/library-movie-overview.component.html","./src/app/modules/library/overview/library-overview.component.ts","./src/app/modules/library/overview/library-overview.component.html","./src/app/modules/library/scanning/library-scanning.component.ts","./src/app/modules/library/scanning/library-scanning.component.html","./src/app/modules/library/show/detail/library-show-detail.component.ts","./src/app/modules/library/show/detail/library-show-detail.component.html","./src/app/modules/library/show/overview/library-show-overview.component.ts","./src/app/modules/library/show/overview/library-show-overview.component.html","./src/app/modules/library/video/library-video-subtitles.component.ts","./src/app/modules/library/video/library-video-subtitles.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LibraryMovieDetailComponent } from './movie/detail/library-movie-detail.component';\r\nimport { LibraryMovieOverviewComponent } from './movie/overview/library-movie-overview.component';\r\nimport { LibraryOverviewComponent } from './overview/library-overview.component';\r\nimport { LibraryShowDetailComponent } from './show/detail/library-show-detail.component';\r\nimport { LibraryShowOverviewComponent } from './show/overview/library-show-overview.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'overview',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'overview',\r\n    component: LibraryOverviewComponent\r\n  },\r\n  {\r\n    path: 'show',\r\n    children: [\r\n      {\r\n        path: 'overview',\r\n        component: LibraryShowOverviewComponent\r\n      },\r\n      {\r\n        path: 'detail/:tvdbId',\r\n        component: LibraryShowDetailComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'movie',\r\n    children: [\r\n      {\r\n        path: 'overview',\r\n        component: LibraryMovieOverviewComponent\r\n      },\r\n      {\r\n        path: 'detail/:imdbId',\r\n        component: LibraryMovieDetailComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'overview'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LibraryRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LibraryRoutingModule } from './library-routing.module';\r\nimport { LibraryMovieDetailComponent } from './movie/detail/library-movie-detail.component';\r\nimport { LibraryMovieOverviewComponent } from './movie/overview/library-movie-overview.component';\r\nimport { LibraryOverviewComponent } from './overview/library-overview.component';\r\nimport { LibraryScanningComponent } from './scanning/library-scanning.component';\r\nimport { LibraryShowDetailComponent } from './show/detail/library-show-detail.component';\r\nimport { LibraryShowOverviewComponent } from './show/overview/library-show-overview.component';\r\nimport { LibraryVideoSubtitlesComponent } from './video/library-video-subtitles.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LibraryScanningComponent,\r\n    LibraryVideoSubtitlesComponent,\r\n    LibraryOverviewComponent,\r\n    LibraryShowOverviewComponent,\r\n    LibraryShowDetailComponent,\r\n    LibraryMovieOverviewComponent,\r\n    LibraryMovieDetailComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    LibraryRoutingModule\r\n  ]\r\n})\r\nexport class LibraryModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { appSettings } from '../../../../app-settings.service';\r\nimport { MovieService } from '../../../../core/services/api/movie.service';\r\nimport { SettingsService } from '../../../../core/services/api/settings.service';\r\nimport { ArtworkService } from '../../../../core/services/artwork.service';\r\nimport { MessageService } from '../../../../core/services/message.service';\r\nimport { FileType } from '../../../../shared/models/filetype';\r\nimport { Movie } from '../../../../shared/models/movie';\r\nimport { VideoSubtitles } from '../../../../shared/models/video';\r\nimport { getImdbUrl, getPlayVideoUrl, getPosterPlaceholderUrl } from '../../../../shared/utils/common-utils';\r\nimport { joinPaths } from '../../../../shared/utils/path-utils';\r\n\r\n@Component({\r\n  selector: 'app-library-movie-detail',\r\n  templateUrl: './library-movie-detail.component.html',\r\n  styleUrls: ['./library-movie-detail.component.scss']\r\n})\r\nexport class LibraryMovieDetailComponent implements OnInit {\r\n\r\n  readonly videoFileType = FileType.VIDEO;\r\n  readonly subtitleFileType = FileType.SUBTITLE;\r\n\r\n  movie: Movie;\r\n  loading = false;\r\n  refreshInProgress = false;\r\n  showMovieSettings = false;\r\n  showVideoSubtitles = false;\r\n  showSubtitleSync = false;\r\n  manualSubSyncEnabled = false;\r\n  libraryEditModeEnabled = false;\r\n  videoSubtitles: VideoSubtitles;\r\n  movieVideoFilePath: string;\r\n  movieSubtitleFilePath: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private domSanitizer: DomSanitizer,\r\n    private movieService: MovieService,\r\n    private artworkService: ArtworkService,\r\n    private settingsService: SettingsService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.manualSubSyncEnabled = appSettings.manualSubSync;\r\n    this.libraryEditModeEnabled = appSettings.libraryEditMode;\r\n    this.route.paramMap.subscribe({\r\n      next: (paramMap) => {\r\n        this.loading = true;\r\n        const imdbId = paramMap.get('imdbId');\r\n        this.getMovieDetails(imdbId);\r\n      }\r\n    });\r\n  }\r\n\r\n  getMoviePosterFullSizeUrl(): string {\r\n    return this.artworkService.getMoviePosterFullSizeUrl(this.movie.imdbId);\r\n  }\r\n\r\n  getMoviePosterThumbnailUrl(): string {\r\n    return this.artworkService.getMoviePosterThumbnailUrl(this.movie.imdbId);\r\n  }\r\n\r\n  getPosterPlaceholderUrl(): string {\r\n    return getPosterPlaceholderUrl();\r\n  }\r\n\r\n  getImdbUrl(): string {\r\n    return getImdbUrl(this.movie.imdbId);\r\n  }\r\n\r\n  getPlayVideoUrl(filePath: string, fileName: string): SafeResourceUrl {\r\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(getPlayVideoUrl(filePath, fileName));\r\n  }\r\n\r\n  openSettingsDialog(): void {\r\n    this.showMovieSettings = true;\r\n  }\r\n\r\n  refreshMovieDetails(): void {\r\n    this.refreshInProgress = true;\r\n    this.movieService.refreshMovieDetails(this.movie.imdbId).subscribe({\r\n      next: () => {\r\n        this.getMovieDetails(this.movie.imdbId);\r\n        this.refreshInProgress = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to refresh the movie details!')\r\n    });\r\n  }\r\n\r\n  openDeleteDialog(): void {\r\n    this.confirmationService.confirm({\r\n      message: `Are you sure that you want to delete <b>${this.movie.name}</b>?`,\r\n      accept: () => {\r\n        this.movieService.deleteMovie(this.movie.imdbId).subscribe({\r\n          next: () => {\r\n            this.router.navigateByUrl('/library/movie');\r\n          },\r\n          error: () => this.messageService.showErrorMessage(`Unable to delete the movie ${this.movie.name}!`)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleteSubtitleDialog(filePath: string, fileName: string): void {\r\n    this.confirmationService.confirm({\r\n      message: `Are you sure that you want to delete the subtitle<br><b>${fileName}</b>?`,\r\n      accept: () => {\r\n        this.movieService.deleteMovieSubtitle(this.movie.imdbId, joinPaths(filePath, fileName)).subscribe({\r\n          next: () => {\r\n            // Reload details\r\n            this.getMovieDetails(this.movie.imdbId);\r\n            this.messageService.showSuccessMessage(`Deleted ${fileName}.`);\r\n          },\r\n          error: () => this.messageService.showErrorMessage(`Unable to delete the subtitle ${fileName}!`)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  addMoviePathToVideoPaths(): void {\r\n    const videoPath = { videoPath: this.movie.path };\r\n    this.settingsService.updateGeneralSetting('videoPaths', videoPath).subscribe({\r\n      next: () => {\r\n        this.messageService.showSuccessMessage(`Path ${this.movie.path} added to the video paths.`);\r\n        this.getMovieDetails(this.movie.imdbId);\r\n      },\r\n      error: (error) => {\r\n        if (error.status && error.status === 409) {\r\n          this.messageService.showInfoMessage(`Path ${this.movie.path} already added to the video paths.`);\r\n        } else {\r\n          this.messageService.showErrorMessage(`Unable to add path ${this.movie.path} to the video paths!`);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openVideoSubtitlesDialog(fileLocation: string, fileName: string, languages: string[]): void {\r\n    this.videoSubtitles = new VideoSubtitles();\r\n    this.videoSubtitles.fileLocation = fileLocation;\r\n    this.videoSubtitles.fileName = fileName;\r\n    this.videoSubtitles.languages = languages;\r\n    this.showVideoSubtitles = true;\r\n  }\r\n\r\n  closeVideoSubtitlesDialog(): void {\r\n    this.showVideoSubtitles = false;\r\n    this.videoSubtitles = null;\r\n  }\r\n\r\n  openSubtitleSyncDialog(videoFilePath: string, subtitleFilepath: string): void {\r\n    this.movieVideoFilePath = videoFilePath;\r\n    this.movieSubtitleFilePath = subtitleFilepath;\r\n    this.showSubtitleSync = true;\r\n  }\r\n\r\n  saveHardcodedSubtitles(videoSubtitles: VideoSubtitles): void {\r\n    this.movieService.saveMovieHardcodedSubtitles(this.movie.imdbId, videoSubtitles).subscribe({\r\n      next: () => {\r\n        this.closeVideoSubtitlesDialog();\r\n        this.getMovieDetails(this.movie.imdbId);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to save the hardcoded subtitles!')\r\n    });\r\n  }\r\n\r\n  private getMovieDetails(imdbId: string): void {\r\n    this.movieService.getMovieDetails(imdbId).subscribe({\r\n      next: (movie) => {\r\n        this.movie = movie;\r\n        this.loading = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the movie details!')\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Movie details\">\r\n    <!-- Library scanning message -->\r\n    <app-library-scanning></app-library-scanning>\r\n    <!-- Details refreshing message -->\r\n    <app-message [visible]=\"refreshInProgress\">\r\n      <i class=\"fa fa-spinner fa-spin mr-2\" aria-hidden=\"true\"></i>\r\n      <span>Refreshing movie details...</span>\r\n    </app-message>\r\n    <!-- Details -->\r\n    <div class=\"library-details-container\" *ngIf=\"movie\">\r\n      <!-- Info -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-12 library-details-info-container\">\r\n          <div class=\"library-details-info-poster\">\r\n            <a [href]=\"getMoviePosterFullSizeUrl()\" target=\"_blank\">\r\n              <img class=\"library-details-info-poster-image\" [lazyLoad]=\"getMoviePosterThumbnailUrl()\" [defaultImage]=\"getPosterPlaceholderUrl()\" title=\"Click to view full size\">\r\n            </a>\r\n          </div>\r\n          <div class=\"library-details-info\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 library-details-info-title\">\r\n                <span>{{movie.name}}</span>\r\n                <span class=\"icon-group\">\r\n                  <a class=\"icon-link\" [href]=\"getImdbUrl()\" target=\"_blank\">\r\n                    <i class=\"fa fa-imdb\" aria-hidden=\"true\" title=\"Click to visit Imdb\"></i>\r\n                  </a>\r\n                  <a class=\"icon-link\" (click)=\"openSettingsDialog()\">\r\n                    <i class=\"fa fa-wrench\" aria-hidden=\"true\" title=\"Click to edit movie settings\"></i>\r\n                  </a>\r\n                  <a class=\"icon-link\" (click)=\"refreshMovieDetails()\">\r\n                    <i class=\"fa fa-repeat\" aria-hidden=\"true\" title=\"Click to refresh movie details\"></i>\r\n                  </a>\r\n                  <a class=\"icon-link\" (click)=\"openDeleteDialog()\">\r\n                    <i class=\"fa fa-trash\" aria-hidden=\"true\" title=\"Click to delete movie from the database\"></i>\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <hr>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-3\">\r\n              <div class=\"col-12\">{{movie.overview}}</div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-3\">Location:</div>\r\n              <div class=\"col-9 wrap-text\">\r\n                {{movie.path}}\r\n                <a *ngIf=\"!movie.pathInVideoPaths\" class=\"icon-link\" (click)=\"addMoviePathToVideoPaths()\">\r\n                  <i class=\"fa fa-plus\" aria-hidden=\"true\" title=\"Click to add the movie path to the video paths to scan\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-3\">Wanted languages:</div>\r\n              <div class=\"col-9\"><span *ngFor=\"let language of movie.settings.wantedLanguages\" class=\"p-tag language mr-2\">{{language}}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Files summary -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-12\">\r\n          <hr>\r\n          <div class=\"library-details-files-summary\">\r\n            <span class=\"summary-title\">Files</span>\r\n            <span class=\"summary-progress-bar ml-auto\">\r\n              <app-progress-bar [value]=\"movie.totalSubtitlesAvailable\" [total]=\"movie.totalSubtitlesWanted\"></app-progress-bar>\r\n            </span>\r\n          </div>\r\n          <hr>\r\n        </div>\r\n      </div>\r\n      <!-- Files -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-12 library-details-files\">\r\n          <p-table [value]=\"movie.files\" [autoLayout]=\"true\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"body\" let-file>\r\n              <tr>\r\n                <td class=\"wrap-text\">\r\n                  <span>{{file.fileName}}</span>\r\n                  <span class=\"icon-group\">\r\n                    <a *ngIf=\"file.isVideo\" class=\"icon-link\" [href]=\"getPlayVideoUrl(movie.path, file.fileName)\">\r\n                      <i class=\"fa fa-play-circle-o\" aria-hidden=\"true\" title=\"Click to play video\"></i>\r\n                    </a>\r\n                    <a *ngIf=\"libraryEditModeEnabled && file.isVideo\" class=\"icon-link\" (click)=\"openVideoSubtitlesDialog(movie.path, file.fileName, file.hardcodedLanguages)\">\r\n                      <i class=\"fa fa-wrench\" aria-hidden=\"true\" title=\"Click to save hardcoded subtitle languages\"></i>\r\n                    </a>\r\n                    <a *ngIf=\"manualSubSyncEnabled && file.isSubtitle\" class=\"icon-link\" (click)=\"openSubtitleSyncDialog(movie.getMovieFilePath(videoFileType), movie.getMovieFilePath(subtitleFileType, file.fileName))\">\r\n                      <i class=\"fa fa-refresh\" aria-hidden=\"true\" title=\"Click to synchronize subtitle\"></i>\r\n                    </a>\r\n                    <a *ngIf=\"libraryEditModeEnabled && file.isSubtitle\" class=\"icon-link\" (click)=\"openDeleteSubtitleDialog(file.filePath, file.fileName)\">\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\" title=\"Click to remove subtitle\"></i>\r\n                    </a>\r\n                  </span>\r\n                </td>\r\n                <td *ngIf=\"file.isVideo\" class=\"text-right\">\r\n                  <!-- language is an array in case of video type -->\r\n                  <span class=\"p-tag language ml-2\" *ngFor=\"let language of file.hardcodedLanguages\">{{language}}</span>\r\n                  <span class=\"p-tag language ml-2\" *ngFor=\"let language of file.embeddedLanguages\">{{language}}</span>\r\n                  <span class=\"p-tag language ml-2\" *ngIf=\"file.internalLanguagesAvailable\">internal</span>\r\n                  <span class=\"p-tag filetype ml-2\">{{file.type}}</span>\r\n                </td>\r\n                <td *ngIf=\"file.isSubtitle\" class=\"text-right\">\r\n                  <!-- language is a string in case of subtitle type -->\r\n                  <span class=\"p-tag language ml-2\" *ngIf=\"file.language\">{{file.language}}</span>\r\n                  <span class=\"p-tag filetype ml-2\">{{file.type}}</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Confirmation dialog -->\r\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n\r\n<!-- Movie settings dialog -->\r\n<app-movie-settings *ngIf=\"showMovieSettings\"\r\n                    [(visible)]=\"showMovieSettings\"\r\n                    [imdbId]=\"movie.imdbId\"\r\n                    [title]=\"movie.name\"\r\n                    [movieSettings]=\"movie.settings\">\r\n</app-movie-settings>\r\n\r\n<!-- Subtitle sync dialog -->\r\n<app-subtitle-sync *ngIf=\"showSubtitleSync\"\r\n                   [(visible)]=\"showSubtitleSync\"\r\n                   [videoPath]=\"movieVideoFilePath\"\r\n                   [subtitlePath]=\"movieSubtitleFilePath\">\r\n</app-subtitle-sync>\r\n\r\n<!-- Library video subtitles dialog -->\r\n<app-library-video-subtitles *ngIf=\"showVideoSubtitles\"\r\n                             [(visible)]=\"showVideoSubtitles\"\r\n                             [videoSubtitles]=\"videoSubtitles\"\r\n                             (save)=\"saveHardcodedSubtitles($event)\">\r\n</app-library-video-subtitles>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { SortEvent } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { appSettings } from '../../../../app-settings.service';\r\nimport { MovieService } from '../../../../core/services/api/movie.service';\r\nimport { ArtworkService } from '../../../../core/services/artwork.service';\r\nimport { MessageService } from '../../../../core/services/message.service';\r\nimport { SystemEventService } from '../../../../core/services/system-event.service';\r\nimport { Movie } from '../../../../shared/models/movie';\r\nimport { naturalSort } from '../../../../shared/utils/table-utils';\r\n\r\n@Component({\r\n  selector: 'app-library-movie-overview',\r\n  templateUrl: './library-movie-overview.component.html',\r\n  styleUrls: ['./library-movie-overview.component.scss']\r\n})\r\nexport class LibraryMovieOverviewComponent implements OnInit, OnDestroy {\r\n\r\n  loading = false;\r\n  movies: Movie[];\r\n  nrOfMovies = 0;\r\n  globalFilterFields = ['title', 'year', 'path', 'settings.wantedLanguages', 'totalSubtitlesAvailable'];\r\n  tableStateKey = 'autosubliminal-library-movie-overview-table';\r\n\r\n  private scanLibrarySubscription: Subscription;\r\n\r\n  constructor(\r\n    private systemEventService: SystemEventService,\r\n    private movieService: MovieService,\r\n    private artworkService: ArtworkService,\r\n    private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Load overview\r\n    this.loadOverview();\r\n    // Subscribe on scanLibrary finish events to reload the overview\r\n    this.scanLibrarySubscription = this.systemEventService.schedulerFinish.subscribe({\r\n      next: (scheduler) => {\r\n        if (scheduler.name === appSettings.scanLibrary) {\r\n          this.loadOverview();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.scanLibrarySubscription.unsubscribe();\r\n  }\r\n\r\n  private loadOverview(): void {\r\n    this.loading = true;\r\n    this.movieService.getMovies().subscribe({\r\n      next: (movies) => {\r\n        this.movies = movies;\r\n        this.nrOfMovies = this.movies.length;\r\n        this.loading = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the movies!')\r\n    });\r\n  }\r\n\r\n  sort(event: SortEvent): void {\r\n    naturalSort(event);\r\n  }\r\n\r\n  getMoviePosterThumbnailUrl(imdbId: string): string {\r\n    return this.artworkService.getMoviePosterThumbnailUrl(imdbId);\r\n  }\r\n\r\n  getPosterPlaceholderUrl(): string {\r\n    return 'assets/poster-placeholder.jpg';\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Movie library\">\r\n    <!-- Library scanning message -->\r\n    <app-library-scanning></app-library-scanning>\r\n    <!-- Overview -->\r\n    <div class=\"row\">\r\n      <div class=\"col-12 library-overview-container\">\r\n        <p-table #movieTable\r\n                 [value]=\"movies\"\r\n                 [stateKey]=\"tableStateKey\"\r\n                 [loading]=\"loading\"\r\n                 [autoLayout]=\"true\"\r\n                 [rowHover]=\"true\"\r\n                 [paginator]=\"true\"\r\n                 [rows]=\"10\"\r\n                 [rowsPerPageOptions]=\"[5,10,25,50,{showAll:'All'}]\"\r\n                 [showCurrentPageReport]=\"true\"\r\n                 [globalFilterFields]=\"globalFilterFields\"\r\n                 [customSort]=\"true\"\r\n                 (sortFunction)=\"sort($event)\"\r\n                 stateStorage=\"local\"\r\n                 currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\r\n                 styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped p-datatable-responsive-mode\">\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"caption\">\r\n              <span class=\"w-100\">\r\n                <p-button [label]=\"nrOfMovies + ' movies'\" styleClass=\"p-button-static p-button-outlined\"></p-button>\r\n              </span>\r\n              <span class=\"ml-auto\">\r\n                <app-table-filter [table]=\"movieTable\" [tableStateKey]=\"tableStateKey\" matchMode='contains'></app-table-filter>\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th pSortableColumn=\"title\"><span>Title<p-sortIcon field=\"title\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"year\"><span>Year<p-sortIcon field=\"year\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"path\"><span>Path<p-sortIcon field=\"path\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"settings.wantedLanguages\"><span>Wanted subtitles<p-sortIcon field=\"settings.wantedLanguages\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"totalSubtitlesAvailable\"><span>Subtitles<p-sortIcon field=\"totalSubtitlesAvailable\"></p-sortIcon></span></th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-movie>\r\n            <tr>\r\n              <td>\r\n                <span class=\"p-column-title\">Title</span>\r\n                <span class=\"p-column-data title-container\">\r\n                  <span class=\"title-container-wrapper\">\r\n                    <span class=\"title-poster-container\">\r\n                      <a [routerLink]=\"['/library/movie/detail',movie.imdbId]\" [title]=\"movie.title\">\r\n                        <img *ngIf=\"movie.poster\" class=\"title-poster-image\" [lazyLoad]=\"getMoviePosterThumbnailUrl(movie.imdbId)\" [defaultImage]=\"getPosterPlaceholderUrl()\">\r\n                      </a>\r\n                    </span>\r\n                    <span class=\"title-text\">\r\n                      <a [routerLink]=\"['/library/movie/detail',movie.imdbId]\">{{movie.title}}</a>\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Year</span>\r\n                <span class=\"p-column-data\">{{movie.year}}</span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Path</span>\r\n                <span class=\"p-column-data wrap-text\">{{movie.path}}</span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Wanted subtitles</span>\r\n                <span class=\"p-column-data\"><span *ngFor=\"let lang of movie.settings.wantedLanguages\" class=\"p-tag p-tag-small p-tag-secondary mr-2\">{{lang}}</span></span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Subtitles</span>\r\n                <span class=\"p-column-data\">\r\n                  <app-progress-bar class=\"w-100\" [value]=\"movie.totalSubtitlesAvailable\" [total]=\"movie.totalSubtitlesWanted\"></app-progress-bar>\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { forkJoin, Subscription } from 'rxjs';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { MovieService } from '../../../core/services/api/movie.service';\r\nimport { ShowService } from '../../../core/services/api/show.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { SystemEventService } from '../../../core/services/system-event.service';\r\nimport { MoviesOverview } from '../../../shared/models/movie';\r\nimport { ShowsOverview } from '../../../shared/models/show';\r\n\r\n@Component({\r\n  selector: 'app-library-overview',\r\n  templateUrl: './library-overview.component.html',\r\n  styleUrls: ['./library-overview.component.scss']\r\n})\r\nexport class LibraryOverviewComponent implements OnInit, OnDestroy {\r\n\r\n  loading = false;\r\n  showsOverview: ShowsOverview;\r\n  moviesOverview: MoviesOverview;\r\n\r\n  private scanLibrarySubscription: Subscription;\r\n\r\n  constructor(\r\n    private systemEventService: SystemEventService,\r\n    private showService: ShowService,\r\n    private movieService: MovieService,\r\n    private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Load overview\r\n    this.loadOverview();\r\n    // Subscribe on scanLibrary finish events to reload the overview\r\n    this.scanLibrarySubscription = this.systemEventService.schedulerFinish.subscribe({\r\n      next: (scheduler) => {\r\n        if (scheduler.name === appSettings.scanLibrary) {\r\n          this.loadOverview();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.scanLibrarySubscription.unsubscribe();\r\n  }\r\n\r\n  private loadOverview(): void {\r\n    this.loading = true;\r\n    // Load shows and movies overview\r\n    forkJoin([this.showService.getShowsOverview(), this.movieService.getMoviesOverview()]).subscribe({\r\n      next: ([showsOverview, moviesOverview]) => {\r\n        this.showsOverview = showsOverview;\r\n        this.moviesOverview = moviesOverview;\r\n        this.loading = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the library overview!')\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Library overview\">\r\n    <!-- Library scanning message -->\r\n    <app-library-scanning></app-library-scanning>\r\n    <!-- Overview -->\r\n    <div class=\"row\">\r\n      <!-- Shows overview -->\r\n      <div *ngIf=\"showsOverview\" class=\"col-12 col-sm-12 col-md-6 col-lg-6 mb-3 mb-sm-3 mb-md-0 mb-lg-0\">\r\n        <div class=\"overview-container\">\r\n          <div class=\"overview-data\">\r\n            <a [routerLink]=\"['/library/show/overview']\">\r\n              <img src=\"assets/shows.jpg\" class=\"overview-image\" title=\"Click to view shows\">\r\n            </a>\r\n          </div>\r\n          <div class=\"overview-data\">\r\n            <span>\r\n              <span>Total shows: {{showsOverview.totalShows}}</span>\r\n              <app-icon-dropdown iconClass=\"fa fa-exclamation-triangle text-danger\" *ngIf=\"showsOverview.failedShows.length > 0\">\r\n                <li><span class=\"icon-dropdown-title\">List of failed shows:</span></li>\r\n                <hr>\r\n                <li *ngFor=\"let failedShow of showsOverview.failedShows\"><span>{{failedShow}}</span></li>\r\n              </app-icon-dropdown>\r\n            </span>\r\n            <span>Total episodes: {{showsOverview.totalEpisodes}}</span>\r\n          </div>\r\n          <div class=\"overview-data\">\r\n            <span>Total subtitles available:</span>\r\n          </div>\r\n          <div class=\"overview-data\">\r\n            <app-progress-bar class=\"w-100\" [value]=\"showsOverview.totalSubtitlesAvailable\" [total]=\"showsOverview.totalSubtitlesWanted\"></app-progress-bar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Movies overview -->\r\n      <div *ngIf=\"moviesOverview\" class=\"col-12 col-sm-12 col-md-6 col-lg-6\">\r\n        <div class=\"overview-container\">\r\n          <div class=\"overview-data\">\r\n            <a [routerLink]=\"['/library/movie/overview']\">\r\n              <img src=\"assets/movies.jpg\" class=\"overview-image image-hover\" title=\"Click to view movies\">\r\n            </a>\r\n          </div>\r\n          <div class=\"overview-data\">\r\n            <span>\r\n              <span>Total movies: {{moviesOverview.totalMovies}}</span>\r\n              <app-icon-dropdown iconClass=\"fa fa-exclamation-triangle text-danger\" *ngIf=\"moviesOverview.failedMovies.length > 0\">\r\n                <li><span class=\"icon-dropdown-title\">List of failed movies:</span></li>\r\n                <hr>\r\n                <li *ngFor=\"let failedMovie of moviesOverview.failedMovies\"><span>{{failedMovie}}</span></li>\r\n              </app-icon-dropdown>\r\n            </span>\r\n          </div>\r\n          <div class=\"overview-data\">\r\n            <span>Total subtitles available:</span>\r\n          </div>\r\n          <div class=\"overview-data\">\r\n            <app-progress-bar class=\"w-100\" [value]=\"moviesOverview.totalSubtitlesAvailable\" [total]=\"moviesOverview.totalSubtitlesWanted\"></app-progress-bar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { SystemService } from '../../../core/services/api/system.service';\r\nimport { SystemEventService } from '../../../core/services/system-event.service';\r\n\r\n@Component({\r\n  selector: 'app-library-scanning',\r\n  templateUrl: './library-scanning.component.html',\r\n  styleUrls: ['./library-scanning.component.scss']\r\n})\r\nexport class LibraryScanningComponent implements OnInit {\r\n\r\n  scanningInProgress = false;\r\n\r\n  constructor(private systemService: SystemService, private systemEventService: SystemEventService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Check if library scanner is running\r\n    this.systemService.getScheduler(appSettings.scanLibrary).subscribe({\r\n      next: (scheduler) => {\r\n        this.scanningInProgress = scheduler.running;\r\n      }\r\n    });\r\n    // Subscribe on scheduler finish events to check if library scanner is started\r\n    this.systemEventService.schedulerStart.subscribe({\r\n      next: (scheduler) => {\r\n        this.scanningInProgress = scheduler.name === appSettings.scanLibrary ? true : this.scanningInProgress;\r\n      }\r\n    });\r\n    // Subscribe on scheduler finish events to check if library scanner is finished\r\n    this.systemEventService.schedulerFinish.subscribe({\r\n      next: (scheduler) => {\r\n        this.scanningInProgress = scheduler.name === appSettings.scanLibrary ? false : this.scanningInProgress;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Library scanning message -->\r\n<app-message [visible]=\"scanningInProgress\">\r\n  <i class=\"fa fa-spinner fa-spin mr-2\" aria-hidden=\"true\"></i>\r\n  <span>Scanning library...</span>\r\n</app-message>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { appSettings } from '../../../../app-settings.service';\r\nimport { SettingsService } from '../../../../core/services/api/settings.service';\r\nimport { ShowService } from '../../../../core/services/api/show.service';\r\nimport { ArtworkService } from '../../../../core/services/artwork.service';\r\nimport { MessageService } from '../../../../core/services/message.service';\r\nimport { FileType } from '../../../../shared/models/filetype';\r\nimport { Show, ShowEpisodeFile } from '../../../../shared/models/show';\r\nimport { VideoSubtitles } from '../../../../shared/models/video';\r\nimport { getPlayVideoUrl, getPosterPlaceholderUrl, getTvdbUrl } from '../../../../shared/utils/common-utils';\r\nimport { joinPaths } from '../../../../shared/utils/path-utils';\r\n\r\n@Component({\r\n  selector: 'app-library-show-detail',\r\n  templateUrl: './library-show-detail.component.html',\r\n  styleUrls: ['./library-show-detail.component.scss']\r\n})\r\nexport class LibraryShowDetailComponent implements OnInit {\r\n\r\n  readonly videoFileType = FileType.VIDEO;\r\n  readonly subtitleFileType = FileType.SUBTITLE;\r\n\r\n  show: Show;\r\n  loading = false;\r\n  refreshInProgress = false;\r\n  showShowSettings = false;\r\n  showVideoSubtitles = false;\r\n  showSubtitleSync = false;\r\n  manualSubSyncEnabled = false;\r\n  libraryEditModeEnabled = false;\r\n  videoSubtitles: VideoSubtitles;\r\n  episodeVideoFilePath: string;\r\n  episodeSubtitleFilePath: string;\r\n  episodeTvdbId: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private domSanitizer: DomSanitizer,\r\n    private showService: ShowService,\r\n    private artworkService: ArtworkService,\r\n    private settingsService: SettingsService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.manualSubSyncEnabled = appSettings.manualSubSync;\r\n    this.libraryEditModeEnabled = appSettings.libraryEditMode;\r\n    this.route.paramMap.subscribe({\r\n      next: (paramMap) => {\r\n        this.loading = true;\r\n        const tvdbId = Number(paramMap.get('tvdbId'));\r\n        this.getShowDetails(tvdbId);\r\n      }\r\n    });\r\n  }\r\n\r\n  getShowPosterFullSizeUrl(): string {\r\n    return this.artworkService.getShowPosterFullSizeUrl(this.show.tvdbId);\r\n  }\r\n\r\n  getShowPosterThumbnailUrl(): string {\r\n    return this.artworkService.getShowPosterThumbnailUrl(this.show.tvdbId);\r\n  }\r\n\r\n  getPosterPlaceholderUrl(): string {\r\n    return getPosterPlaceholderUrl();\r\n  }\r\n\r\n  getTvdbUrl(): string {\r\n    return getTvdbUrl(this.show.tvdbId);\r\n  }\r\n\r\n  getPlayVideoUrl(filePath: string, fileName: string): SafeResourceUrl {\r\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(getPlayVideoUrl(filePath, fileName));\r\n  }\r\n\r\n  openSettingsDialog(): void {\r\n    this.showShowSettings = true;\r\n  }\r\n\r\n  refreshShowDetails(): void {\r\n    this.refreshInProgress = true;\r\n    this.showService.refreshShowDetails(this.show.tvdbId).subscribe({\r\n      next: () => {\r\n        this.getShowDetails(this.show.tvdbId);\r\n        this.refreshInProgress = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to refresh the show details!')\r\n    });\r\n  }\r\n\r\n  openDeleteDialog(): void {\r\n    this.confirmationService.confirm({\r\n      message: `Are you sure that you want to delete <b>${this.show.name}</b>?`,\r\n      accept: () => {\r\n        this.showService.deleteShow(this.show.tvdbId).subscribe({\r\n          next: () => this.router.navigateByUrl('/library/show'),\r\n          error: () => this.messageService.showErrorMessage(`Unable to delete the show ${this.show.name}!`)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleteSubtitleDialog(episodeTvdbId: number, filePath: string, fileName: string): void {\r\n    this.confirmationService.confirm({\r\n      message: `Are you sure that you want to delete the subtitle<br><b>${fileName}</b>?`,\r\n      accept: () => {\r\n        this.showService.deleteShowEpisodeSubtitle(this.show.tvdbId, episodeTvdbId, joinPaths(filePath, fileName)).subscribe({\r\n          next: () => {\r\n            // Reload details\r\n            this.getShowDetails(this.show.tvdbId);\r\n            this.messageService.showSuccessMessage(`Deleted ${fileName}.`);\r\n          },\r\n          error: () => this.messageService.showErrorMessage(`Unable to delete the subtitle ${fileName}!`)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  addShowPathToVideoPaths(): void {\r\n    const videoPath = { videoPath: this.show.path };\r\n    this.settingsService.updateGeneralSetting('videoPaths', videoPath).subscribe({\r\n      next: () => {\r\n        this.messageService.showSuccessMessage(`Path ${this.show.path} added to the video paths.`);\r\n        this.getShowDetails(this.show.tvdbId);\r\n      },\r\n      error: (error) => {\r\n        if (error.status && error.status === 409) {\r\n          this.messageService.showWarningMessage(`Path ${this.show.path} already added to the video paths.`);\r\n        } else {\r\n          this.messageService.showErrorMessage(`Unable to add path ${this.show.path} to the video paths!`);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openVideoSubtitlesDialog(episodeTvdbId: number, fileLocation: string, fileName: string, languages: string[]): void {\r\n    this.episodeTvdbId = episodeTvdbId; // keep track for which episode the video subtitles are edited\r\n    this.videoSubtitles = new VideoSubtitles();\r\n    this.videoSubtitles.fileLocation = fileLocation;\r\n    this.videoSubtitles.fileName = fileName;\r\n    this.videoSubtitles.languages = languages;\r\n    this.showVideoSubtitles = true;\r\n  }\r\n\r\n  closeVideoSubtitlesDialog(): void {\r\n    this.showVideoSubtitles = false;\r\n    this.videoSubtitles = null;\r\n    this.episodeTvdbId = null;\r\n  }\r\n\r\n  openSubtitleSyncDialog(videoFilePath: string, subtitleFilePath: string): void {\r\n    this.episodeVideoFilePath = videoFilePath;\r\n    this.episodeSubtitleFilePath = subtitleFilePath;\r\n    this.showSubtitleSync = true;\r\n  }\r\n\r\n  saveHardcodedSubtitles(videoSubtitles: VideoSubtitles): void {\r\n    this.showService.saveShowEpisodeHardcodedSubtitles(this.show.tvdbId, this.episodeTvdbId, videoSubtitles).subscribe({\r\n      next: () => {\r\n        this.closeVideoSubtitlesDialog();\r\n        this.getShowDetails(this.show.tvdbId);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to save the harcoded subtitles!')\r\n    });\r\n  }\r\n\r\n  getNrOfSubtitles(files: ShowEpisodeFile[], language: string): string {\r\n    let subtitleCount = 0;\r\n    files.forEach((file) => {\r\n      if (file.type === FileType.SUBTITLE && file.language && file.language === language) {\r\n        // A subtitle file can have only 1 language\r\n        subtitleCount++;\r\n      } else if (file.type === FileType.VIDEO) {\r\n        // A video file can have multiple hardcoded languages\r\n        if (file.hardcodedLanguages) {\r\n          file.hardcodedLanguages.forEach((harcodedLanguage) => {\r\n            if (harcodedLanguage === language) {\r\n              subtitleCount++;\r\n            }\r\n          });\r\n        }\r\n        // A video file can have multiple embedded languages\r\n        if (file.embeddedLanguages) {\r\n          file.embeddedLanguages.forEach((embeddedLanguage) => {\r\n            if (embeddedLanguage === language) {\r\n              subtitleCount++;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return subtitleCount.toString(); // must be string to be used as badge\r\n  }\r\n\r\n  getNrOfVideos(files: ShowEpisodeFile[]): string {\r\n    let videoCount = 0;\r\n    files.forEach((file) => {\r\n      if (file.type === FileType.VIDEO) {\r\n        videoCount++;\r\n      }\r\n    });\r\n    return videoCount.toString(); // must be string to be used as badge\r\n  }\r\n\r\n  private getShowDetails(tvdbId: number): void {\r\n    this.showService.getShowDetails(tvdbId).subscribe({\r\n      next: (show) => {\r\n        this.show = show;\r\n        this.loading = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the show details!')\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Show details\">\r\n    <!-- Library scanning message -->\r\n    <app-library-scanning></app-library-scanning>\r\n    <!-- Details refreshing message -->\r\n    <app-message [visible]=\"refreshInProgress\">\r\n      <i class=\"fa fa-spinner fa-spin mr-2\" aria-hidden=\"true\"></i>\r\n      <span>Refreshing show details...</span>\r\n    </app-message>\r\n    <!-- Details -->\r\n    <div class=\"library-details-container\" *ngIf=\"show\">\r\n      <!-- Info -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-12 library-details-info-container\">\r\n          <div class=\"library-details-info-poster\">\r\n            <a [href]=\"getShowPosterFullSizeUrl()\" target=\"_blank\">\r\n              <img class=\"library-details-info-poster-image\" [lazyLoad]=\"getShowPosterThumbnailUrl()\" [defaultImage]=\"getPosterPlaceholderUrl()\" title=\"Click to view full size\">\r\n            </a>\r\n          </div>\r\n          <div class=\"library-details-info\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 library-details-info-title\">\r\n                <span>{{show.name}}</span>\r\n                <span class=\"icon-group\">\r\n                  <a class=\"icon-link\" [href]=\"getTvdbUrl()\" target=\"_blank\">\r\n                    <i class=\"fa fa-television\" aria-hidden=\"true\" title=\"Click to visit Tvdb\"></i>\r\n                  </a>\r\n                  <a class=\"icon-link\" (click)=\"openSettingsDialog()\">\r\n                    <i class=\"fa fa-wrench\" aria-hidden=\"true\" title=\"Click to edit show settings\"></i>\r\n                  </a>\r\n                  <a class=\"icon-link\" (click)=\"refreshShowDetails()\">\r\n                    <i class=\"fa fa-repeat\" aria-hidden=\"true\" title=\"Click to refresh show details\"></i>\r\n                  </a>\r\n                  <a class=\"icon-link\" (click)=\"openDeleteDialog()\">\r\n                    <i class=\"fa fa-trash\" aria-hidden=\"true\" title=\"Click to delete show from the database\"></i>\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <hr>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-3\">\r\n              <div class=\"col-12\">{{show.overview}}</div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-3\">Location:</div>\r\n              <div class=\"col-9 wrap-text\">\r\n                {{show.path}}\r\n                <a *ngIf=\"!show.pathInVideoPaths\" class=\"icon-link\" (click)=\"addShowPathToVideoPaths()\">\r\n                  <i class=\"fa fa-plus\" aria-hidden=\"true\" title=\"Click to add the show path to the video paths to scan\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-3\">Wanted languages:</div>\r\n              <div class=\"col-9\"><span *ngFor=\"let language of show.settings.wantedLanguages\" class=\"p-tag language mr-2\">{{language}}</span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Files summary -->\r\n      <div class=\"row mb-3\">\r\n        <div class=\"col-12\">\r\n          <hr>\r\n          <div class=\"library-details-files-summary\">\r\n            <span class=\"summary-title\">Files</span>\r\n            <span class=\"summary-progress-bar ml-auto\">\r\n              <app-progress-bar [value]=\"show.totalSubtitlesAvailable\" [total]=\"show.totalSubtitlesWanted\"></app-progress-bar>\r\n            </span>\r\n          </div>\r\n          <hr>\r\n        </div>\r\n      </div>\r\n      <!-- Files -->\r\n      <div *ngFor=\"let season of show.seasons\" class=\"row mb-3\">\r\n        <div class=\"col-12 library-details-files\">\r\n          <p-table [value]=\"season.files\" [autoLayout]=\"true\" styleClass=\"p-datatable-sm\">\r\n            <ng-template pTemplate=\"caption\">\r\n              <div class=\"table-caption\">\r\n                <div class=\"table-caption-title\">\r\n                  <span>{{season.seasonName}}</span>\r\n                  <app-icon-dropdown>\r\n                    <li>{{season.seasonPath}}</li>\r\n                  </app-icon-dropdown>\r\n                </div>\r\n                <div class=\"ml-auto\">\r\n                  <p-button *ngFor=\"let language of show.settings.wantedLanguages\" [label]=\"language\" [badge]=\"getNrOfSubtitles(season.files, language)\" styleClass=\"p-button-static p-button-outlined p-button-sm ml-2\"></p-button>\r\n                  <p-button label=\"video\" [badge]=\"getNrOfVideos(season.files)\" styleClass=\"p-button-static p-button-outlined p-button-sm ml-2\"></p-button>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-file>\r\n              <tr>\r\n                <td class=\"wrap-text\">\r\n                  <span>{{file.fileName}}</span>\r\n                  <span class=\"icon-group\">\r\n                    <a *ngIf=\"file.isVideo\" class=\"icon-link\" [href]=\"getPlayVideoUrl(season.seasonPath, file.fileName)\">\r\n                      <i class=\"fa fa-play-circle-o\" aria-hidden=\"true\" title=\"Click to play video\"></i>\r\n                    </a>\r\n                    <a *ngIf=\"libraryEditModeEnabled && file.isVideo\" class=\"icon-link\" (click)=\"openVideoSubtitlesDialog(file.tvdbId, season.seasonPath, file.fileName, file.hardcodedLanguages)\">\r\n                      <i class=\"fa fa-wrench\" aria-hidden=\"true\" title=\"Click to save hardcoded subtitle languages\"></i>\r\n                    </a>\r\n                    <a *ngIf=\"libraryEditModeEnabled && manualSubSyncEnabled && file.isSubtitle\" class=\"icon-link\" (click)=\"openSubtitleSyncDialog(show.getShowEpisodeFilePath(file.tvdbId, videoFileType), show.getShowEpisodeFilePath(file.tvdbId, subtitleFileType, file.fileName))\">\r\n                      <i class=\"fa fa-refresh\" aria-hidden=\"true\" title=\"Click to synchronize subtitle\"></i>\r\n                    </a>\r\n                    <a *ngIf=\"libraryEditModeEnabled && file.isSubtitle\" class=\"icon-link\" (click)=\"openDeleteSubtitleDialog(file.tvdbId, file.filePath, file.fileName)\">\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\" title=\"Click to remove subtitle\"></i>\r\n                    </a>\r\n                  </span>\r\n                </td>\r\n                <td *ngIf=\"file.isVideo\" class=\"text-right\">\r\n                  <!-- language is an array in case of video type -->\r\n                  <span class=\"p-tag language ml-2\" *ngFor=\"let language of file.hardcodedLanguages\">{{language}}</span>\r\n                  <span class=\"p-tag language ml-2\" *ngFor=\"let language of file.embeddedLanguages\">{{language}}</span>\r\n                  <span class=\"p-tag language ml-2\" *ngIf=\"file.internalLanguagesAvailable\">internal</span>\r\n                  <span class=\"p-tag filetype ml-2\">{{file.type}}</span>\r\n                </td>\r\n                <td *ngIf=\"file.isSubtitle\" class=\"text-right\">\r\n                  <!-- language is a string in case of subtitle type -->\r\n                  <span class=\"p-tag language ml-2\" *ngIf=\"file.language\">{{file.language}}</span>\r\n                  <span class=\"p-tag filetype ml-2\">{{file.type}}</span>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Confirmation dialog -->\r\n<p-confirmDialog header=\"Confirmation\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n\r\n<!-- Show settings dialog -->\r\n<app-show-settings *ngIf=\"showShowSettings\"\r\n                   [(visible)]=\"showShowSettings\"\r\n                   [tvdbId]=\"show.tvdbId\"\r\n                   [title]=\"show.name\"\r\n                   [showSettings]=\"show.settings\">\r\n</app-show-settings>\r\n\r\n<!-- Subtitle sync dialog -->\r\n<app-subtitle-sync *ngIf=\"showSubtitleSync\"\r\n                   [(visible)]=\"showSubtitleSync\"\r\n                   [videoPath]=\"episodeVideoFilePath\"\r\n                   [subtitlePath]=\"episodeSubtitleFilePath\">\r\n</app-subtitle-sync>\r\n\r\n<!-- Library video subtitles dialog -->\r\n<app-library-video-subtitles *ngIf=\"showVideoSubtitles\"\r\n                             [(visible)]=\"showVideoSubtitles\"\r\n                             [videoSubtitles]=\"videoSubtitles\"\r\n                             (save)=\"saveHardcodedSubtitles($event)\">\r\n</app-library-video-subtitles>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { SortEvent } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { appSettings } from '../../../../app-settings.service';\r\nimport { ShowService } from '../../../../core/services/api/show.service';\r\nimport { ArtworkService } from '../../../../core/services/artwork.service';\r\nimport { MessageService } from '../../../../core/services/message.service';\r\nimport { SystemEventService } from '../../../../core/services/system-event.service';\r\nimport { Show } from '../../../../shared/models/show';\r\nimport { getBannerPlaceholderUrl } from '../../../../shared/utils/common-utils';\r\nimport { naturalSort } from '../../../../shared/utils/table-utils';\r\n\r\n@Component({\r\n  selector: 'app-library-show-overview',\r\n  templateUrl: './library-show-overview.component.html',\r\n  styleUrls: ['./library-show-overview.component.scss']\r\n})\r\nexport class LibraryShowOverviewComponent implements OnInit, OnDestroy {\r\n\r\n  shows: Show[];\r\n  nrOfShows = 0;\r\n  globalFilterFields = ['title', 'year', 'path', 'settings.wantedLanguages', 'totalSubtitlesAvailable'];\r\n  tableStateKey = 'autosubliminal-library-show-overview-table';\r\n  loading = false;\r\n\r\n  private scanLibrarySubscription: Subscription;\r\n\r\n  constructor(\r\n    private systemEventService: SystemEventService,\r\n    private showService: ShowService,\r\n    private artworkService: ArtworkService,\r\n    private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Load overview\r\n    this.loadOverview();\r\n    // Subscribe on scanLibrary finish events to reload the overview\r\n    this.scanLibrarySubscription = this.systemEventService.schedulerFinish.subscribe({\r\n      next: (scheduler) => {\r\n        if (scheduler.name === appSettings.scanLibrary) {\r\n          this.loadOverview();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.scanLibrarySubscription.unsubscribe();\r\n  }\r\n\r\n  private loadOverview(): void {\r\n    this.loading = true;\r\n    this.showService.getShows().subscribe({\r\n      next: (shows) => {\r\n        this.shows = shows;\r\n        this.nrOfShows = this.shows.length;\r\n        this.loading = false;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the shows!')\r\n    });\r\n  }\r\n\r\n  sort(event: SortEvent): void {\r\n    naturalSort(event);\r\n  }\r\n\r\n  getShowBannerThumbnailUrl(tvdbId: number): string {\r\n    return this.artworkService.getShowBannerThumbnailUrl(tvdbId);\r\n  }\r\n\r\n  getBannerPlaceholderUrl(): string {\r\n    return getBannerPlaceholderUrl();\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Show library\">\r\n    <!-- Library scanning message -->\r\n    <app-library-scanning></app-library-scanning>\r\n    <!-- Overview -->\r\n    <div class=\"row\">\r\n      <div class=\"col-12 library-overview-container\">\r\n        <p-table #showTable\r\n                 [value]=\"shows\"\r\n                 [stateKey]=\"tableStateKey\"\r\n                 [loading]=\"loading\"\r\n                 [autoLayout]=\"true\"\r\n                 [rowHover]=\"true\"\r\n                 [paginator]=\"true\"\r\n                 [rows]=\"10\"\r\n                 [rowsPerPageOptions]=\"[5,10,25,50,{showAll:'All'}]\"\r\n                 [showCurrentPageReport]=\"true\"\r\n                 [globalFilterFields]=\"globalFilterFields\"\r\n                 [customSort]=\"true\"\r\n                 (sortFunction)=\"sort($event)\"\r\n                 stateStorage=\"local\"\r\n                 currentPageReportTemplate=\"{first} to {last} of {totalRecords}\"\r\n                 styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped p-datatable-responsive-mode\">\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"caption\">\r\n              <span class=\"w-100\">\r\n                <p-button [label]=\"nrOfShows + ' shows'\" styleClass=\"p-button-static p-button-outlined\"></p-button>\r\n              </span>\r\n              <span class=\"ml-auto\">\r\n                <app-table-filter [table]=\"showTable\" [tableStateKey]=\"tableStateKey\" matchMode='contains'></app-table-filter>\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th pSortableColumn=\"title\"><span>Title<p-sortIcon field=\"title\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"year\"><span>Year<p-sortIcon field=\"year\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"path\"><span>Path<p-sortIcon field=\"path\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"settings.wantedLanguages\"><span>Wanted subtitles<p-sortIcon field=\"settings.wantedLanguages\"></p-sortIcon></span></th>\r\n              <th pSortableColumn=\"totalSubtitlesAvailable\"><span>Subtitles<p-sortIcon field=\"totalSubtitlesAvailable\"></p-sortIcon></span></th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-show>\r\n            <tr>\r\n              <td>\r\n                <span class=\"p-column-title\">Title</span>\r\n                <span class=\"p-column-data title-banner-container\">\r\n                  <span class=\"title-banner\">\r\n                    <a [routerLink]=\"['/library/show/detail',show.tvdbId]\" [title]=\"show.title\">\r\n                      <img *ngIf=\"show.banner\" class=\"title-banner-image\" [lazyLoad]=\"getShowBannerThumbnailUrl(show.tvdbId)\" [defaultImage]=\"getBannerPlaceholderUrl()\">\r\n                    </a>\r\n                  </span>\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Year</span>\r\n                <span class=\"p-column-data\">{{show.year}}</span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Path</span>\r\n                <span class=\"p-column-data wrap-text\">{{show.path}}</span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Wanted subtitles</span>\r\n                <span class=\"p-column-data\"><span *ngFor=\"let lang of show.settings.wantedLanguages\" class=\"p-tag p-tag-small p-tag-secondary mr-2\">{{lang}}</span></span>\r\n              </td>\r\n              <td>\r\n                <span class=\"p-column-title\">Subtitles</span>\r\n                <span class=\"p-column-data\">\r\n                  <app-progress-bar class=\"w-100\" [value]=\"show.totalSubtitlesAvailable\" [total]=\"show.totalSubtitlesWanted\"></app-progress-bar>\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { FormUtils } from '../../../shared/components/forms/form-utils';\r\nimport { VideoSubtitles } from '../../../shared/models/video';\r\n\r\n@Component({\r\n  selector: 'app-library-video-subtitles',\r\n  templateUrl: './library-video-subtitles.component.html',\r\n  styleUrls: ['./library-video-subtitles.component.scss']\r\n})\r\nexport class LibraryVideoSubtitlesComponent implements OnInit {\r\n\r\n  @Input()\r\n  visible = false;\r\n\r\n  @Output()\r\n  visibleChange = new EventEmitter<boolean>(); // Setup 2-way binding [(visible)]=\"...\"\r\n\r\n  @Input()\r\n  videoSubtitles: VideoSubtitles;\r\n\r\n  @Output()\r\n  save = new EventEmitter<VideoSubtitles>(); // allows custom onSave functionality (save)=\"...\" when component is created\r\n\r\n  videoSubtitlesForm: UntypedFormGroup;\r\n  languages: SelectItem[];\r\n\r\n  constructor(private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.languages = FormUtils.languageSelectItems();\r\n    this.buildForm();\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.videoSubtitlesForm = this.fb.group({\r\n      fileLocation: [this.videoSubtitles.fileLocation, []],\r\n      fileName: [this.videoSubtitles.fileName, []],\r\n      languages: [this.videoSubtitles.languages || [], []]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  close(): void {\r\n    this.visibleChange.emit(false);\r\n  }\r\n\r\n  saveVideoSubtitles(): void {\r\n    const videoSubtitles = new VideoSubtitles();\r\n    videoSubtitles.fileLocation = FormUtils.getFormControlValue<string>(this.videoSubtitlesForm, 'fileLocation');\r\n    videoSubtitles.fileName = FormUtils.getFormControlValue<string>(this.videoSubtitlesForm, 'fileName');\r\n    videoSubtitles.languages = FormUtils.getFormControlValue<string[]>(this.videoSubtitlesForm, 'languages');\r\n    this.save.emit(videoSubtitles); // ouput the videoSubtitles object on save\r\n  }\r\n}\r\n","<!-- Library video subtitles dialog -->\r\n<p-dialog [(visible)]=\"visible\"\r\n          [modal]=\"true\"\r\n          [closable]=\"false\"\r\n          [resizable]=\"false\"\r\n          header=\"Hardcoded/embedded video subtitles\"\r\n          styleClass=\"p-dialog-video-subtitles\">\r\n  <form *ngIf=\"videoSubtitlesForm\" [formGroup]=\"videoSubtitlesForm\" class=\"form\">\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">Select the embedded hardcoded subtitle languages for video file:</div>\r\n      <div class=\"col-12 file\">{{videoSubtitles.fileName}}</div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <app-input-multi-select [options]=\"languages\" formControlName=\"languages\" placeholder=\"Select languages\"></app-input-multi-select>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-times\" label=\"Cancel\" styleClass=\"p-button p-button-secondary\" (click)=\"close()\"></p-button>\r\n    <p-button icon=\"pi pi-check\" label=\"Save\" styleClass=\"p-button mr-0\" (click)=\"saveVideoSubtitles()\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n"],"names":["RouterModule","LibraryMovieDetailComponent","LibraryMovieOverviewComponent","LibraryOverviewComponent","LibraryShowDetailComponent","LibraryShowOverviewComponent","routes","path","redirectTo","pathMatch","component","children","LibraryRoutingModule","forChild","imports","exports","SharedModule","LibraryScanningComponent","LibraryVideoSubtitlesComponent","LibraryModule","declarations","appSettings","FileType","VideoSubtitles","getImdbUrl","getPlayVideoUrl","getPosterPlaceholderUrl","joinPaths","i0","ctx_r21","constructor","route","router","domSanitizer","movieService","artworkService","settingsService","messageService","confirmationService","VIDEO","SUBTITLE","ngOnInit","manualSubSyncEnabled","manualSubSync","libraryEditModeEnabled","libraryEditMode","paramMap","subscribe","next","loading","imdbId","get","getMovieDetails","getMoviePosterFullSizeUrl","movie","getMoviePosterThumbnailUrl","filePath","fileName","bypassSecurityTrustResourceUrl","openSettingsDialog","showMovieSettings","refreshMovieDetails","refreshInProgress","error","showErrorMessage","openDeleteDialog","confirm","message","name","accept","deleteMovie","navigateByUrl","openDeleteSubtitleDialog","deleteMovieSubtitle","showSuccessMessage","addMoviePathToVideoPaths","videoPath","updateGeneralSetting","status","showInfoMessage","openVideoSubtitlesDialog","fileLocation","languages","videoSubtitles","showVideoSubtitles","closeVideoSubtitlesDialog","openSubtitleSyncDialog","videoFilePath","subtitleFilepath","movieVideoFilePath","movieSubtitleFilePath","showSubtitleSync","saveHardcodedSubtitles","saveMovieHardcodedSubtitles","selectors","decls","vars","consts","template","naturalSort","systemEventService","loadOverview","scanLibrarySubscription","schedulerFinish","scheduler","scanLibrary","ngOnDestroy","unsubscribe","getMovies","movies","nrOfMovies","length","sort","event","ctx","forkJoin","showService","getShowsOverview","getMoviesOverview","showsOverview","moviesOverview","systemService","getScheduler","scanningInProgress","running","schedulerStart","getTvdbUrl","ctx_r30","tvdbId","Number","getShowDetails","getShowPosterFullSizeUrl","show","getShowPosterThumbnailUrl","showShowSettings","refreshShowDetails","deleteShow","episodeTvdbId","deleteShowEpisodeSubtitle","addShowPathToVideoPaths","showWarningMessage","subtitleFilePath","episodeVideoFilePath","episodeSubtitleFilePath","saveShowEpisodeHardcodedSubtitles","getNrOfSubtitles","files","language","subtitleCount","forEach","file","type","hardcodedLanguages","harcodedLanguage","embeddedLanguages","embeddedLanguage","toString","getNrOfVideos","videoCount","getBannerPlaceholderUrl","getShows","shows","nrOfShows","getShowBannerThumbnailUrl","EventEmitter","FormUtils","fb","languageSelectItems","buildForm","videoSubtitlesForm","group","close","visibleChange","emit","saveVideoSubtitles","getFormControlValue","save","inputs","visible","outputs"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}