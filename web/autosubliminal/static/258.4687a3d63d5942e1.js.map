{"version":3,"file":"258.4687a3d63d5942e1.js","mappings":";;;;;;;;;;;;;;;;;AAA0C;AACsE;AAChD;AACF;;;;;;;AASvD,IAAMK,eAAe;EAAtB,MAAOA,eAAe;IAP5BC,YAAA;MAeU,KAAAC,aAAa,GAAGL,qDAAM,CAACE,mEAAa,CAAC;MACrC,KAAAI,UAAU,GAAGN,qDAAM,CAACD,qDAAU,CAAC;;IAEvC,IAAIQ,YAAYA,CAAA;MACd,OAAO,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,eAAe;IACjD;IAEA,IAAIC,SAASA,CAAA;MACX,OAAO,IAAI,CAACF,YAAY,IAAI,GAAG;IACjC;IAGAG,cAAcA,CAAA;MACZ,IAAI,CAACH,YAAY,GAAG,IAAI,CAACI,eAAe,EAAE;MAC1C,IAAI,CAACH,eAAe,GAAG,IAAI,CAACI,kBAAkB,EAAE;IAClD;IAEAC,QAAQA,CAAA;MACN,IAAI,CAACN,YAAY,GAAG,IAAI,CAACI,eAAe,EAAE;MAC1C,IAAI,CAACH,eAAe,GAAG,IAAI,CAACI,kBAAkB,EAAE;MAChD;MACA,IAAI,CAACR,aAAa,CAACU,SAAS,CAACC,IAAI,CAACf,8EAAkB,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC,CAACW,SAAS,CAAC;QAC/EC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACC,WAAW;OAC7B,CAAC;MACF;MACA,IAAI,CAACd,aAAa,CAACe,WAAW,CAACJ,IAAI,CAACf,8EAAkB,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC,CAACW,SAAS,CAAC;QACjFC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACG,cAAc;OAChC,CAAC;IACJ;IAEAC,qBAAqBA,CAAA;MACnB;MACA,IAAI,CAACd,YAAY,GAAG,IAAI,CAACI,eAAe,EAAE;MAC1C,IAAI,CAACH,eAAe,GAAG,IAAI,CAACI,kBAAkB,EAAE;IAClD;IAEAM,WAAWA,CAAA;MACT,IAAI,IAAI,CAACX,YAAY,GAAG,CAAC,EAAE;QACzB,IAAI,IAAI,CAACe,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACC,cAAc,CAAC;YAAEC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAQ,CAAE,CAAC;SACtF,MAAM;UACLC,MAAM,CAACC,QAAQ,CAAC;YAAEC,GAAG,EAAE,CAAC;YAAEH,QAAQ,EAAE;UAAQ,CAAE,CAAC;;;IAGrD;IAEAN,cAAcA,CAAA;MACZ,IAAI,IAAI,CAACZ,eAAe,GAAG,CAAC,EAAE;QAC5B,IAAI,IAAI,CAACc,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACC,cAAc,CAAC;YAAEC,KAAK,EAAE,KAAK;YAAEC,MAAM,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAQ,CAAE,CAAC;SACpF,MAAM;UACLC,MAAM,CAACC,QAAQ,CAAC;YAAEC,GAAG,EAAE,IAAI,CAACrB,eAAe;YAAEkB,QAAQ,EAAE;UAAQ,CAAE,CAAC;;;IAGxE;IAEQf,eAAeA,CAAA;MACrB,OAAOmB,QAAQ,CAACC,eAAe,CAACtB,SAAS,IAAIqB,QAAQ,CAACE,IAAI,CAACvB,SAAS;IACtE;IAEQG,kBAAkBA,CAAA;MACxB,OAAO,CAACkB,QAAQ,CAACC,eAAe,CAACxB,YAAY,IAAIuB,QAAQ,CAACE,IAAI,CAACzB,YAAY,KAAKuB,QAAQ,CAACC,eAAe,CAACE,YAAY,IAAIH,QAAQ,CAACE,IAAI,CAACC,YAAY,CAAC;IACtJ;;EAtEW/B,eAAe;qBAAfA,eAAe;EAAA;EAAfA,eAAe;UAAfA,eAAe;IAAAgC,SAAA;IAAAC,YAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;iBAAfC,GAAA,CAAA5B,cAAA,EAAgB;QAAA,UAAA6B,6DAAA;;;;;;;;;;;;;QCX7BA,4DAAA,cAA+B;QAC2GA,wDAAA,mBAAAI,4CAAA;UAAA,OAASL,GAAA,CAAAlB,cAAA,EAAgB;QAAA,EAAC;QAACmB,0DAAA,EAAI;QACvKA,4DAAA,WAAqJ;QAAxBA,wDAAA,mBAAAM,4CAAA;UAAA,OAASP,GAAA,CAAApB,WAAA,EAAa;QAAA,EAAC;QAACqB,0DAAA,EAAI;QAI3JA,4DAAA,cAAkC;QACwGA,wDAAA,mBAAAO,4CAAA;UAAA,OAASR,GAAA,CAAAlB,cAAA,EAAgB;QAAA,EAAC;QAACmB,0DAAA,EAAI;QACvKA,4DAAA,WAAqJ;QAAxBA,wDAAA,mBAAAQ,4CAAA;UAAA,OAAST,GAAA,CAAApB,WAAA,EAAa;QAAA,EAAC;QAACqB,0DAAA,EAAI;;;QAPnGA,uDAAA,GAAqC;QAArCA,wDAAA,YAAAA,6DAAA,IAAAY,GAAA,GAAAb,GAAA,CAAAhC,YAAA,EAAqC;QAC1CiC,uDAAA,GAAkC;QAAlCA,wDAAA,YAAAA,6DAAA,IAAAY,GAAA,GAAAb,GAAA,CAAA7B,SAAA,EAAkC;QAK7B8B,uDAAA,GAAqC;QAArCA,wDAAA,YAAAA,6DAAA,IAAAY,GAAA,GAAAb,GAAA,CAAAhC,YAAA,EAAqC;QAC1CiC,uDAAA,GAAkC;QAAlCA,wDAAA,YAAAA,6DAAA,KAAAY,GAAA,GAAAb,GAAA,CAAA7B,SAAA,EAAkC;;;mBDCzEZ,oDAAO;IAAAuD,MAAA;EAAA;EAAA,OAENlD,eAAe;AAAA;;;;;;;;;;;;;;AEZrB,IAAKmD,QAMX,gBAND,UAAYA,QAAQ;EAClBA,QAAA,mBAAe;EACfA,QAAA,iBAAa;EACbA,QAAA,uBAAmB;EACnBA,QAAA,mBAAe;EACfA,QAAA,yBAAqB;EAAA,OALXA,QAAQ;AAMpB,CAAC,CANWA,QAAQ,OAMnB;;;;;;;;;;;;;;;;;;;ACNqE;AACN;AACvB;AACsB;AACI;;AAQ5D,IAAMI,iBAAiB;EAAxB,MAAOA,iBAAiB;IAN9BtD,YAAA;MAQU,KAAAuD,MAAM,GAAG3D,qDAAM,CAACuD,mDAAM,CAAC;MACvB,KAAAK,UAAU,GAAG5D,qDAAM,CAACwD,iEAAU,CAAC;MAC/B,KAAAK,cAAc,GAAG7D,qDAAM,CAACyD,qEAAc,CAAC;MACvC,KAAAnD,UAAU,GAAGN,qDAAM,CAACD,qDAAU,CAAC;;IAEvCe,QAAQA,CAAA;MACN,IAAI,CAAC8C,UAAU,CAACE,SAAS,EAAE,CAAC9C,IAAI,CAACf,8EAAkB,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC,CAACW,SAAS,CAAC;QAC9EC,IAAI,EAAG6C,MAAM,IAAI;UACf;UACA,IAAIA,MAAM,EAAE;YACV,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,WAAW,CAAC;;QAE1C,CAAC;QACDC,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACJ,cAAc,CAACK,gBAAgB,CAAC,2BAA2B;OAC9E,CAAC;IACJ;;EAjBWR,iBAAiB;qBAAjBA,iBAAiB;EAAA;EAAjBA,iBAAiB;UAAjBA,iBAAiB;IAAAvB,SAAA;IAAAgC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAnC,EAAA,EAAAC,GAAA;IAAAc,MAAA;EAAA;EAAA,OAAjBK,iBAAiB;AAAA;;;;;;;;;;;;;;;;ACXkC;AACH;AAE7D,MAAMiB,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;CACZ,EACD;EACEF,IAAI,EAAE,MAAM;EACZG,SAAS,EAAEL,sEAAgBA;CAC5B,EACD;EACEE,IAAI,EAAE,OAAO;EACbG,SAAS,EAAErB,yEAAiBA;CAC7B,EACD;EACEkB,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;CACb,CACF;AAED;AACA,iEAAeF,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB4B;AACqB;AACN;AACnB;AACU;AACT;AACI;AACN;AACyC;AACzB;AACG;AACI;AACF;AACgB;AACH;AAC1B;;;;;;;;;;;;;;;ICNxCnC,4DAAA,eAA4I;IAA1BA,wDAAA,mBAAAiD,qEAAA;MAAA,MAAAC,WAAA,GAAAlD,2DAAA,CAAAoD,GAAA;MAAA,MAAAC,SAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAvD,2DAAA;MAAA,OAASA,yDAAA,CAAAuD,MAAA,CAAAG,OAAA,CAAAL,SAAA,CAAe;IAAA,EAAC;IAACrD,oDAAA,GAAU;IAAAA,0DAAA,EAAO;;;;;IAAxGA,wDAAA,YAAAA,6DAAA,IAAAY,GAAA,EAAAgD,MAAA,CAAAC,cAAA,KAAAR,SAAA,EAA4D;IAA2BrD,uDAAA,GAAU;IAAVA,+DAAA,CAAAqD,SAAA,CAAU;;;;;;;;;;;IAL5JrD,4DAAA,aAAmB;IACUA,oDAAA,cAAO;IAAAA,0DAAA,EAAM;IACxCA,4DAAA,UAAK;IAEuFA,wDAAA,mBAAA+D,8DAAA;MAAA/D,2DAAA,CAAAgE,GAAA;MAAA,MAAAC,MAAA,GAAAjE,2DAAA;MAAA,OAASA,yDAAA,CAAAiE,MAAA,CAAAP,OAAA,CAAQ,CAAC,CAAC;IAAA,EAAC;IAAC1D,oDAAA,cAAO;IAAAA,0DAAA,EAAO;IAC3HA,wDAAA,IAAAmE,8CAAA,kBAA6J;IAC/JnE,0DAAA,EAAO;IACPA,4DAAA,cAAuB;IACmGA,wDAAA,qBAAAoE,oEAAA;MAAApE,2DAAA,CAAAgE,GAAA;MAAA,MAAAK,MAAA,GAAArE,2DAAA;MAAA,OAAWA,yDAAA,CAAAqE,MAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAACtE,0DAAA,EAAW;IAEjKA,4DAAA,gBAAwB;IACYA,wDAAA,2BAAAuE,6EAAAC,MAAA;MAAAxE,2DAAA,CAAAgE,GAAA;MAAA,MAAAS,MAAA,GAAAzE,2DAAA;MAAA,OAAAA,yDAAA,CAAAyE,MAAA,CAAAC,gBAAA,GAAAF,MAAA;IAAA,EAA8B;IAAqExE,0DAAA,EAAa;;;;IAPhHA,uDAAA,GAAqD;IAArDA,wDAAA,YAAAA,6DAAA,IAAA2E,GAAA,EAAAC,MAAA,CAAAf,cAAA,QAAqD;IAC9D7D,uDAAA,GAAU;IAAVA,wDAAA,YAAA4E,MAAA,CAAAC,OAAA,CAAU;IAGzB7E,uDAAA,GAAyB;IAAzBA,wDAAA,UAAA4E,MAAA,CAAAE,eAAA,CAAyB,SAAAF,MAAA,CAAAG,cAAA,cAAAH,MAAA,CAAAI,eAAA;IAGvBhF,uDAAA,GAAqB;IAArBA,wDAAA,YAAA4E,MAAA,CAAAK,SAAA,CAAqB,YAAAL,MAAA,CAAAF,gBAAA;;;ADStC,IAAMxC,gBAAgB;EAAvB,MAAOA,gBAAgB;IAP7BtE,YAAA;MAUE,KAAAiG,cAAc,GAAG,CAAC;MAElB,KAAAa,gBAAgB,GAAG,EAAE;MACrB,KAAAQ,OAAO,GAAG,KAAK;MACf,KAAAC,OAAO,GAAG,KAAK;MACf,KAAAH,eAAe,GAAG,KAAK,CAAC,CAAC;MACzB,KAAAF,eAAe,GAAG,eAAe;MACjC,KAAAC,cAAc,GAAG,YAAY;MAEZ,KAAAK,iBAAiB,GAAG,mFAAmF;MAGhH,KAAAC,WAAW,GAAa,EAAE;MAE1B,KAAAjE,UAAU,GAAG5D,qDAAM,CAACwD,iEAAU,CAAC;MAC/B,KAAAK,cAAc,GAAG7D,qDAAM,CAACyD,qEAAc,CAAC;MACvC,KAAApD,aAAa,GAAGL,qDAAM,CAACE,mEAAa,CAAC;MACrC,KAAAI,UAAU,GAAGN,qDAAM,CAACD,qDAAU,CAAC;;IAEvC,IAAI+H,mBAAmBA,CAAA;MACrB,OAAO,IAAI,CAACD,WAAW,CAACE,MAAM,CAAEC,UAAU,IAAI;QAC5C,IAAI,IAAI,CAACd,gBAAgB,EAAE;UACzB,MAAMe,KAAK,GAAG,IAAI,CAACL,iBAAiB,CAACM,IAAI,CAACF,UAAU,CAAC;UACrD,OAAOC,KAAK,IAAIA,KAAK,CAACE,MAAM,CAAC,UAAU,CAAC,KAAK,IAAI,CAACjB,gBAAgB;SACnE,MAAM;UACL,OAAO,IAAI;;MAEf,CAAC,CAAC;IACJ;IAEA,IAAIkB,UAAUA,CAAA;MACZ,OAAO,IAAI,CAACN,mBAAmB,CAACO,IAAI,CAAC,IAAI,CAAC;IAC5C;IAEAvH,QAAQA,CAAA;MACN,IAAI,CAAC2G,SAAS,GAAG,IAAI,CAACa,YAAY,EAAE;MACpC,IAAI,CAAC1E,UAAU,CAAC2E,WAAW,EAAE,CAACvH,IAAI,CAACf,8EAAkB,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC,CAACW,SAAS,CAAC;QAChFC,IAAI,EAAGsH,KAAK,IAAK,IAAI,CAACnB,OAAO,GAAGoB,KAAK,CAACC,IAAI,CAACD,KAAK,CAACD,KAAK,CAAC,CAACG,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,CAAC;OACnF,CAAC;;MACF,IAAI,CAAC3C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB;;IAEAA,OAAOA,CAAC4C,MAAc;MACpB,IAAI,CAACpB,OAAO,GAAG,IAAI;MACnB,IAAI,CAACrB,cAAc,GAAGyC,MAAM;MAC5B,IAAI,CAACtB,eAAe,GAAG,IAAI,CAACnB,cAAc,KAAK,CAAC,CAAC,CAAC;MAClD,IAAI,CAACzC,UAAU,CAACsC,OAAO,CAAC4C,MAAM,CAAC,CAAC9H,IAAI,CAACf,8EAAkB,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC,CAACW,SAAS,CAAC;QAClFC,IAAI,EAAG6H,QAAQ,IAAI;UACjB,IAAI,CAAClB,WAAW,GAAGkB,QAAQ;UAC3B,IAAI,CAACrB,OAAO,GAAG,KAAK;UACpB,IAAI,CAACsB,gBAAgB,EAAE;QACzB,CAAC;QACD/E,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACJ,cAAc,CAACK,gBAAgB,CAAC,yBAAyB;OAC5E,CAAC;IACJ;IAEA4C,aAAaA,CAAA;MACX,IAAI,CAACa,OAAO,GAAG,CAAC,IAAI,CAACA,OAAO;MAC5B,IAAI,IAAI,CAACA,OAAO,EAAE;QAChB;QACA,IAAI,CAACL,eAAe,GAAG,cAAc;QACrC,IAAI,CAACC,cAAc,GAAG,aAAa;QACnC;QACA,IAAIhC,8DAAW,CAAC0D,WAAW,EAAE;UAC3B,IAAI,CAAC5I,aAAa,CAAC6I,eAAe,EAAE;SACrC,MAAM;UACL,IAAI,CAAC7I,aAAa,CAAC8I,iBAAiB,EAAE;;OAEzC,MAAM;QACL;QACA,IAAI,CAAC7B,eAAe,GAAG,eAAe;QACtC,IAAI,CAACC,cAAc,GAAG,YAAY;;MAEpC,IAAI,CAACyB,gBAAgB,EAAE;IACzB;IAEQV,YAAYA,CAAA;MAClB,MAAMc,SAAS,GAAiB,EAAE;MAClCA,SAAS,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAE,CAAE,CAAC;MAC3CC,MAAM,CAACC,OAAO,CAACnG,sDAAQ,CAAC,CAACoG,OAAO,CAAEC,KAAK,IAAKP,SAAS,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAEK,KAAK,CAAC,CAAC,CAAC;QAAEJ,KAAK,EAAEI,KAAK,CAAC,CAAC;MAAC,CAAE,CAAC,CAAC;MACjG,OAAOP,SAAS;IAClB;IAEQQ,kBAAkBA,CAAA;MACxB,IAAIC,QAAQ,GAAG,KAAK;MACpB,IAAIjI,MAAM,CAACkI,QAAQ,CAACD,QAAQ,KAAK,QAAQ,EAAE;QACzCA,QAAQ,GAAG,MAAM;;MAEnB,MAAME,GAAG,GAAG,GAAGF,QAAQ,KAAKjI,MAAM,CAACkI,QAAQ,CAACE,IAAI,GAAGzE,8DAAW,CAAC0E,OAAO,gBAAgB;MACtF,MAAMC,MAAM,GAAmC;QAC7CH,GAAG;QACHI,YAAY,EAAGC,CAAe,IAAKA,CAAC,CAACC,IAAc;QACnDC,UAAU,EAAGf,KAAa,IAAKA;OAChC;MACD,OAAOjE,yDAAS,CAAC4E,MAAM,CAAC;IAC1B;IAEQlB,gBAAgBA,CAAA;MACtB,IAAI,IAAI,CAACrB,OAAO,IAAI,CAAC,IAAI,CAACH,eAAe,EAAE;QACzC;QACA,IAAI,CAAC+C,aAAa,GAAG,IAAI,CAACX,kBAAkB,EAAE,CAAC,CAAC;QAChD,IAAI,CAACW,aAAa,CAACvJ,IAAI,CAACf,8EAAkB,CAAC,IAAI,CAACK,UAAU,CAAC,CAAC,CAACW,SAAS,CAAC;UACrEC,IAAI,EAAG8G,UAAU,IAAI;YACnB,IAAIzC,8DAAW,CAAC0D,WAAW,EAAE;cAC3B;cACA,IAAI,CAACpB,WAAW,CAAC2C,OAAO,CAACxC,UAAU,CAAC;cACpC,IAAI,CAAC3H,aAAa,CAAC6I,eAAe,EAAE;aACrC,MAAM;cACL;cACA,IAAI,CAACrB,WAAW,CAACwB,IAAI,CAACrB,UAAU,CAAC;cACjC,IAAI,CAAC3H,aAAa,CAAC8I,iBAAiB,EAAE;;UAE1C;SACD,CAAC;QACFsB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;OACnC,MAAM;QACL;QACA,IAAI,IAAI,CAACH,aAAa,EAAE;UACtB,IAAI,CAACA,aAAa,CAACI,WAAW,EAAE;;QAElCF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;IAEvC;;EA7HWhG,gBAAgB;qBAAhBA,gBAAgB;EAAA;EAAhBA,gBAAgB;UAAhBA,gBAAgB;IAAAvC,SAAA;IAAAgC,UAAA;IAAAC,QAAA,GAAA5B,iEAAA;IAAA8B,KAAA;IAAAC,IAAA;IAAAqG,MAAA;IAAApG,QAAA,WAAAqG,0BAAAvI,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCxB7BE,4DAAA,aAA0B;QAGtBA,wDAAA,IAAAsI,uCAAA,0BAgBc;QAEdtI,4DAAA,aAAyB;QAAAA,oDAAA,GAAc;QAAAA,0DAAA,EAAM;QAKjDA,uDAAA,qBAA+C;;;QALlBA,uDAAA,GAAc;QAAdA,+DAAA,CAAAD,GAAA,CAAA6F,UAAA,CAAc;QAK9B5F,uDAAA,GAAmB;QAAnBA,wDAAA,YAAAD,GAAA,CAAAmF,OAAA,CAAmB;;;mBDJpB1C,mDAAK,EAAElF,qDAAO,EAAEmF,wDAAW,EAAA+F,4DAAA,EAAAA,oDAAA,EAAE3F,uDAAW,EAAA8F,iDAAA,EAAAE,uDAAA,EAAElG,yDAAY,EAAAoG,mDAAA,EAAEnG,6DAAc,EAAAqG,uDAAA,EAAEvG,sDAAY,EAAEM,mFAAgB,EAAErF,gFAAe;IAAAkD,MAAA;EAAA;EAAA,OAEtHqB,gBAAgB;AAAA;;;;;;;;;;;;;;;;;;AEvBU;AACkB;AACG;;AAKrD,IAAMlB,UAAW;EAAlB,MAAOA,UAAW,SAAQmI,qEAAkB;IAHlDvL,YAAA;;MAKmB,KAAAwL,GAAG,GAAG,GAAGrG,8DAAW,CAAC0E,OAAO,WAAW;;IAExD/D,OAAOA,CAAC2F,MAAe;MACrB,MAAM9B,GAAG,GAAG8B,MAAM,GAAG,GAAG,IAAI,CAACD,GAAG,IAAIC,MAAM,EAAE,GAAG,IAAI,CAACD,GAAG;MACvD,OAAO,IAAI,CAACE,UAAU,CAACC,GAAG,CAAWhC,GAAG,EAAE,IAAI,CAACiC,OAAO,CAAC;IACzD;IAEAlI,SAASA,CAAA;MACP,OAAO,IAAI,CAACgI,UAAU,CAACG,MAAM,CAAO,IAAI,CAACL,GAAG,EAAE,IAAI,CAACI,OAAO,CAAC,CACxDhL,IAAI,CAAC4H,yCAAG,CAAC,MAAM,IAAI,CAAC,CAAC;IAC1B;IAEAL,WAAWA,CAAA;MACT,OAAO,IAAI,CAACuD,UAAU,CAACC,GAAG,CAAQ,GAAG,IAAI,CAACH,GAAG,QAAQ,EAAE,IAAI,CAACI,OAAO,CAAC,CACjEhL,IAAI,CAAC4H,yCAAG,CAAEJ,KAAK,IAAKA,KAAK,CAACA,KAAK,CAAC,CAAC;IACtC;;EAjBWhF,UAAW;;;wIAAXA,UAAU,IAAA0I,CAAA,IAAV1I,UAAU;IAAA;EAAA;EAAVA,UAAW;WAAXA,UAAU;IAAA2I,OAAA,EAAV3I,UAAU,CAAA4I,IAAA;IAAAC,UAAA,EAFT;EAAM;EAAA,OAEP7I,UAAW;AAAA;;;;;;;;;;;;;;;;ACPO;;AAKxB,IAAMtD,aAAa;EAApB,MAAOA,aAAa;IAH1BE,YAAA;MAKE,KAAAW,SAAS,GAAG,IAAIuL,yCAAO,EAAW;MAClC,KAAAlL,WAAW,GAAG,IAAIkL,yCAAO,EAAW;;IAEpCpD,eAAeA,CAAA;MACb,IAAI,CAACnI,SAAS,CAACG,IAAI,CAAC,IAAI,CAAC;IAC3B;IAEAiI,iBAAiBA,CAAA;MACf,IAAI,CAAC/H,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC;IAC7B;;EAXWhB,aAAa;qBAAbA,aAAa;EAAA;EAAbA,aAAa;WAAbA,aAAa;IAAAiM,OAAA,EAAbjM,aAAa,CAAAkM,IAAA;IAAAC,UAAA,EAFZ;EAAM;EAAA,OAEPnM,aAAa;AAAA","sources":["./src/app/components/scroll/scroll.component.ts","./src/app/components/scroll/scroll.component.html","./src/app/models/loglevel.ts","./src/app/pages/log/clear/log-clear.component.ts","./src/app/pages/log/log.routes.ts","./src/app/pages/log/view/log-view.component.ts","./src/app/pages/log/view/log-view.component.html","./src/app/services/api/log.service.ts","./src/app/services/scroll.service.ts"],"sourcesContent":["import { NgClass } from '@angular/common';\r\nimport { AfterContentChecked, Component, DestroyRef, HostListener, inject, Input, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { ScrollService } from '../../services/scroll.service';\r\n\r\n@Component({\r\n  selector: 'app-scroll',\r\n  templateUrl: './scroll.component.html',\r\n  styleUrls: ['./scroll.component.scss'],\r\n  standalone: true,\r\n  imports: [NgClass]\r\n})\r\nexport class ScrollComponent implements OnInit, AfterContentChecked {\r\n\r\n  @Input()\r\n  target: HTMLElement; // optional target html element, if specified scroll is related to the element\r\n\r\n  private scrollHeight: number;\r\n  private maxScrollHeight: number;\r\n\r\n  private scrollService = inject(ScrollService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  get scrollBottom(): boolean {\r\n    return this.scrollHeight < this.maxScrollHeight;\r\n  }\r\n\r\n  get scrollTop(): boolean {\r\n    return this.scrollHeight >= 100;\r\n  }\r\n\r\n  @HostListener('window:scroll')\r\n  onWindowScroll(): void {\r\n    this.scrollHeight = this.getScrollHeight();\r\n    this.maxScrollHeight = this.getMaxScrollHeight();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.scrollHeight = this.getScrollHeight();\r\n    this.maxScrollHeight = this.getMaxScrollHeight();\r\n    // Subscribe on scrollUp events\r\n    this.scrollService.scrollUp$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.scrollToTop()\r\n    });\r\n    // Subscribe on scrollDown events\r\n    this.scrollService.scrollDown$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.scrollToBottom()\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // Make sure to update the scrollheight after the page/component is loaded\r\n    this.scrollHeight = this.getScrollHeight();\r\n    this.maxScrollHeight = this.getMaxScrollHeight();\r\n  }\r\n\r\n  scrollToTop(): void {\r\n    if (this.scrollHeight > 0) {\r\n      if (this.target) {\r\n        this.target.scrollIntoView({ block: 'start', inline: 'nearest', behavior: 'smooth' });\r\n      } else {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }\r\n    }\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    if (this.maxScrollHeight > 0) {\r\n      if (this.target) {\r\n        this.target.scrollIntoView({ block: 'end', inline: 'nearest', behavior: 'smooth' });\r\n      } else {\r\n        window.scrollTo({ top: this.maxScrollHeight, behavior: 'smooth' });\r\n      }\r\n    }\r\n  }\r\n\r\n  private getScrollHeight(): number {\r\n    return document.documentElement.scrollTop || document.body.scrollTop;\r\n  }\r\n\r\n  private getMaxScrollHeight(): number {\r\n    return (document.documentElement.scrollHeight || document.body.scrollHeight) - (document.documentElement.offsetHeight || document.body.offsetHeight);\r\n  }\r\n}\r\n","<!-- Scroll icons top page -->\r\n<span class=\"scroll-icons top\">\r\n  <i class=\"fa fa-arrow-circle-down scroll-icon-bottom\" [ngClass]=\"{'d-none': !scrollBottom}\" aria-hidden=\"true\" title=\"Scroll to bottom\" (click)=\"scrollToBottom()\"></i>\r\n  <i class=\"fa fa-arrow-circle-up scroll-icon-top\" [ngClass]=\"{'d-none': !scrollTop}\" aria-hidden=\"true\" title=\"Scroll to top\" (click)=\"scrollToTop()\"></i>\r\n</span>\r\n\r\n<!-- Scroll icons bottom page -->\r\n<span class=\"scroll-icons bottom\">\r\n  <i class=\"fa fa-arrow-circle-down scroll-icon-bottom\" [ngClass]=\"{'d-none': !scrollBottom}\" aria-hidden=\"true\" title=\"Scroll to bottom\" (click)=\"scrollToBottom()\"></i>\r\n  <i class=\"fa fa-arrow-circle-up scroll-icon-top\" [ngClass]=\"{'d-none': !scrollTop}\" aria-hidden=\"true\" title=\"Scroll to top\" (click)=\"scrollToTop()\"></i>\r\n</span>\r\n","export enum Loglevel {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARNING = 'WARNING',\r\n  ERROR = 'ERROR',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n","import { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../services/api/log.service';\r\nimport { MessageService } from '../../../services/message.service';\r\n\r\n@Component({\r\n    selector: 'app-log-clear',\r\n    templateUrl: './log-clear.component.html',\r\n    styleUrls: ['./log-clear.component.scss'],\r\n    standalone: true\r\n})\r\nexport class LogClearComponent implements OnInit {\r\n\r\n  private router = inject(Router);\r\n  private logService = inject(LogService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.logService.clearLogs().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => {\r\n        // Redirect to log view after the logs are cleared\r\n        if (result) {\r\n          this.router.navigateByUrl('/log/view');\r\n        }\r\n      },\r\n      error: () => this.messageService.showErrorMessage(`Unable to clear the logs!`)\r\n    });\r\n  }\r\n\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\nimport { LogViewComponent } from './view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'view',\r\n    component: LogViewComponent\r\n  },\r\n  {\r\n    path: 'clear',\r\n    component: LogClearComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'view'\r\n  }\r\n];\r\n\r\n// Use default export for simplified lazy loading (https://angular.io/guide/standalone-components#lazy-loading-and-default-exports)\r\nexport default routes;\r\n","import { NgClass, NgFor } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SelectItem, SharedModule } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { LogService } from '../../../services/api/log.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { ScrollService } from '../../../services/scroll.service';\r\nimport { LoadingComponent } from '../../../components/loading/loading.component';\r\nimport { ScrollComponent } from '../../../components/scroll/scroll.component';\r\nimport { Loglevel } from '../../../models/loglevel';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss'],\r\n  standalone: true,\r\n  imports: [NgFor, NgClass, FormsModule, PanelModule, ButtonModule, DropdownModule, SharedModule, LoadingComponent, ScrollComponent]\r\n})\r\nexport class LogViewComponent implements OnInit {\r\n\r\n  logNums: number[];\r\n  selectedLogNum = 0;\r\n  loglevels: SelectItem[];\r\n  selectedLoglevel = '';\r\n  loading = false;\r\n  tailing = false;\r\n  tailingDisabled = false; // true for non current (lognum != 0) logfiles as tailing has no use in this case\r\n  tailButtonLabel = 'Start tailing';\r\n  tailButtonIcon = 'pi pi-play';\r\n\r\n  private readonly LOG_MESSAGE_REGEX = /^((?<date>\\d{4}-\\d{2}-\\d{2})\\s(?<time>\\d{2}:\\d{2}:\\d{2},\\d{3})\\s(?<loglevel>\\w+))/;\r\n\r\n  private logWebsocket$: WebSocketSubject<string>;\r\n  private logMessages: string[] = [];\r\n\r\n  private logService = inject(LogService);\r\n  private messageService = inject(MessageService);\r\n  private scrollService = inject(ScrollService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  get filteredLogMessages(): string[] {\r\n    return this.logMessages.filter((logMessage) => {\r\n      if (this.selectedLoglevel) {\r\n        const match = this.LOG_MESSAGE_REGEX.exec(logMessage);\r\n        return match && match.groups['loglevel'] === this.selectedLoglevel;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get logContent(): string {\r\n    return this.filteredLogMessages.join('\\n');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loglevels = this.getLogLevels();\r\n    this.logService.getLogCount().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (count) => this.logNums = Array.from(Array(count).keys()).map((i) => i + 1) // get array starting from 1\r\n    });\r\n    this.getLogs(0); // 0 = current logfile\r\n  }\r\n\r\n  getLogs(logNum: number): void {\r\n    this.loading = true;\r\n    this.selectedLogNum = logNum;\r\n    this.tailingDisabled = this.selectedLogNum !== 0; // tailing only allowed when on current logfile -> lognum = 0\r\n    this.logService.getLogs(logNum).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (logLines) => {\r\n        this.logMessages = logLines;\r\n        this.loading = false;\r\n        this.handleLogTailing();\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the logs!')\r\n    });\r\n  }\r\n\r\n  toggleTailing(): void {\r\n    this.tailing = !this.tailing;\r\n    if (this.tailing) {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Stop tailing';\r\n      this.tailButtonIcon = 'pi pi-pause';\r\n      // Scroll to right position when tailing is enabled\r\n      if (appSettings.logReversed) {\r\n        this.scrollService.triggerScrollUp();\r\n      } else {\r\n        this.scrollService.triggerScrollDown();\r\n      }\r\n    } else {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Start tailing';\r\n      this.tailButtonIcon = 'pi pi-play';\r\n    }\r\n    this.handleLogTailing();\r\n  }\r\n\r\n  private getLogLevels(): SelectItem[] {\r\n    const logLevels: SelectItem[] = [];\r\n    logLevels.push({ label: 'ALL', value: '' });\r\n    Object.entries(Loglevel).forEach((entry) => logLevels.push({ label: entry[0], value: entry[1] }));\r\n    return logLevels;\r\n  }\r\n\r\n  private createLogWebSocket(): WebSocketSubject<string> {\r\n    let protocol = 'ws:';\r\n    if (window.location.protocol === 'https:') {\r\n      protocol = 'wss:';\r\n    }\r\n    const url = `${protocol}//${window.location.host}${appSettings.webRoot}/websocket/log`;\r\n    const config: WebSocketSubjectConfig<string> = {\r\n      url,\r\n      deserializer: (e: MessageEvent) => e.data as string,\r\n      serializer: (value: string) => value\r\n    };\r\n    return webSocket(config);\r\n  }\r\n\r\n  private handleLogTailing(): void {\r\n    if (this.tailing && !this.tailingDisabled) {\r\n      // Subscribe on new logs once loaded (only for current logfile -> logNum = 0)\r\n      this.logWebsocket$ = this.createLogWebSocket(); // Need to create a new socket after unsubscribe\r\n      this.logWebsocket$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: (logMessage) => {\r\n          if (appSettings.logReversed) {\r\n            // Append to the top\r\n            this.logMessages.unshift(logMessage);\r\n            this.scrollService.triggerScrollUp();\r\n          } else {\r\n            // Append to the end\r\n            this.logMessages.push(logMessage);\r\n            this.scrollService.triggerScrollDown();\r\n          }\r\n        }\r\n      });\r\n      console.log('Log tailing enabled');\r\n    } else {\r\n      // Unsubscribe when not tailing\r\n      if (this.logWebsocket$) {\r\n        this.logWebsocket$.unsubscribe();\r\n      }\r\n      console.log('Log tailing disabled');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel>\r\n    <!-- Custom panel header -->\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"w-100\">\r\n        <div class=\"p-panel-title\">Logfile</div>\r\n        <div>\r\n          <span class=\"log-num\">\r\n            <span class=\"p-tag p-tag-rounded\" [ngClass]=\"{'p-tag-secondary': selectedLogNum !== 0}\" (click)=\"getLogs(0)\">current</span>\r\n            <span *ngFor=\"let logNum of logNums\" class=\"p-badge\" [ngClass]=\"{'p-badge-secondary': selectedLogNum !== logNum}\" (click)=\"getLogs(logNum)\">{{logNum}}</span>\r\n          </span>\r\n          <span class=\"log-tail\">\r\n            <p-button [label]=\"tailButtonLabel\" [icon]=\"tailButtonIcon\" styleClass=\"p-button-outlined\" [disabled]=\"tailingDisabled\" (onClick)=\"toggleTailing()\"></p-button>\r\n          </span>\r\n          <span class=\"log-level\">\r\n            <p-dropdown [options]=\"loglevels\" [(ngModel)]=\"selectedLoglevel\" inputId=\"logLevels\" styleClass=\"p-dropdown-ar\" scrollHeight=\"300px\"></p-dropdown>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Log content -->\r\n    <pre class=\"log-content\">{{logContent}}</pre>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Loading component -->\r\n<app-loading [visible]=\"loading\"></app-loading>\r\n\r\n<!-- Scroll component -->\r\n<app-scroll></app-scroll>\r\n","import { Injectable } from '@angular/core';\r\nimport { map, Observable } from 'rxjs';\r\nimport { appSettings } from '../../app-settings.service';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/logs`;\r\n\r\n  getLogs(lognum?: number): Observable<string[]> {\r\n    const url = lognum ? `${this.URL}/${lognum}` : this.URL;\r\n    return this.httpClient.get<string[]>(url, this.options);\r\n  }\r\n\r\n  clearLogs(): Observable<boolean> {\r\n    return this.httpClient.delete<void>(this.URL, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getLogCount(): Observable<number> {\r\n    return this.httpClient.get<Count>(`${this.URL}/count`, this.options)\r\n      .pipe(map((count) => count.count));\r\n  }\r\n}\r\n\r\ntype Count = { count: number };\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScrollService {\r\n\r\n  scrollUp$ = new Subject<boolean>();\r\n  scrollDown$ = new Subject<boolean>();\r\n\r\n  triggerScrollUp(): void {\r\n    this.scrollUp$.next(true);\r\n  }\r\n\r\n  triggerScrollDown(): void {\r\n    this.scrollDown$.next(true);\r\n  }\r\n}\r\n"],"names":["NgClass","DestroyRef","inject","takeUntilDestroyed","ScrollService","ScrollComponent","constructor","scrollService","destroyRef","scrollBottom","scrollHeight","maxScrollHeight","scrollTop","onWindowScroll","getScrollHeight","getMaxScrollHeight","ngOnInit","scrollUp$","pipe","subscribe","next","scrollToTop","scrollDown$","scrollToBottom","ngAfterContentChecked","target","scrollIntoView","block","inline","behavior","window","scrollTo","top","document","documentElement","body","offsetHeight","selectors","hostBindings","ScrollComponent_HostBindings","rf","ctx","i0","ɵɵresolveWindow","ɵɵelementStart","ɵɵlistener","ScrollComponent_Template_i_click_1_listener","ɵɵelementEnd","ScrollComponent_Template_i_click_2_listener","ScrollComponent_Template_i_click_4_listener","ScrollComponent_Template_i_click_5_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","styles","Loglevel","Router","LogService","MessageService","LogClearComponent","router","logService","messageService","clearLogs","result","navigateByUrl","error","showErrorMessage","standalone","features","ɵɵStandaloneFeature","decls","vars","template","LogClearComponent_Template","LogViewComponent","routes","path","redirectTo","pathMatch","component","NgFor","FormsModule","SharedModule","ButtonModule","DropdownModule","PanelModule","webSocket","appSettings","LoadingComponent","LogViewComponent_ng_template_2_span_7_Template_span_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","logNum_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","getLogs","ɵɵtext","ctx_r1","selectedLogNum","ɵɵtextInterpolate","LogViewComponent_ng_template_2_Template_span_click_5_listener","_r6","ctx_r5","ɵɵtemplate","LogViewComponent_ng_template_2_span_7_Template","LogViewComponent_ng_template_2_Template_p_button_onClick_9_listener","ctx_r7","toggleTailing","LogViewComponent_ng_template_2_Template_p_dropdown_ngModelChange_11_listener","$event","ctx_r8","selectedLoglevel","_c1","ctx_r0","logNums","tailButtonLabel","tailButtonIcon","tailingDisabled","loglevels","loading","tailing","LOG_MESSAGE_REGEX","logMessages","filteredLogMessages","filter","logMessage","match","exec","groups","logContent","join","getLogLevels","getLogCount","count","Array","from","keys","map","i","logNum","logLines","handleLogTailing","logReversed","triggerScrollUp","triggerScrollDown","logLevels","push","label","value","Object","entries","forEach","entry","createLogWebSocket","protocol","location","url","host","webRoot","config","deserializer","e","data","serializer","logWebsocket$","unshift","console","log","unsubscribe","consts","LogViewComponent_Template","LogViewComponent_ng_template_2_Template","ɵɵelement","i1","NgControlStatus","NgModel","i2","Panel","i3","PrimeTemplate","i4","Button","i5","Dropdown","ApiServiceTemplate","URL","lognum","httpClient","get","options","delete","t","factory","ɵfac","providedIn","Subject"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}