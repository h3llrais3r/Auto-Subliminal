{"version":3,"file":"852.2a6c6e55c29c0a82.js","mappings":"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AAC;IACVsR,EAAE;IACFC,EAAE;IACFC,aAAa;IACbC,MAAM;IACNC,QAAQ;IACR;AACJ;AACA;AACA;IACInqB,EAAE;IACF;AACJ;AACA;AACA;AACA;IACIoqB,aAAa;IACb;AACJ;AACA;AACA;AACA;IACIC,qBAAqB;IACrB;AACJ;AACA;AACA;AACA;IACIC,gBAAgB;IAChB;AACJ;AACA;AACA;IACIC,eAAe,GAAG,IAAI;IACtB;AACJ;AACA;AACA;IACIC,aAAa;IACb;AACJ;AACA;AACA;IACIC,YAAY;IACZ;AACJ;AACA;AACA;IACIC,YAAY;IACZ;AACJ;AACA;AACA;IACIC,aAAa;IACb;AACJ;AACA;AACA;IACIC,YAAY;IACZ;AACJ;AACA;AACA;IACIxH,IAAI,GAAG,KAAK;IACZ;AACJ;AACA;AACA;IACIyH,aAAa;IACb;AACJ;AACA;AACA;IACI1H,qBAAqB;IACrB;AACJ;AACA;AACA;IACIE,oBAAoB;IACpB;AACJ;AACA;AACA;IACIH,YAAY,GAAG,OAAO;IACtB;AACJ;AACA;AACA;IACIhC,QAAQ,GAAG,CAAC;IACZ;AACJ;AACA;AACA;IACIW,QAAQ;IACR;AACJ;AACA;AACA;IACIiJ,KAAK;IACL;AACJ;AACA;AACA;IACIC,UAAU;IACV;AACJ;AACA;AACA;IACIC,SAAS;IACT;AACJ;AACA;AACA;IACIC,cAAc;IACd;AACJ;AACA;AACA;IACIC,QAAQ;IACR;AACJ;AACA;AACA;IACI/L,QAAQ;IACR;AACJ;AACA;AACA;IACIyC,QAAQ,GAAG,KAAK;IAChB;AACJ;AACA;AACA;IACItnB,MAAM,GAAG,KAAK;IACd;AACJ;AACA;AACA;IACI6wB,QAAQ;IACR;AACJ;AACA;AACA;IACIC,eAAe,GAAG,UAAU;IAC5B;AACJ;AACA;AACA;IACIC,YAAY;IACZ;AACJ;AACA;AACA;IACIC,gBAAgB,GAAG,KAAK;IACxB;AACJ;AACA;AACA;IACIC,OAAO;IACP;AACJ;AACA;AACA;IACIzJ,aAAa,GAAG,IAAI;IACpB;AACJ;AACA;AACA;IACI0J,WAAW;IACX;A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","sources":["./src/app/components/file-browser/file-browser.component.ts","./src/app/components/file-browser/file-browser.component.html","./src/app/components/input/dropdown/input-dropdown.component.ts","./src/app/components/input/dropdown/input-dropdown.component.html","./src/app/components/input/file-browser/input-file-browser.component.ts","./src/app/components/input/file-browser/input-file-browser.component.html","./src/app/components/input/multi-file-browser/input-multi-file-browser.component.ts","./src/app/components/input/multi-file-browser/input-multi-file-browser.component.html","./src/app/components/input/multi-text/input-multi-text.component.ts","./src/app/components/input/multi-text/input-multi-text.component.html","./src/app/models/filebrowser.ts","./src/app/pages/settings/general/settings-general.component.ts","./src/app/pages/settings/general/settings-general.component.html","./src/app/pages/settings/library/settings-library.component.ts","./src/app/pages/settings/library/settings-library.component.html","./src/app/pages/settings/logging/settings-logging.component.ts","./src/app/pages/settings/logging/settings-logging.component.html","./src/app/pages/settings/namemapping/settings-namemapping.component.ts","./src/app/pages/settings/namemapping/settings-namemapping.component.html","./src/app/pages/settings/notification/settings-notification.component.ts","./src/app/pages/settings/notification/settings-notification.component.html","./src/app/pages/settings/postprocessing/settings-postprocessing.component.ts","./src/app/pages/settings/postprocessing/settings-postprocessing.component.html","./src/app/pages/settings/settings.routes.ts","./src/app/pages/settings/skipmapping/settings-skipmapping.component.ts","./src/app/pages/settings/skipmapping/settings-skipmapping.component.html","./src/app/pages/settings/subliminal/settings-subliminal.component.ts","./src/app/pages/settings/subliminal/settings-subliminal.component.html","./src/app/pages/settings/webserver/settings-webserver.component.ts","./src/app/pages/settings/webserver/settings-webserver.component.html","./src/app/services/api/filesystem.service.ts","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/primeng/fesm2022/primeng-listbox.mjs","./node_modules/primeng/fesm2022/primeng-message.mjs"],"sourcesContent":["import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, ElementRef, EventEmitter, inject, Input, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\r\nimport { SharedModule } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { TableModule } from 'primeng/table';\r\nimport { catchError, debounceTime, mergeMap, of } from 'rxjs';\r\nimport { appSettings } from '../../app-settings.service';\r\nimport { FileBrowserFile, FileBrowserFileType, FileBrowserResult } from '../../models/filebrowser';\r\nimport { FileSystemService } from '../../services/api/filesystem.service';\r\nimport { joinPaths, splitPathInChunks } from '../../utils/path-utils';\r\n\r\n@Component({\r\n  selector: 'app-file-browser',\r\n  templateUrl: './file-browser.component.html',\r\n  styleUrls: ['./file-browser.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, DialogModule, TableModule, ButtonModule, SharedModule, InputTextModule]\r\n})\r\nexport class FileBrowserComponent implements OnInit {\r\n\r\n  @ViewChildren('rowElement')\r\n  rowElements: QueryList<ElementRef<HTMLTableRowElement>>;\r\n\r\n  @Input()\r\n  visible = false;\r\n\r\n  @Output()\r\n  visibleChange = new EventEmitter<boolean>(); // Setup 2-way binding [(visible)]=\"...\"\r\n\r\n  @Input()\r\n  path = ''; // no path by default, if specified, the file browser will start to browse on this path\r\n\r\n  @Output()\r\n  pathChange = new EventEmitter<string>(); // Setup 2-way binding [(path)]=\"...\"\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  fileBrowserFiles: FileBrowserFile[];\r\n  selectedFile: FileBrowserFile;\r\n  //selectedFilePath: string;\r\n  selectedFilePath: UntypedFormControl;\r\n\r\n  private readonly FOLDER_UP = '...';\r\n\r\n  private fileBrowserResult: FileBrowserResult;\r\n  private fileBrowserPath: string;\r\n  private includeFiles = true;\r\n  private includeFolders = true;\r\n\r\n  private fileSystemService = inject(FileSystemService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    // In folder mode we don't want to select files, so do not include them\r\n    if (this.folderMode) {\r\n      this.includeFiles = false;\r\n    }\r\n    // Create and subscribe for selected file path changes\r\n    // Use debounceTime to prevent too much calls to backend while typing\r\n    // Use mergeMap to handle fast changes by typing in text field\r\n    // Proper error catching to make sure the subscribe does not break on error (f.e. when invalid path is typed)\r\n    this.selectedFilePath = new UntypedFormControl(this.path);\r\n    this.selectedFilePath.valueChanges.pipe(\r\n      debounceTime(500),\r\n      mergeMap((path) => this.fileSystemService.browse(path, this.includeFiles, this.includeFolders)),\r\n      catchError(() => of(null)),\r\n      takeUntilDestroyed(this.destroyRef)\r\n    ).subscribe({\r\n      next: (result) => this.loadFileBrowserResult(result)\r\n    });\r\n    // Trigger initial browse\r\n    this.fileSystemService.browse(this.path, this.includeFiles, this.includeFolders).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => this.loadFileBrowserResult(result)\r\n    });\r\n  }\r\n\r\n  select(): void {\r\n    // Handle selection of file or folder\r\n    if (this.selectedFile.type === FileBrowserFileType.FOLDER) {\r\n      let folder = this.selectedFile.name;\r\n      if (folder === this.FOLDER_UP) {\r\n        const pathInChunks = splitPathInChunks(this.fileBrowserPath);\r\n        const parentFolderchunks = pathInChunks.slice(0, -1); // get parent folder path in chunks\r\n        // On Windows, if parent chunk is a drive letter (without \\) we clear the path to get the root path\r\n        if (parentFolderchunks.length === 1 && parentFolderchunks[0].match(/[A-Z]+:/)) {\r\n          folder = '';\r\n        } else {\r\n          // All other cases, join chunks together for parent path\r\n          folder = joinPaths(...parentFolderchunks);\r\n        }\r\n      } else {\r\n        folder = this.getFilePath(folder); // get complete path of the folder\r\n      }\r\n      this.selectedFilePath.setValue(folder);\r\n    } else {\r\n      this.selectedFilePath.setValue(this.getFilePath(this.selectedFile.name));\r\n    }\r\n  }\r\n\r\n  isFile(type: FileBrowserFileType): boolean {\r\n    return FileBrowserFileType.FILE === type;\r\n  }\r\n\r\n  isFolder(type: FileBrowserFileType): boolean {\r\n    return FileBrowserFileType.FOLDER === type;\r\n  }\r\n\r\n  isFolderUp(name: string): boolean {\r\n    return name === this.FOLDER_UP;\r\n  }\r\n\r\n  selectFile(): void {\r\n    this.pathChange.emit(this.selectedFilePath.value);\r\n    this.close();\r\n  }\r\n\r\n  close(): void {\r\n    this.visibleChange.emit(false);\r\n  }\r\n\r\n  private loadFileBrowserResult(fileBrowserResult: FileBrowserResult): void {\r\n    // Check if present as the result can be null after an catch of an error in the api call\r\n    if (fileBrowserResult) {\r\n      // Set browser result\r\n      this.fileBrowserResult = fileBrowserResult;\r\n      // Set filebrowser path\r\n      this.fileBrowserPath = this.fileBrowserResult.path;\r\n      // Determine previously selected file name\r\n      const selectedFileName = this.getSelectedFileName(this.selectedFilePath.value, this.fileBrowserPath);\r\n      // Build browser files\r\n      this.fileBrowserFiles = this.getFileBrowserFiles(this.fileBrowserResult, selectedFileName);\r\n      // Insert folder up at beginning when not at root level (empty on Windows, / on unix)\r\n      if (this.fileBrowserPath !== '' && this.fileBrowserPath !== '/') {\r\n        this.fileBrowserFiles.unshift(new FileBrowserFile(FileBrowserFileType.FOLDER, this.FOLDER_UP));\r\n      }\r\n      // scroll to previously selected file name\r\n      this.scrollToSelectedFileName(selectedFileName);\r\n    }\r\n  }\r\n\r\n  private getSelectedFileName(selectedFilePath: string, fileBrowserPath: string): string {\r\n    let selectedFileName = null;\r\n    if (selectedFilePath && fileBrowserPath) {\r\n      // The selected filename is the extra part after stripping the file browser path (which is always a folder) from the selected file path\r\n      selectedFileName = joinPaths(...splitPathInChunks(selectedFilePath).filter((part) => !splitPathInChunks(fileBrowserPath).includes(part)));\r\n    } else if (selectedFilePath) {\r\n      // If file browser path is empty, the selecte file path is the selected filename\r\n      selectedFileName = selectedFilePath;\r\n    }\r\n    return selectedFileName;\r\n  }\r\n\r\n  private getFileBrowserFiles(fileBrowserResult: FileBrowserResult, selectedFileName: string): FileBrowserFile[] {\r\n    const files: FileBrowserFile[] = [];\r\n    this.selectedFile = null;\r\n    // Add folders\r\n    fileBrowserResult.folders.forEach((folder) => files.push(new FileBrowserFile(FileBrowserFileType.FOLDER, folder)));\r\n    // Add files\r\n    fileBrowserResult.files.forEach((file) => {\r\n      const fileBrowserFile = new FileBrowserFile(FileBrowserFileType.FILE, file);\r\n      files.push(fileBrowserFile);\r\n      // If the file is the selected file, mark it as selected\r\n      if (file === selectedFileName) {\r\n        this.selectedFile = fileBrowserFile;\r\n      }\r\n    });\r\n    return files;\r\n  }\r\n\r\n  private scrollToSelectedFileName(selectedFileName: string): void {\r\n    // Find the selected file name (if available) in the rows and scroll to it\r\n    if (selectedFileName) {\r\n      setTimeout(() => {\r\n        // Find element based on data-id attribute\r\n        const row = this.rowElements.find((r) => r.nativeElement.getAttribute('data-id') === selectedFileName);\r\n        if (row) {\r\n          row.nativeElement.scrollIntoView({ inline: 'start', block: 'start' });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private getFilePath(path: string): string {\r\n    let fileBrowserPath = this.fileBrowserPath;\r\n    if (fileBrowserPath.endsWith(appSettings.pathSeparator)) {\r\n      // Make sure not to end up with double path separators, so remove trailing path separator if available\r\n      fileBrowserPath = fileBrowserPath.slice(0, -1);\r\n    }\r\n    return fileBrowserPath ? joinPaths(fileBrowserPath, path) : path;\r\n  }\r\n}\r\n","<!-- File browser dialog -->\r\n<p-dialog [(visible)]=\"visible\"\r\n          [modal]=\"true\"\r\n          [closable]=\"false\"\r\n          [resizable]=\"false\"\r\n          header=\"File browser\"\r\n          styleClass=\"dialog-file-browser\">\r\n  <!-- Selection -->\r\n  <p-table [value]=\"fileBrowserFiles\"\r\n           [(selection)]=\"selectedFile\"\r\n           [scrollable]=\"true\"\r\n           (onRowSelect)=\"select()\"\r\n           selectionMode=\"single\"\r\n           scrollHeight=\"50vh\"\r\n           styleClass=\"p-datatable-sm p-datatable-striped\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"caption w-100\">\r\n        <input type=\"text\" pInputText [formControl]=\"selectedFilePath\" class=\"p-inputtext-sm w-100\" placeholder=\"Select or type path\">\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th class=\"col-type\">Type</th>\r\n        <th class=\"col-name\">Name</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-file>\r\n      <tr #rowElement [attr.data-id]=\"file.name\" [pSelectableRow]=\"file\">\r\n        <td class=\"col-type\">\r\n          <i *ngIf=\"isFolder(file.type) && isFolderUp(file.name)\" class=\"fa fa-level-up\" aria-hidden=\"true\" title=\"File\"></i>\r\n          <i *ngIf=\"isFolder(file.type) && !isFolderUp(file.name)\" class=\"fa fa-folder-o\" aria-hidden=\"true\" title=\"Folder\"></i>\r\n          <i *ngIf=\"isFile(file.type)\" class=\"fa fa-file-o\" aria-hidden=\"true\" title=\"File\"></i>\r\n        </td>\r\n        <td class=\"col-name\">{{file.name}}</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <!-- Buttons -->\r\n  <ng-template pTemplate=\"footer\">\r\n    <div class=\"btn-group\">\r\n      <p-button icon=\"pi pi-times\" label=\"Cancel\" styleClass=\"p-button p-button-secondary\" (click)=\"close()\"></p-button>\r\n      <p-button icon=\"pi pi-check\" label=\"Ok\" styleClass=\"p-button mr-0\" (click)=\"selectFile()\"></p-button>\r\n    </div>\r\n  </ng-template>\r\n</p-dialog>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-dropdown',\r\n  templateUrl: './input-dropdown.component.html',\r\n  styleUrls: ['./input-dropdown.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputDropdownComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgClass, FormsModule, ReactiveFormsModule, DropdownModule]\r\n})\r\nexport class InputDropdownComponent extends InputComponent {\r\n\r\n  @Input()\r\n  options: SelectItem[];\r\n\r\n  override writeValue(obj: any): void {\r\n    super.writeValue(obj);\r\n    this.changeDetectorRef.detectChanges(); // p-dropdown makes changes to the input, so detect changes again to prevent ExpressionChangedAfterItHasBeenCheckedError\r\n  }\r\n\r\n  onDropDownChange(event: DropdownChangeEvent): void {\r\n    this.changeEvent.emit(event.originalEvent);\r\n  }\r\n}\r\n","<!-- Dropdown -->\r\n<p-dropdown [inputId]=\"id || formControlName\"\r\n            [formControl]=\"control\"\r\n            [options]=\"options\"\r\n            [ngClass]=\"validationClass\"\r\n            (onFocus)=\"onFocus($event)\"\r\n            (onChange)=\"onDropDownChange($event)\"\r\n            (onBlur)=\"onBlur($event)\"\r\n            styleClass=\"w-100\">\r\n</p-dropdown>\r\n","import { NgClass, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileBrowserComponent } from '../../file-browser/file-browser.component';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-file-browser',\r\n  templateUrl: './input-file-browser.component.html',\r\n  styleUrls: ['./input-file-browser.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputFileBrowserComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, ButtonModule, FileBrowserComponent]\r\n})\r\nexport class InputFileBrowserComponent extends InputComponent {\r\n\r\n  @Input()\r\n  path = ''; // no path by default, if specified, the file browser will always start to browse on this path\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  @Input()\r\n  placeholder = '';\r\n\r\n  showFileBrowser = false;\r\n  browserPath = '';\r\n\r\n  openFileBrowser(): void {\r\n    this.browserPath = this.path || this.control.value || ''; // use fixed path, path from input field or empty if not specified\r\n    this.showFileBrowser = true;\r\n  }\r\n\r\n  setFilePath(filePath: string): void {\r\n    this.control.setValue(filePath);\r\n  }\r\n}\r\n","<!-- Input text -->\r\n<div class=\"p-inputgroup\">\r\n  <input pInputText\r\n         type=\"text\"\r\n         [id]=\"id || formControlName\"\r\n         [formControl]=\"control\"\r\n         [placeholder]=\"placeholder\"\r\n         [ngClass]=\"validationClass\"\r\n         (focus)=\"onFocus($event)\"\r\n         (keydown)=\"onKeyDown($event)\"\r\n         (keyup)=\"onKeyUp($event)\"\r\n         (change)=\"onChange($event)\"\r\n         (blur)=\"onBlur($event)\"\r\n         class=\"w-100\">\r\n  <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser()\"></p-button>\r\n</div>\r\n<!-- File browser -->\r\n<app-file-browser *ngIf=\"showFileBrowser\"\r\n                  [(visible)]=\"showFileBrowser\"\r\n                  [path]=\"browserPath\"\r\n                  [folderMode]=\"folderMode\"\r\n                  (pathChange)=\"setFilePath($event)\">\r\n</app-file-browser>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileBrowserComponent } from '../../file-browser/file-browser.component';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-multi-file-browser',\r\n  templateUrl: './input-multi-file-browser.component.html',\r\n  styleUrls: ['./input-multi-file-browser.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputMultiFileBrowserComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, ButtonModule, FileBrowserComponent]\r\n})\r\nexport class InputMultiFileBrowserComponent extends InputComponent {\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  showFileBrowser = false;\r\n  addButtonDisabled = true;\r\n  browserPath = '';\r\n  browserIndex = -1;\r\n  newValue: string;\r\n\r\n  get values(): string[] {\r\n    return this.control ? this.control.value : [];\r\n  }\r\n\r\n  // Required to only update single value inside array (https://angular.io/api/core/TrackByFunction) and do not refresh complete array\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  trackValueByIndex(index: number, value: string): number {\r\n    return index;\r\n  }\r\n\r\n  onValueKeyup(event: KeyboardEvent, originalValue: string): void {\r\n    // Replace original value with change value\r\n    const changedValue = (event.target as HTMLInputElement).value;\r\n    if (changedValue && changedValue.trim()) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  removeValue(value: string): void {\r\n    // Remove value\r\n    this.control.setValue(this.values.filter((val) => val !== value));\r\n  }\r\n\r\n  onNewValueKeyup(event: KeyboardEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    if (value && value.trim()) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  addNewValue(): void {\r\n    // Add new value\r\n    if (this.newValue) {\r\n      if (!this.values.includes(this.newValue.trim())) {\r\n        this.control.setValue(this.values.concat(this.newValue.trim()));\r\n      }\r\n      this.newValue = ''; // clear new value\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  openFileBrowser(path: string, index: number): void {\r\n    this.browserPath = path || '';\r\n    this.browserIndex = index;\r\n    this.showFileBrowser = true;\r\n  }\r\n\r\n  setFilePath(filePath: string): void {\r\n    if (this.browserIndex >= 0) {\r\n      this.values[this.browserIndex] = filePath.trim();\r\n    } else {\r\n      this.values.push(filePath.trim());\r\n    }\r\n    this.control.setValue(this.values);\r\n  }\r\n}\r\n","<!-- Input multi text -->\r\n<div class=\"input-multi-text\">\r\n  <!-- Existing fields -->\r\n  <div class=\"p-inputgroup\" *ngFor=\"let value of values; let i=index; trackBy:trackValueByIndex\">\r\n    <div class=\"p-inputgroup\">\r\n      <input type=\"text\" pInputText [id]=\"(id || formControlName) + i\" [value]=\"value\" (keyup)=\"onValueKeyup($event, value)\">\r\n      <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser(value, i)\"></p-button>\r\n      <p-button icon=\"pi pi-times\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"removeValue(value)\"></p-button>\r\n    </div>\r\n  </div>\r\n  <!-- New field -->\r\n  <div class=\"p-inputgroup\">\r\n    <div class=\"p-inputgroup\">\r\n      <input type=\"text\" pInputText [id]=\"(id || formControlName) + 'New'\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (keyup)=\"onNewValueKeyup($event)\" placeholder=\"New value\">\r\n      <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser(newValue, -1)\"></p-button>\r\n      <p-button icon=\"pi pi-plus\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"addNewValue()\" [disabled]=\"addButtonDisabled\"></p-button>\r\n    </div>\r\n  </div>\r\n  <!-- File browser -->\r\n  <app-file-browser *ngIf=\"showFileBrowser\"\r\n                    [(visible)]=\"showFileBrowser\"\r\n                    [path]=\"browserPath\"\r\n                    [folderMode]=\"folderMode\"\r\n                    (pathChange)=\"setFilePath($event)\">\r\n  </app-file-browser>\r\n  <!-- Hidden input -->\r\n  <input type=\"hidden\" [id]=\"id || formControlName\" [formControl]=\"control\">\r\n</div>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-multi-text',\r\n  templateUrl: './input-multi-text.component.html',\r\n  styleUrls: ['./input-multi-text.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputMultiTextComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, DropdownModule, ButtonModule]\r\n})\r\nexport class InputMultiTextComponent extends InputComponent {\r\n\r\n  @Input()\r\n  options: SelectItem[]; // optional list of options to select from\r\n\r\n  newValue: string;\r\n\r\n  addButtonDisabled = true;\r\n\r\n  get values(): string[] {\r\n    return this.control ? this.control.value : [];\r\n  }\r\n\r\n  // Required to only update single value inside array (https://angular.io/api/core/TrackByFunction) and do not refresh complete array\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  trackValueByIndex(index: number, value: string): number {\r\n    return index;\r\n  }\r\n\r\n  onValueChange(event: DropdownChangeEvent, originalValue: string): void { // event model exposed by p-dropdown onchange\r\n    // Replace original value with change value\r\n    const changedValue = event.value;\r\n    if (changedValue) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  onValueKeyup(event: KeyboardEvent, originalValue: string): void {\r\n    // Replace original value with change value\r\n    const changedValue = (event.target as HTMLInputElement).value;\r\n    if (changedValue && changedValue.trim()) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  removeValue(value: string): void {\r\n    // Remove value\r\n    this.control.setValue(this.values.filter((val) => val !== value));\r\n  }\r\n\r\n  onNewValueChange(event: DropdownChangeEvent): void { // event model exposed by p-dropdown onchange\r\n    if (event.value) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  onNewValueKeyup(event: KeyboardEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    if (value && value.trim()) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  addNewValue(): void {\r\n    // Add new value\r\n    if (this.newValue) {\r\n      if (!this.values.includes(this.newValue.trim())) {\r\n        this.control.setValue(this.values.concat(this.newValue.trim()));\r\n      }\r\n      this.newValue = ''; // clear new value\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n}\r\n","<!-- Input multi text -->\r\n<div class=\"input-multi-text\">\r\n  <!-- Existing fields -->\r\n  <div class=\"p-inputgroup\" *ngFor=\"let value of values; let i=index; trackBy:trackValueByIndex\">\r\n    <p-dropdown *ngIf=\"options\" [inputId]=\"(id || formControlName) + i\" [options]=\"options\" [ngModel]=\"value\" (onChange)=\"onValueChange($event, value)\" styleClass=\"w-100\"></p-dropdown>\r\n    <input *ngIf=\"!options\" type=\"text\" pInputText [id]=\"(id || formControlName) + i\" [value]=\"value\" (keyup)=\"onValueKeyup($event, value)\">\r\n    <p-button icon=\"pi pi-times\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"removeValue(value)\"></p-button>\r\n  </div>\r\n  <!-- New field -->\r\n  <div class=\"p-inputgroup\">\r\n    <p-dropdown *ngIf=\"options\" [inputId]=\"(id || formControlName) + 'New'\" [options]=\"options\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (onChange)=\"onNewValueChange($event)\" styleClass=\"w-100\"></p-dropdown>\r\n    <input *ngIf=\"!options\" type=\"text\" pInputText [id]=\"(id || formControlName) + 'New'\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (keyup)=\"onNewValueKeyup($event)\" placeholder=\"New value\">\r\n    <p-button icon=\"pi pi-plus\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"addNewValue()\" [disabled]=\"addButtonDisabled\"></p-button>\r\n  </div>\r\n  <!-- Hidden input -->\r\n  <input type=\"hidden\" [id]=\"id || formControlName\" [formControl]=\"control\">\r\n</div>\r\n","export class FileBrowserResult {\r\n  files: string[];\r\n  folders: string[];\r\n  path: string;\r\n}\r\n\r\nexport enum FileBrowserFileType {\r\n  FILE = 'file',\r\n  FOLDER = 'folder'\r\n}\r\n\r\nexport class FileBrowserFile {\r\n  type: FileBrowserFileType;\r\n  name: string;\r\n\r\n  constructor(type: FileBrowserFileType, name: string) {\r\n    this.type = type;\r\n    this.name = name;\r\n  }\r\n}\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputFileBrowserComponent } from '../../../components/input/file-browser/input-file-browser.component';\r\nimport { InputMultiFileBrowserComponent } from '../../../components/input/multi-file-browser/input-multi-file-browser.component';\r\nimport { InputMultiTextComponent } from '../../../components/input/multi-text/input-multi-text.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { GeneralSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\nimport { FormValidators } from '../../../utils/form-validators';\r\n\r\n@Component({\r\n  selector: 'app-settings-general',\r\n  templateUrl: './settings-general.component.html',\r\n  styleUrls: ['./settings-general.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, PanelModule, FormsModule, ReactiveFormsModule, ButtonModule, IconDropdownComponent, InputMultiFileBrowserComponent, InputDropdownComponent, InputMultiTextComponent, InputNumberComponent, InputFileBrowserComponent]\r\n})\r\nexport class SettingsGeneralComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  scanDiskIntervalDefault: number;\r\n  checkSubIntervalDefault: number;\r\n  checkSubDeadlineDefault: number;\r\n  checkSubDeltaDefault: number;\r\n  checkVersionIntervalDefault: number;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  languages: SelectItem[];\r\n  timestampFormats: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.initDefaults();\r\n    this.buildSelectItems();\r\n    this.settingsService.getGeneralSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (generalSettings) => {\r\n        this.buildForm(generalSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the general settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateGeneralSettings(this.getGeneralSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('General settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the general settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  showFfmpegPath(): boolean {\r\n    // FFMPEG is required for manualSubSync\r\n    return FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSubSync');\r\n  }\r\n\r\n  private initDefaults(): void {\r\n    this.scanDiskIntervalDefault = appSettings.scanDiskIntervalDefault;\r\n    this.checkSubIntervalDefault = appSettings.checkSubIntervalDefault;\r\n    this.checkSubDeadlineDefault = appSettings.checkSubDeadlineDefault;\r\n    this.checkSubDeltaDefault = appSettings.checkSubDeltaDefault;\r\n    this.checkVersionIntervalDefault = appSettings.checkVersionIntervalDefault;\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Languages\r\n    this.languages = [];\r\n    this.languages.push({ label: 'Select a language', value: '' });\r\n    appSettings.languages.forEach((language) => this.languages.push({ label: language.name, value: language.code }));\r\n    // Timestamp formats (python strftime() formats)\r\n    this.timestampFormats = [];\r\n    this.timestampFormats.push({ label: 'YYYY-MM-DD HH:MM:SS', value: '%Y-%m-%d %H:%M:%S' });\r\n    this.timestampFormats.push({ label: 'MM-DD-YYYY HH:MM:SS', value: '%m-%d-%Y %H:%M:%S' });\r\n    this.timestampFormats.push({ label: 'DD-MM-YYYY HH:MM:SS', value: '%d-%m-%Y %H:%M:%S' });\r\n  }\r\n\r\n  private buildForm(generalSettings: GeneralSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      videoPaths: [generalSettings.videoPaths || [], [Validators.required, FormValidators.notEmpty]],\r\n      defaultLanguage: [generalSettings.defaultLanguage, [Validators.required]],\r\n      defaultLanguageSuffix: [generalSettings.defaultLanguageSuffix, [Validators.required]],\r\n      additionalLanguages: [generalSettings.additionalLanguages || [], []],\r\n      manualSearchWithScoring: [generalSettings.manualSearchWithScoring, [Validators.required]],\r\n      scanDiskInterval: [generalSettings.scanDiskInterval, [Validators.required]],\r\n      scanDiskAtStartup: [generalSettings.scanDiskAtStartup, [Validators.required]],\r\n      checkSubInterval: [generalSettings.checkSubInterval, [Validators.required]],\r\n      checkSubAtStartup: [generalSettings.checkSubAtStartup, [Validators.required]],\r\n      checkSubDeadline: [generalSettings.checkSubDeadline, [Validators.required]],\r\n      checkSubDelta: [generalSettings.checkSubDelta, [Validators.required]],\r\n      checkVersionInterval: [generalSettings.checkVersionInterval, [Validators.required]],\r\n      checkVersionAtStartup: [generalSettings.checkVersionAtStartup, [Validators.required]],\r\n      checkVersionAutoUpdate: [generalSettings.checkVersionAutoUpdate, [Validators.required]],\r\n      scanEmbeddedSubs: [generalSettings.scanEmbeddedSubs, [Validators.required]],\r\n      scanHardcodedSubs: [generalSettings.scanHardcodedSubs, [Validators.required]],\r\n      skipHiddenDirs: [generalSettings.skipHiddenDirs, [Validators.required]],\r\n      detectInvalidSubLanguage: [generalSettings.detectInvalidSubLanguage, [Validators.required]],\r\n      detectedLanguageProbability: [generalSettings.detectedLanguageProbability * 100, [Validators.required]], // as percentage\r\n      manualSubSync: [generalSettings.manualSubSync, [Validators.required]],\r\n      ffmpegPath: [generalSettings.ffmpegPath, []],\r\n      minVideoFileSize: [generalSettings.minVideoFileSize, [Validators.required]],\r\n      maxDbResults: [generalSettings.maxDbResults, [Validators.required]],\r\n      timestampFormat: [generalSettings.timestampFormat, [Validators.required]]\r\n    }, { validator: this.globalFormValidator });\r\n  }\r\n\r\n  private globalFormValidator(formGroup: UntypedFormGroup): ValidationErrors | null {\r\n    // Return error ffmpegPath is not filled in when manualSubSync is enabled\r\n    const error: ValidationErrors = { ffmpegPathRequired: true };\r\n    const ffmpegPath = FormUtils.getFormControlValue<string>(formGroup, 'ffmpegPath');\r\n    if (FormUtils.getFormControlValue<boolean>(formGroup, 'manualSubSync') && (!ffmpegPath || !ffmpegPath.trim())) {\r\n      FormUtils.addFormControlValidationErrors(formGroup.controls['ffmpegPath'], error);\r\n      FormUtils.markFormControlFieldsAsDirty(formGroup);\r\n      return error;\r\n    }\r\n    FormUtils.clearFormControlValidationErrors(formGroup.controls['ffmpegPath'], error);\r\n    return null;\r\n  }\r\n\r\n  private getGeneralSettings(): GeneralSettings {\r\n    const settings = new GeneralSettings();\r\n    settings.videoPaths = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'videoPaths');\r\n    settings.defaultLanguage = FormUtils.getFormControlValue<string>(this.settingsForm, 'defaultLanguage');\r\n    settings.defaultLanguageSuffix = FormUtils.getFormControlValue<string>(this.settingsForm, 'defaultLanguageSuffix');\r\n    settings.additionalLanguages = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'additionalLanguages');\r\n    settings.manualSearchWithScoring = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSearchWithScoring');\r\n    settings.scanDiskInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'scanDiskInterval');\r\n    settings.scanDiskAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanDiskAtStartup');\r\n    settings.checkSubInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubInterval');\r\n    settings.checkSubAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkSubAtStartup');\r\n    settings.checkSubDeadline = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubDeadline');\r\n    settings.checkSubDelta = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubDelta');\r\n    settings.checkVersionInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkVersionInterval');\r\n    settings.checkVersionAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkVersionAtStartup');\r\n    settings.checkVersionAutoUpdate = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkVersionAutoUpdate');\r\n    settings.scanEmbeddedSubs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanEmbeddedSubs');\r\n    settings.scanHardcodedSubs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanHardcodedSubs');\r\n    settings.skipHiddenDirs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'skipHiddenDirs');\r\n    settings.detectInvalidSubLanguage = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'detectInvalidSubLanguage');\r\n    settings.detectedLanguageProbability = FormUtils.getFormControlValue<number>(this.settingsForm, 'detectedLanguageProbability') / 100; // percentage as decimal number\r\n    settings.manualSubSync = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSubSync');\r\n    settings.ffmpegPath = FormUtils.getFormControlValue<string>(this.settingsForm, 'ffmpegPath');\r\n    settings.minVideoFileSize = FormUtils.getFormControlValue<number>(this.settingsForm, 'minVideoFileSize');\r\n    settings.maxDbResults = FormUtils.getFormControlValue<number>(this.settingsForm, 'maxDbResults');\r\n    settings.timestampFormat = FormUtils.getFormControlValue<string>(this.settingsForm, 'timestampFormat');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"General settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Video paths -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"videoPaths\" class=\"label\">Video paths</label>\r\n          <app-icon-dropdown>\r\n            <li>The folders where your videos are located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-file-browser formControlName=\"videoPaths\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-multi-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Default language -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"defaultLanguage\" class=\"label\">Default language</label>\r\n          <app-icon-dropdown>\r\n            <li>The default subtitle language.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"defaultLanguage\" [options]=\"languages\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Default language suffix -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"defaultLanguageSuffix\" class=\"label\">Default language suffix</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the default subtitle will be extended with the language code (f.e. showname.en.srt).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"defaultLanguageSuffix\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Additional languages -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"additionalLanguages\" class=\"label\">Additional languages</label>\r\n          <app-icon-dropdown>\r\n            <li>The addditional subtitle languages in alpha2 or ietf format.</li>\r\n            <li>If additional languages are provided, subtitles will be extended with the language code (f.e. showname.en.srt).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"additionalLanguages\" [options]=\"languages\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Manual search with scoring -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualSearchWithScoring\" class=\"label\">Manual search with scoring</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, only subtitles matching the minimum default score will be returned.</li>\r\n            <li>When disabled, all found subtitles will be returned.</li>\r\n            <li>REMARK: Disable it at your own risk because it might return even unrelated subtitles!</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualSearchWithScoring\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan disk interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanDiskInterval\" class=\"label\">Disk scan interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Disk scan interval of the ScanDisk thread. It scans the disk for missing subtitle files.</li>\r\n            <li>Cannot be set lower then {{scanDiskIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"scanDiskInterval\" [min]=\"scanDiskIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Scan disk at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanDiskAtStartup\" class=\"label\">Disk scan at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the ScanDisk thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the disk scan interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanDiskAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubInterval\" class=\"label\">Subtitle check interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check interval of the CheckSub thread. It checks if there is a match on the configured subliminal providers.</li>\r\n            <li>Cannot be set lower then {{checkSubIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubInterval\" [min]=\"checkSubIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubAtStartup\" class=\"label\">Subtitle check at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the CheckSub thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the subtitle check interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkSubAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub deadline -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubDeadline\" class=\"label\">Subtitle check deadline</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check deadline in weeks for checking subtitles on daily basis.</li>\r\n            <li>After this deadline, the daily search is replaced by a search every X week(s), defined by the parameter below.</li>\r\n            <li>Cannot be set lower than {{checkSubDeadlineDefault}} week(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubDeadline\" [min]=\"checkSubDeadlineDefault\" suffix=\" week(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub delta -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubDelta\" class=\"label\">Subtitle check delta</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check delta in days for checking subtitles after deadline.</li>\r\n            <li>After the deadline (parameter above) is passed, a subtitle is search every X day(s), defined by this parameter.</li>\r\n            <li>Cannot be set lower than {{checkSubDeltaDefault}} day(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubDelta\" [min]=\"checkSubDeltaDefault\" suffix=\" day(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check version interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionInterval\" class=\"label\">Version check interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Version check interval of the CheckVersion thread. It checks if there is a new version available.</li>\r\n            <li> Cannot be set lower then {{checkVersionIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkVersionInterval\" [min]=\"checkVersionIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check version at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionAtStartup\" class=\"label\">Version check at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the CheckVersion thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the version check interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkVersionAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check version auto update -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionAutoUpdate\" class=\"label\">Version check auto update</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the version check will also try to auto update the system.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkVersionAutoUpdate\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan embedded subs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanEmbeddedSubs\" class=\"label\">Scan for embedded subtitles</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the video files will be scanned for embedded subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanEmbeddedSubs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan hardcoded subs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanHardcodedSubs\" class=\"label\">Scan for hardcoded subtitles</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the video files will be scanned for hardcoded subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanHardcodedSubs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Skip hidden dirs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipHiddenDirs\" class=\"label\">Skip hidden directories</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also hidden directories (directories that start with a dot, f.e. .config) are scanned.</li>\r\n            <li>REMARK: Doesn't work for Windows style hidden directories.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"skipHiddenDirs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Detect invalid sub language -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"detectInvalidSubLanguage\" class=\"label\">Detect invalid subtitle</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the language of a subtitle, without a language suffix, will be detected.</li>\r\n            <li>If the language does not match the default language, the subtitle will be deleted from the system in order to search a new one.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"detectInvalidSubLanguage\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Detected language probabibility -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"detectedLanguageProbability\" class=\"label\">Language detection probability</label>\r\n          <app-icon-dropdown>\r\n            <li>The minimum required probability for the invalid language detection functionality.</li>\r\n            <li>The probability must be at least this value before the language is accepted as the detected language of the subtitle.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"detectedLanguageProbability\" [min]=\"1\" [max]=\"100\" suffix=\" %\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Manual sub sync -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualSubSync\" class=\"label\">Manual subtitle synchronization</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the manual search will have the option to synchronize a subtitle.</li>\r\n            <li>REMARK: This requires ffmpeg (https://www.ffmpeg.org/download.html) to be installed on your system.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualSubSync\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- FFMPEG path -->\r\n      <div class=\"row form-row\" *ngIf=\"showFfmpegPath()\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"ffmpegPath\" class=\"label\">FFMPEG path</label>\r\n          <app-icon-dropdown>\r\n            <li>The directory where the FFMPEG executable is located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"ffmpegPath\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!--Min video file size -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"minVideoFileSize\" class=\"label\">Min video file size</label>\r\n          <app-icon-dropdown>\r\n            <li>The mininum file size in MB that a video must be before it's including in the scanning.</li>\r\n            <li>Files with a size lower than this value will be ignored in the scanning.</li>\r\n            <li>Use 0 to disable this limit.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"minVideoFileSize\" [min]=\"0\" suffix=\" MB\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!--Max db results -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"maxDbResults\" class=\"label\">Max db results</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum number of results returned from the database.</li>\r\n            <li>Use 0 to return all the results.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"maxDbResults\" mode=\"decimal\" [min]=\"0\" suffix=\" results\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Timestamp format -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"timestampFormat\" class=\"label\">Timestamp format</label>\r\n          <app-icon-dropdown>\r\n            <li>The format in which timestamps are displayed.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"timestampFormat\" [options]=\"timestampFormats\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputMultiFileBrowserComponent } from '../../../components/input/multi-file-browser/input-multi-file-browser.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { LibrarySettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-library',\r\n  templateUrl: './settings-library.component.html',\r\n  styleUrls: ['./settings-library.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputDropdownComponent, InputMultiFileBrowserComponent, InputNumberComponent]\r\n})\r\nexport class SettingsLibraryComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  scanLibraryIntervalDefault: number;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.initDefaults();\r\n    this.buildSelectItems();\r\n    this.settingsService.getLibrarySettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (librarySettings) => {\r\n        this.buildForm(librarySettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the library settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateLibrarySettings(this.getLibrarySettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Library settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the library settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private initDefaults(): void {\r\n    this.scanLibraryIntervalDefault = appSettings.scanLibraryIntervalDefault;\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(librarySettings: LibrarySettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      libraryMode: [librarySettings.libraryMode, [Validators.required]],\r\n      libraryPaths: [librarySettings.libraryPaths || [], []],\r\n      scanLibraryInterval: [librarySettings.scanLibraryInterval, [Validators.required]],\r\n      scanLibraryAtStartup: [librarySettings.scanLibraryAtStartup, [Validators.required]],\r\n      libraryEditMode: [librarySettings.libraryEditMode, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getLibrarySettings(): LibrarySettings {\r\n    const settings = new LibrarySettings();\r\n    settings.libraryMode = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'libraryMode');\r\n    settings.libraryPaths = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'libraryPaths');\r\n    settings.scanLibraryInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'scanLibraryInterval');\r\n    settings.scanLibraryAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanLibraryAtStartup');\r\n    settings.libraryEditMode = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'libraryEditMode');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Log settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Library mode -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryMode\" class=\"label\">Library mode</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a libraryscanner thread will be enabled to scan your complete library.</li>\r\n            <li>This will enable a new menu link 'Library' from which you can view your complete library.</li>\r\n            <li>ATTENTION: this may cause a very long disk scan if your library is very big!</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"libraryMode\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Library paths -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryPaths\" class=\"label\">Library paths</label>\r\n          <app-icon-dropdown>\r\n            <li>The folders where your show/movie libraries are located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-file-browser formControlName=\"libraryPaths\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-multi-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Scan library interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanLibraryInterval\" class=\"label\">Library scan interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Library scan interval of the ScanLibrary thread. It scans the complete library for generating an overview.</li>\r\n            <li>Cannot not be set lower then {{scanLibraryIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"scanLibraryInterval\" [min]=\"scanLibraryIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Scan library at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanLibraryAtStartup\" class=\"label\">Scan library at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the ScanLibrary thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the library scan interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanLibraryAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Library edit mode -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryEditMode\" class=\"label\">Library edit mode</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, edit functionality is enabled in the libraries.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"libraryEditMode\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { LogSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\nimport { FormValidators } from '../../../utils/form-validators';\r\n\r\n@Component({\r\n  selector: 'app-settings-logging',\r\n  templateUrl: './settings-logging.component.html',\r\n  styleUrls: ['./settings-logging.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputTextComponent, InputDropdownComponent, InputNumberComponent]\r\n})\r\nexport class SettingsLoggingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  logLevels: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getLogSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (logSettings) => {\r\n        this.buildForm(logSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the log settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateLogSettings(this.getLogSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Log settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the log settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Log levels (value corresponds to python log level)\r\n    this.logLevels = [];\r\n    this.logLevels.push({ label: 'Debug', value: 10 });\r\n    this.logLevels.push({ label: 'Info', value: 20 });\r\n    this.logLevels.push({ label: 'Warning', value: 30 });\r\n    this.logLevels.push({ label: 'Error', value: 40 });\r\n    this.logLevels.push({ label: 'Critical', value: 50 });\r\n  }\r\n\r\n  private buildForm(logSettings: LogSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      logFile: [logSettings.logFile, [Validators.required, FormValidators.notEmpty]],\r\n      logLevel: [logSettings.logLevel, [Validators.required]],\r\n      logNum: [logSettings.logNum, [Validators.required]],\r\n      logSize: [logSettings.logSize, [Validators.required]],\r\n      logHttpAccess: [logSettings.logHttpAccess, [Validators.required]],\r\n      logExternalLibs: [logSettings.logExternalLibs, [Validators.required]],\r\n      logDetailedFormat: [logSettings.logDetailedFormat, [Validators.required]],\r\n      logReversed: [logSettings.logReversed, [Validators.required]],\r\n      logLevelConsole: [logSettings.logLevelConsole, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getLogSettings(): LogSettings {\r\n    const settings = new LogSettings();\r\n    settings.logFile = FormUtils.getFormControlValue<string>(this.settingsForm, 'logFile');\r\n    settings.logLevel = FormUtils.getFormControlValue<number>(this.settingsForm, 'logLevel');\r\n    settings.logNum = FormUtils.getFormControlValue<number>(this.settingsForm, 'logNum');\r\n    settings.logSize = FormUtils.getFormControlValue<number>(this.settingsForm, 'logSize');\r\n    settings.logHttpAccess = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logHttpAccess');\r\n    settings.logExternalLibs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logExternalLibs');\r\n    settings.logDetailedFormat = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logDetailedFormat');\r\n    settings.logReversed = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logReversed');\r\n    settings.logLevelConsole = FormUtils.getFormControlValue<number>(this.settingsForm, 'logLevelConsole');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Log settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Log file -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logFile\" class=\"label\">Logfile name</label>\r\n          <app-icon-dropdown>\r\n            <li>The location and the name of the logfile.</li>\r\n            <li>When not set, AutoSubliminal.log will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"logFile\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Log level -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logLevel\" class=\"label\">Log level</label>\r\n          <app-icon-dropdown>\r\n            <li>The level of logging in the logfile.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logLevel\" [options]=\"logLevels\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log num -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logNum\" class=\"label\">Number of backup log files</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum number of backup log files.</li>\r\n            <li>Use 0 for no backup log files.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"logNum\" [min]=\"0\" suffix=\" file(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Log size -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logSize\" class=\"label\">Log size</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum size of the log file(s) in MB.</li>\r\n            <li>Use 0 for unlimited size.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"logSize\" [min]=\"0\" suffix=\" MB\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Log http access -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logHttpAccess\" class=\"label\">Log HTTP access</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also http access calls will be logged.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logHttpAccess\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log external libs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logExternalLibs\" class=\"label\">Log external libs</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also external libs will be logged.</li>\r\n            <li>This only works in combination with the 'Log detailed format' option.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logExternalLibs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log detailed format -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logDetailedFormat\" class=\"label\">Log detailed format</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the detailed log format will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logDetailedFormat\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log reversed -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logReversed\" class=\"label\">Log reversed</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the log output will be shown in reversed order (newest at the top) in the application.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logReversed\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log level console -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logLevelConsole\" class=\"label\">Console log level</label>\r\n          <app-icon-dropdown>\r\n            <li>The level of logging in the console output.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logLevelConsole\" [options]=\"logLevels\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputMultiTextComponent } from '../../../components/input/multi-text/input-multi-text.component';\r\nimport { NameMappingSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-namemapping',\r\n  templateUrl: './settings-namemapping.component.html',\r\n  styleUrls: ['./settings-namemapping.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, MessageModule, IconDropdownComponent, InputMultiTextComponent]\r\n})\r\nexport class SettingsNamemappingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.getNameMappingSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (nameMappingSettings) => {\r\n        this.buildForm(nameMappingSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the namemapping settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateNameMappingSettings(this.getNameMappingSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Namemapping settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the namemapping settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildForm(nameMappingSettings: NameMappingSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      showNameMapping: [nameMappingSettings.showNameMapping || [], []],\r\n      addic7edShowNameMapping: [nameMappingSettings.addic7edShowNameMapping || [], []],\r\n      alternativeShowNameMapping: [nameMappingSettings.alternativeShowNameMapping || [], []],\r\n      movieNameMapping: [nameMappingSettings.movieNameMapping || [], []],\r\n      alternativeMovieNameMapping: [nameMappingSettings.alternativeMovieNameMapping || [], []]\r\n    });\r\n  }\r\n\r\n  private getNameMappingSettings(): NameMappingSettings {\r\n    const settings = new NameMappingSettings();\r\n    settings.showNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'showNameMapping');\r\n    settings.addic7edShowNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'addic7edShowNameMapping');\r\n    settings.alternativeShowNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'alternativeShowNameMapping');\r\n    settings.movieNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'movieNameMapping');\r\n    settings.alternativeMovieNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'alternativeMovieNameMapping');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Namemapping settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Use the namemapping at own risk! Incorrect use of the namemapping may result in subtitles not being found!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showNameMapping\" class=\"label\">Name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local show name mapping to the TVDB ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = 12345</li>\r\n            <li>Show name 2 = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"showNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edShowNameMapping\" class=\"label\">Addic7ed name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local show name mapping to the Addic7ed ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = 12345</li>\r\n            <li>Show name 2 = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"addic7edShowNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Alternative show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"alternativeShowNameMapping\" class=\"label\">Alternative name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>List the alternative names of a show to increase subtitle matching.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = Show name alternative 1a,Show name alternative 1b</li>\r\n            <li>Show name 2 = Show name 2a</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"alternativeShowNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Movie name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"movieNameMapping\" class=\"label\">Name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local movie name mapping to the IMDB ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title (year) = 12345</li>\r\n            <li>Movie title 2 (year) = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"movieNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Alternative movie name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"alternativeMovieNameMapping\" class=\"label\">Alternative name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>List the alternative titles of a movie to increase subtitle matching.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title = Movie title alternative 1a,Movie title alternative 1b</li>\r\n            <li>Movie title 2 = Movie title 2a</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"alternativeMovieNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { NotificationSettings, TwitterRegistration } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-notification',\r\n  templateUrl: './settings-notification.component.html',\r\n  styleUrls: ['./settings-notification.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, DialogModule, InputTextModule, MessageModule, IconDropdownComponent, InputDropdownComponent, InputTextComponent, InputNumberComponent]\r\n})\r\nexport class SettingsNotificationComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  growlProwlPriorities: SelectItem[];\r\n\r\n  twitterRegistration: TwitterRegistration;\r\n  twitterRegistrationDialog = false;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getNotificationSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (notificationSettings) => {\r\n        this.buildForm(notificationSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the notification settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateNotificationSettings(this.getNotificationSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Notification settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the notification settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  test(notifierName: string): void {\r\n    this.settingsService.testNotifier(notifierName).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.messageService.showSuccessMessage(`Test ${notifierName} notification sent.`),\r\n      error: () => this.messageService.showErrorMessage(`Test ${notifierName} notification failed!`)\r\n    });\r\n  }\r\n\r\n  registerTwitter(): void {\r\n    this.settingsService.registerTwitter().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (twitterRegistration) => {\r\n        // Show dialog to finish the registration\r\n        this.twitterRegistration = twitterRegistration;\r\n        this.twitterRegistrationDialog = true;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Twitter registration failed!')\r\n    });\r\n  }\r\n\r\n  authorizeTwitter(): void {\r\n    this.settingsService.authorizeTwitter(this.twitterRegistration).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (twitterAuthorization) => {\r\n        // Update form with twitter key and secret\r\n        FormUtils.setFormControlValue(this.settingsForm, 'twitterKey', twitterAuthorization.twitterKey);\r\n        FormUtils.setFormControlValue(this.settingsForm, 'twitterSecret', twitterAuthorization.twitterSecret);\r\n        this.messageService.showSuccessMessage('Twitter registration successful. Please save and test Twitter.');\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Twitter authorization failed!')\r\n    });\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Growl/Prowl priorities\r\n    this.growlProwlPriorities = [];\r\n    this.growlProwlPriorities.push({ label: 'Very low', value: -2 });\r\n    this.growlProwlPriorities.push({ label: 'Moderate', value: -1 });\r\n    this.growlProwlPriorities.push({ label: 'Normal', value: 0 });\r\n    this.growlProwlPriorities.push({ label: 'High', value: 1 });\r\n    this.growlProwlPriorities.push({ label: 'Emergency', value: 2 });\r\n  }\r\n\r\n  private buildForm(notificationSettings: NotificationSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      notify: [notificationSettings.notify, [Validators.required]],\r\n      notifyMail: [notificationSettings.notifyMail, []],\r\n      mailServer: [notificationSettings.mailServer, []],\r\n      mailFromName: [notificationSettings.mailFromName, []],\r\n      mailFrom: [notificationSettings.mailFrom, []],\r\n      mailTo: [notificationSettings.mailTo, []],\r\n      mailUserName: [notificationSettings.mailUserName, []],\r\n      mailPassword: [notificationSettings.mailPassword, []],\r\n      mailSubject: [notificationSettings.mailSubject, []],\r\n      mailEncryption: [notificationSettings.mailEncryption, []],\r\n      mailAuthentication: [notificationSettings.mailAuthentication, []],\r\n      notifyTwitter: [notificationSettings.notifyTwitter, []],\r\n      twitterKey: [notificationSettings.twitterKey, []],\r\n      twitterSecret: [notificationSettings.twitterSecret, []],\r\n      notifyPushalot: [notificationSettings.notifyPushalot, []],\r\n      pushalotApi: [notificationSettings.pushalotApi, []],\r\n      notifyPushover: [notificationSettings.notifyPushover, []],\r\n      pushoverKey: [notificationSettings.pushoverKey, []],\r\n      pushoverApi: [notificationSettings.pushoverApi, []],\r\n      pushoverDevices: [notificationSettings.pushoverDevices, []],\r\n      notifyGrowl: [notificationSettings.notifyGrowl, []],\r\n      growlHost: [notificationSettings.growlHost, []],\r\n      growlPort: [notificationSettings.growlPort, []],\r\n      growlPassword: [notificationSettings.growlPassword, []],\r\n      growlPriority: [notificationSettings.growlPriority || 0, []],\r\n      notifyProwl: [notificationSettings.notifyProwl, []],\r\n      prowlApi: [notificationSettings.prowlApi, []],\r\n      prowlPriority: [notificationSettings.prowlPriority || 0, []],\r\n      notifyPushbullet: [notificationSettings.notifyPushbullet, []],\r\n      pushbulletApi: [notificationSettings.pushbulletApi, []],\r\n      notifyTelegram: [notificationSettings.notifyTelegram, []],\r\n      telegramBotApi: [notificationSettings.telegramBotApi, []],\r\n      telegramChatId: [notificationSettings.telegramChatId, []]\r\n    });\r\n  }\r\n\r\n  private getNotificationSettings(): NotificationSettings {\r\n    const settings = new NotificationSettings();\r\n    settings.notify = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notify');\r\n    settings.notifyMail = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyMail');\r\n    settings.mailServer = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailServer');\r\n    settings.mailFromName = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailFromName');\r\n    settings.mailFrom = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailFrom');\r\n    settings.mailTo = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailTo');\r\n    settings.mailUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailUserName');\r\n    settings.mailPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailPassword');\r\n    settings.mailSubject = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailSubject');\r\n    settings.mailEncryption = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailEncryption');\r\n    settings.mailAuthentication = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailAuthentication');\r\n    settings.notifyTwitter = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyTwitter');\r\n    settings.twitterKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'twitterKey');\r\n    settings.twitterSecret = FormUtils.getFormControlValue<string>(this.settingsForm, 'twitterSecret');\r\n    settings.notifyPushalot = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushalot');\r\n    settings.pushalotApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushalotApi');\r\n    settings.notifyPushover = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushover');\r\n    settings.pushoverKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverKey');\r\n    settings.pushoverApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverApi');\r\n    settings.pushoverDevices = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverDevices');\r\n    settings.notifyGrowl = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyGrowl');\r\n    settings.growlHost = FormUtils.getFormControlValue<string>(this.settingsForm, 'growlHost');\r\n    settings.growlPort = FormUtils.getFormControlValue<number>(this.settingsForm, 'growlPort');\r\n    settings.growlPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'growlPassword');\r\n    settings.growlPriority = FormUtils.getFormControlValue<number>(this.settingsForm, 'growlPriority');\r\n    settings.notifyProwl = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyProwl');\r\n    settings.prowlApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'prowlApi');\r\n    settings.prowlPriority = FormUtils.getFormControlValue<number>(this.settingsForm, 'prowlPriority');\r\n    settings.notifyPushbullet = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushbullet');\r\n    settings.pushbulletApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushbulletApi');\r\n    settings.notifyTelegram = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyTelegram');\r\n    settings.telegramBotApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'telegramBotApi');\r\n    settings.telegramChatId = FormUtils.getFormControlValue<string>(this.settingsForm, 'telegramChatId');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Notification settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Passwords and keys are stored in plaintext!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Information notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"info\" text=\"You first need to save before you can test a notification.\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Notify -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notify\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, notification(s) will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notify\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\"></div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Mail settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Mail</span>\r\n          <img src=\"assets/notifiers/email.png\" class=\"notifier-icon\" alt=\"Mail\" title=\"Mail\">\r\n        </div>\r\n      </div>\r\n      <!-- Notify Mail -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyMail\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, an email notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyMail\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Mail server -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailServer\" class=\"label\">Server</label>\r\n          <app-icon-dropdown>\r\n            <li>The mail server address (and port if needed).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailServer\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail from Name -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailFromName\" class=\"label\">Sender name</label>\r\n          <app-icon-dropdown>\r\n            <li>The name from which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailFromName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail from -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailFrom\" class=\"label\">Sender</label>\r\n          <app-icon-dropdown>\r\n            <li>The email address from which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailFrom\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail to -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailTo\" class=\"label\">Receiver</label>\r\n          <app-icon-dropdown>\r\n            <li>The email address(es) to which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailTo\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username on the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for the username on the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail subject -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailSubject\" class=\"label\">Subject</label>\r\n          <app-icon-dropdown>\r\n            <li>The email subject.</li>\r\n            <li>If not provided, the default subject will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailSubject\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail encryption -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailEncryption\" class=\"label\">Encryption</label>\r\n          <app-icon-dropdown>\r\n            <li>The encryption method used by the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailEncryption\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail authentication -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailAuthentication\" class=\"label\">Authentication</label>\r\n          <app-icon-dropdown>\r\n            <li>The authentication mechanism used by the mail server.</li>\r\n            <li>Don't change this if you don't know what you are doing.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailAuthentication\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('mail')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Twitter</span>\r\n          <a href=\"https://twitter.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/twitter.png\" class=\"notifier-icon\" alt=\"Twitter\" title=\"Twitter\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Twitter -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyTwitter\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Twitter notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyTwitter\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"twitterKey\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Twitter.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"twitterKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter secret -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"twitterSecret\" class=\"label\">Secret code</label>\r\n          <app-icon-dropdown>\r\n            <li>The secret code for Twitter.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"twitterSecret\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Register\" styleClass=\"p-button-secondary\" (onClick)=\"registerTwitter()\"></p-button>\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('twitter')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushalot settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushalot</span>\r\n          <a href=\"https://pushalot.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushalot.png\" class=\"notifier-icon\" alt=\"Pushalot\" title=\"Pushalot\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushalot -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushalot\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushalot notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushalot\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushalot api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushalotApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushalot.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushalotApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushalot')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushover</span>\r\n          <a href=\"https://pushover.net/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushover.png\" class=\"notifier-icon\" alt=\"Pushover\" title=\"Pushover\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushover -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushover\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushover notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushover\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverKey\" class=\"label\">User key</label>\r\n          <app-icon-dropdown>\r\n            <li>The user key for Pushover.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushover.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover devices -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverDevices\" class=\"label\">Devices</label>\r\n          <app-icon-dropdown>\r\n            <li>The devices (comma separated list) used for Pushover notifications.</li>\r\n            <li>If not provided, notifications will be sent to all your Pushover devices.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverDevices\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushover')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Growl settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Growl</span>\r\n          <a href=\"http://www.growl.info/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/growl.png\" class=\"notifier-icon\" alt=\"Growl\" title=\"Growl\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Growl -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyGrowl\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Growl notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyGrowl\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Growl host -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlHost\" class=\"label\">Server</label>\r\n          <app-icon-dropdown>\r\n            <li>The Growl host server address.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"growlHost\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Growl port -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPort\" class=\"label\">Port</label>\r\n          <app-icon-dropdown>\r\n            <li>The port of the Growl host server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"growlPort\" [showButtons]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Growl password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password on the growl host server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"growlPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Growl priority -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPriority\" class=\"label\">Priority</label>\r\n          <app-icon-dropdown>\r\n            <li>The priority for the Growl notification.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"growlPriority\" [options]=\"growlProwlPriorities\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('growl')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Prowl</span>\r\n          <a href=\"https://www.prowlapp.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/prowl.png\" class=\"notifier-icon\" alt=\"Prowl\" title=\"Prowl\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Prowl -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyProwl\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Prowl notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyProwl\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"prowlApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Prowl.</li>\r\n            <li>Your API key can be found by visiting: <a href=\"https://prowlapp.com/api_settings.php\" target=\"_blank\">https://prowlapp.com/api_settings.php</a></li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"prowlApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl priority -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"prowlPriority\" class=\"label\">Priority</label>\r\n          <app-icon-dropdown>\r\n            <li>The priority for the Prowl notification.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"prowlPriority\" [options]=\"growlProwlPriorities\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('prowl')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushbullet settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushbullet</span>\r\n          <a href=\"https://www.pushbullet.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushbullet.png\" class=\"notifier-icon\" alt=\"Pushbullet\" title=\"Pushbullet\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushbullet -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushbullet\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushbullet notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushbullet\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushbullet api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushbulletApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushbullet.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushbulletApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushbullet')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Telegram</span>\r\n          <a href=\"https://telegram.org/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/telegram.png\" class=\"notifier-icon\" alt=\"Telegram\" title=\"Telegram\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Telegram -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyTelegram\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Telegram notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyTelegram\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"telegramBotApi\" class=\"label\">Bot API key (token)</label>\r\n          <app-icon-dropdown>\r\n            <li>The bot API key (token) for Telegram.</li>\r\n            <li>Contact &#64;BotFather on Telegram to set up one.</li>\r\n            <li>See <a href=\"https://core.telegram.org/bots\" target=\"_blank\">https://core.telegram.org/bots</a></li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"telegramBotApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram chat id -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"telegramChatId\" class=\"label\">Chat ID</label>\r\n          <app-icon-dropdown>\r\n            <li>Unique identifier for the target chat or username of the target channel (in the format &#64;channelusername).</li>\r\n            <li>Contact &#64;myidbot on Telegram to get an ID.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"telegramChatId\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('telegram')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"twitterRegistrationDialog\"\r\n          [modal]=\"true\"\r\n          [closable]=\"true\"\r\n          [resizable]=\"false\"\r\n          [showHeader]=\"true\"\r\n          header=\"Twitter registration\">\r\n  <div *ngIf=\"twitterRegistration\">\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <label>In order to use twitter, you need to give permission to 'Auto-Subliminal' to send tweets with your account.</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <label>Execute the following steps:</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <ul>\r\n          <li><label>Go to <a [href]=\"twitterRegistration.url\" target=\"_blank\">twitter</a></label></li>\r\n          <li><label>Login</label></li>\r\n          <li><label>Authorize 'Auto-Subliminal'</label></li>\r\n          <li><label>Enter pin below and click 'OK'</label></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-6 col-6 col-sm-6 col-md-4 col-lg-4\">\r\n        <div class=\"p-inputgroup\">\r\n          <input type=\"text\" pInputText [(ngModel)]=\"twitterRegistration.tokenPin\" placeholder=\"Pin\">\r\n          <p-button label=\"Ok\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"authorizeTwitter()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-dialog>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputFileBrowserComponent } from '../../../components/input/file-browser/input-file-browser.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { PostProcessSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-postprocessing',\r\n  templateUrl: './settings-postprocessing.component.html',\r\n  styleUrls: ['./settings-postprocessing.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputDropdownComponent, InputFileBrowserComponent, InputTextComponent]\r\n})\r\nexport class SettingsPostprocessingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getPostProcessSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (postProcessSettings) => {\r\n        this.buildForm(postProcessSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the postprocessing settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updatePostProcessSettings(this.getPostProcessSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Postprocessing settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the postprocessing settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(postProcessSettings: PostProcessSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      postProcess: [postProcessSettings.postProcess, [Validators.required]],\r\n      postProcessIndividual: [postProcessSettings.postProcessIndividual, [Validators.required]],\r\n      postProcessUtf8Encoding: [postProcessSettings.postProcessUtf8Encoding, [Validators.required]],\r\n      showPostProcessCmd: [postProcessSettings.showPostProcessCmd, []],\r\n      showPostProcessArgs: [postProcessSettings.showPostProcessArgs, []],\r\n      moviePostProcessCmd: [postProcessSettings.moviePostProcessCmd, []],\r\n      moviePostProcessArgs: [postProcessSettings.moviePostProcessArgs, []]\r\n    });\r\n  }\r\n\r\n  private getPostProcessSettings(): PostProcessSettings {\r\n    const settings = new PostProcessSettings();\r\n    settings.postProcess = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcess');\r\n    settings.postProcessIndividual = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcessIndividual');\r\n    settings.postProcessUtf8Encoding = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcessUtf8Encoding');\r\n    settings.showPostProcessCmd = FormUtils.getFormControlValue<string>(this.settingsForm, 'showPostProcessCmd');\r\n    settings.showPostProcessArgs = FormUtils.getFormControlValue<string>(this.settingsForm, 'showPostProcessArgs');\r\n    settings.moviePostProcessCmd = FormUtils.getFormControlValue<string>(this.settingsForm, 'moviePostProcessCmd');\r\n    settings.moviePostProcessArgs = FormUtils.getFormControlValue<string>(this.settingsForm, 'moviePostProcessArgs');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Postprocessing settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Post process -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcess\" class=\"label\">Post-process</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing command(s) will be executed.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcess\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Post process individual -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcessIndividual\" class=\"label\">Individual</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing will be executed after each subtitle download for a video.</li>\r\n            <li>If disabled, the post processing will only be executed when all wanted subtitles are downloaded for a video.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcessIndividual\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Post process utf8 encoding -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcessUtf8Encoding\" class=\"label\">UTF-8 encoding</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing command(s) and argument(s) will be encoded in UTF-8.</li>\r\n            <li>This means that the post processing script will need to decode the argument(s) from UTF-8.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcessUtf8Encoding\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show post process cmd -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showPostProcessCmd\" class=\"label\">Post-process command</label>\r\n          <app-icon-dropdown>\r\n            <li>The command to run after downloading a subtitle for a show.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"showPostProcessCmd\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Show post process args -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showPostProcessArgs\" class=\"label\">Post-process argument(s)</label>\r\n          <app-icon-dropdown>\r\n            <li>The argument(s) (separated by |) to pass to the command above after downloading a subtitle for a show.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"showPostProcessArgs\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Movie post process cmd -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"moviePostProcessCmd\" class=\"label\">Post-process command</label>\r\n          <app-icon-dropdown>\r\n            <li>The command to run after downloading a subtitle for a movie.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"moviePostProcessCmd\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Movie post process args -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"moviePostProcessArgs\" class=\"label\">Post-process argument(s)</label>\r\n          <app-icon-dropdown>\r\n            <li>The argument(s) (separated by |) to pass to the command above after downloading a subtitle for a movie.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"moviePostProcessArgs\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { SettingsGeneralComponent } from './general/settings-general.component';\r\nimport { SettingsLibraryComponent } from './library/settings-library.component';\r\nimport { SettingsLoggingComponent } from './logging/settings-logging.component';\r\nimport { SettingsNamemappingComponent } from './namemapping/settings-namemapping.component';\r\nimport { SettingsNotificationComponent } from './notification/settings-notification.component';\r\nimport { SettingsPostprocessingComponent } from './postprocessing/settings-postprocessing.component';\r\nimport { SettingsSkipmappingComponent } from './skipmapping/settings-skipmapping.component';\r\nimport { SettingsSubliminalComponent } from './subliminal/settings-subliminal.component';\r\nimport { SettingsWebserverComponent } from './webserver/settings-webserver.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'general',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'general',\r\n    component: SettingsGeneralComponent\r\n  },\r\n  {\r\n    path: 'library',\r\n    component: SettingsLibraryComponent\r\n  },\r\n  {\r\n    path: 'logging',\r\n    component: SettingsLoggingComponent\r\n  },\r\n  {\r\n    path: 'webserver',\r\n    component: SettingsWebserverComponent\r\n  },\r\n  {\r\n    path: 'subliminal',\r\n    component: SettingsSubliminalComponent\r\n  },\r\n  {\r\n    path: 'namemapping',\r\n    component: SettingsNamemappingComponent\r\n  },\r\n  {\r\n    path: 'skipmapping',\r\n    component: SettingsSkipmappingComponent\r\n  },\r\n  {\r\n    path: 'notification',\r\n    component: SettingsNotificationComponent\r\n  },\r\n  {\r\n    path: 'postprocessing',\r\n    component: SettingsPostprocessingComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'general'\r\n  }\r\n];\r\n\r\n// Use default export for simplified lazy loading (https://angular.io/guide/standalone-components#lazy-loading-and-default-exports)\r\nexport default routes;\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputMultiTextComponent } from '../../../components/input/multi-text/input-multi-text.component';\r\nimport { SkipMappingSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-skipmapping',\r\n  templateUrl: './settings-skipmapping.component.html',\r\n  styleUrls: ['./settings-skipmapping.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputMultiTextComponent]\r\n})\r\nexport class SettingsSkipmappingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.getSkipMappingSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (skipMappingSettings) => {\r\n        this.buildForm(skipMappingSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the skipmapping settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateSkipMappingSettings(this.getSkipMappingSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Skipmapping settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the skipmapping settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildForm(skipMappingSettings: SkipMappingSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      skipShowMapping: [skipMappingSettings.skipShowMapping || [], []],\r\n      skipMovieMapping: [skipMappingSettings.skipMovieMapping || [], []]\r\n    });\r\n  }\r\n\r\n  private getSkipMappingSettings(): SkipMappingSettings {\r\n    const settings = new SkipMappingSettings();\r\n    settings.skipShowMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'skipShowMapping');\r\n    settings.skipMovieMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'skipMovieMapping');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Skipmapping settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Skip show mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipShowMapping\" class=\"label\">Skip show mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The mapping to skip a show.</li>\r\n            <li>Examples:</li>\r\n            <li>Serie Name = 00 (this will skip the show 'Serie Name' completely</li>\r\n            <li>Another Serie name = 1,5,6 (this will skip the show 'Another Serie Name' season 1, 5 and 6</li>\r\n            <li>Show Name = 0,6,7 (this will skip the show 'Show Name' season 0 (specials), 6 and 7.</li>\r\n            <li>00 is different then 0, 00 skips a show, 0 skips specials (season 0)</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"skipShowMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Skip movie mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipMovieMapping\" class=\"label\">Skip movie mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The mapping to skip a movie.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title (year) = 00</li>\r\n            <li>Movie title 2 (year) = 00</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"skipMovieMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputSwitchComponent } from '../../../components/input/switch/input-switch.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { SubliminalSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-subliminal',\r\n  templateUrl: './settings-subliminal.component.html',\r\n  styleUrls: ['./settings-subliminal.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, MessageModule, ButtonModule, ListboxModule, IconDropdownComponent, InputSwitchComponent, InputDropdownComponent, InputTextComponent]\r\n})\r\nexport class SettingsSubliminalComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  subliminalProviders: SelectItem[];\r\n  antiCaptchaProviders: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getSubliminalSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (subliminalSettings) => {\r\n        this.buildForm(subliminalSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the subliminal settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateSubliminalSettings(this.getSubliminalSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Subliminal settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the subliminal settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Subliminal providers\r\n    this.subliminalProviders = [];\r\n    appSettings.subliminalProviders.forEach((provider) => this.subliminalProviders.push({ label: provider, value: provider }));\r\n    // Anti-Captcha providers\r\n    this.antiCaptchaProviders = [];\r\n    this.antiCaptchaProviders.push({ label: 'Disabled', value: '' });\r\n    appSettings.antiCaptchaProviders.forEach((provider) => this.antiCaptchaProviders.push({ label: provider.source, value: provider.class }));\r\n  }\r\n\r\n  private buildForm(subliminalSettings: SubliminalSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      showMatchSource: [subliminalSettings.showMatchSource, [Validators.required]],\r\n      showMatchQuality: [subliminalSettings.showMatchQuality, [Validators.required]],\r\n      showMatchCodec: [subliminalSettings.showMatchCodec, [Validators.required]],\r\n      showMatchReleaseGroup: [subliminalSettings.showMatchReleaseGroup, [Validators.required]],\r\n      movieMatchSource: [subliminalSettings.movieMatchSource, [Validators.required]],\r\n      movieMatchQuality: [subliminalSettings.movieMatchQuality, [Validators.required]],\r\n      movieMatchCodec: [subliminalSettings.movieMatchCodec, [Validators.required]],\r\n      movieMatchReleaseGroup: [subliminalSettings.movieMatchReleaseGroup, [Validators.required]],\r\n      subliminalProviders: [subliminalSettings.subliminalProviders || [], []],\r\n      subtitleUtf8Encoding: [subliminalSettings.subtitleUtf8Encoding, [Validators.required]],\r\n      refineVideo: [subliminalSettings.refineVideo, [Validators.required]],\r\n      omdbApiKey: [subliminalSettings.omdbApiKey, []],\r\n      manualRefineVideo: [subliminalSettings.manualRefineVideo, [Validators.required]],\r\n      preferHearingImpaired: [subliminalSettings.preferHearingImpaired, [Validators.required]],\r\n      antiCaptchaClass: [subliminalSettings.antiCaptchaClass, []],\r\n      antiCaptchaClientKey: [subliminalSettings.antiCaptchaClientKey, []],\r\n      addic7edUserName: [subliminalSettings.addic7edUserName, []],\r\n      addic7edPassword: [subliminalSettings.addic7edPassword, []],\r\n      addic7edUserId: [subliminalSettings.addic7edUserId, []],\r\n      opensubtitlesUserName: [subliminalSettings.opensubtitlesUserName, []],\r\n      opensubtitlesPassword: [subliminalSettings.opensubtitlesPassword, []],\r\n      opensubtitlesApiKey: [subliminalSettings.opensubtitlesApiKey, []],\r\n      legendastvUserName: [subliminalSettings.legendastvUserName, []],\r\n      legendastvPassword: [subliminalSettings.legendastvPassword, []]\r\n    });\r\n  }\r\n\r\n  private getSubliminalSettings(): SubliminalSettings {\r\n    const settings = new SubliminalSettings();\r\n    settings.showMatchSource = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchSource');\r\n    settings.showMatchQuality = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchQuality');\r\n    settings.showMatchCodec = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchCodec');\r\n    settings.showMatchReleaseGroup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchReleaseGroup');\r\n    settings.movieMatchSource = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchSource');\r\n    settings.movieMatchQuality = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchQuality');\r\n    settings.movieMatchCodec = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchCodec');\r\n    settings.movieMatchReleaseGroup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchReleaseGroup');\r\n    settings.subliminalProviders = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'subliminalProviders');\r\n    settings.subtitleUtf8Encoding = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'subtitleUtf8Encoding');\r\n    settings.refineVideo = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'refineVideo');\r\n    settings.omdbApiKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'omdbApiKey');\r\n    settings.manualRefineVideo = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualRefineVideo');\r\n    settings.preferHearingImpaired = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'preferHearingImpaired');\r\n    settings.antiCaptchaClass = FormUtils.getFormControlValue<string>(this.settingsForm, 'antiCaptchaClass');\r\n    settings.antiCaptchaClientKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'antiCaptchaClientKey');\r\n    settings.addic7edUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edUserName');\r\n    settings.addic7edPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edPassword');\r\n    settings.addic7edUserId = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edUserId');\r\n    settings.opensubtitlesUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesUserName');\r\n    settings.opensubtitlesPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesPassword');\r\n    settings.opensubtitlesApiKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesApiKey');\r\n    settings.legendastvUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'legendastvUserName');\r\n    settings.legendastvPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'legendastvPassword');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Subliminal settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Passwords and keys are stored in plain text!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Show MinMatchScore</label>\r\n          <app-icon-dropdown>\r\n            <li>The items that must match before a show subtitle is downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-switches\">\r\n          <app-input-switch formControlName=\"showMatchSource\" label=\"Source\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchQuality\" label=\"Quality\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchCodec\" label=\"Codec\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchReleaseGroup\" label=\"Group\"></app-input-switch>\r\n        </div>\r\n      </div>\r\n      <!-- Movie min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Movie MinMatchScore</label>\r\n          <app-icon-dropdown>\r\n            <li>The items that must match before a movie subtitle is downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-switches\">\r\n          <app-input-switch formControlName=\"movieMatchSource\" label=\"Source\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchQuality\" label=\"Quality\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchCodec\" label=\"Codec\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchReleaseGroup\" label=\"Group\"></app-input-switch>\r\n        </div>\r\n      </div>\r\n      <!-- Movie min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Providers</label>\r\n          <app-icon-dropdown>\r\n            <li>The subliminal providers that must be used for searching and downloading subtitles.</li>\r\n            <li>Multiple providers can be selected (use ctrl key).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-label\">\r\n          <p-listbox formControlName=\"subliminalProviders\" [options]=\"subliminalProviders\" [multiple]=\"true\"></p-listbox>\r\n        </div>\r\n      </div>\r\n      <!-- Subtitle utf8 encoding -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"subtitleUtf8Encoding\" class=\"label\">Subtitles in utf-8 encoding</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, all subtitles will be saved in utf-8 encoding.</li>\r\n            <li>When disabled, the original encoding of the subtitle is used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"subtitleUtf8Encoding\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Refine video -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"refineVideo\" class=\"label\">Refine video</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, subliminal will enable 'refiners' to enrich the video meta-data before searching for subtitles.</li>\r\n            <li>This can result in a higher score matching and thus a higher automatic subtitle download.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"refineVideo\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Refine video - omdb refiner apikey -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"omdbApiKey\" class=\"label\">OMDB refiner API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for the OMDB refiner.</li>\r\n            <li>Required if you want to use the OMDB refiner.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"omdbApiKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Manual refine video -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualRefineVideo\" class=\"label\">Refine video manually</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, you will be able to edit the video meta-data before searching for subtitles.</li>\r\n            <li>An edit icon will appear next to the show/movie name to edit the show/movie details.</li>\r\n            <li>This only affects a manual search temporarily until the next disk scan.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualRefineVideo\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Prefer hearing impaired -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"preferHearingImpaired\" class=\"label\">Prefer hearing impaired subs</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, 'hearing impaired' subtitles will be preferred over 'regular' subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"preferHearingImpaired\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-captcha settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Anti-captcha</span>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-Captcha class -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"antiCaptchaClass\" class=\"label\">Anti-captcha service</label>\r\n          <app-icon-dropdown>\r\n            <li>The anti-captcha service.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"antiCaptchaClass\" [options]=\"antiCaptchaProviders\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-Captcha client key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"antiCaptchaClientKey\" class=\"label\">Anti-captcha client key</label>\r\n          <app-icon-dropdown>\r\n            <li>The anti-captcha client key.</li>\r\n            <li>anti-captcha.com: account_key</li>\r\n            <li>deathbycaptcha.com: username:password</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"antiCaptchaClientKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Addic7ed provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your Addic7ed account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your Addic7ed account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed userid -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edUserId\" class=\"label\">UserId</label>\r\n          <app-icon-dropdown>\r\n            <li>The user id for your Addic7ed account.</li>\r\n            <li> It can be found in the url when you visit the details of your user in the profile page of your account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edUserId\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">OpenSubtitles provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your OpenSubtitles account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your OpenSubtitles account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles apikey -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesApiKey\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for your OpenSubtitles account.</li>\r\n            <li>Required for OpenSubtitles.com provider.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesApiKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Legendas.TV provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"legendastvUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your Legendas.TV account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"legendastvUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"legendastvPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your Legendas.TV account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"legendastvPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { WebServerSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\nimport { FormValidators } from '../../../utils/form-validators';\r\n\r\n@Component({\r\n  selector: 'app-settings-webserver',\r\n  templateUrl: './settings-webserver.component.html',\r\n  styleUrls: ['./settings-webserver.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, MessageModule, IconDropdownComponent, InputTextComponent, InputNumberComponent, InputDropdownComponent]\r\n})\r\nexport class SettingsWebserverComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getWebServerSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (webServerSettings) => {\r\n        this.buildForm(webServerSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the webserver settings!')\r\n    });\r\n  }\r\n\r\n  formatWebRoot(): void {\r\n    let webRoot = FormUtils.getFormControlValue<string>(this.settingsForm, 'webRoot');\r\n    if (webRoot) {\r\n      if (!webRoot.startsWith('/')) {\r\n        webRoot = `/${webRoot}`;\r\n      }\r\n      if (webRoot.endsWith('/')) {\r\n        webRoot = webRoot.replace(new RegExp('/+$'), '');\r\n      }\r\n    }\r\n    FormUtils.setFormControlValue(this.settingsForm, 'webRoot', webRoot);\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateWebServerSettings(this.getWebServerSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Webserver settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the webserver settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(webServerSettings: WebServerSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      webServerIp: [webServerSettings.webServerIp, [Validators.required, FormValidators.notEmpty]],\r\n      webServerPort: [webServerSettings.webServerPort, [Validators.required, FormValidators.notEmpty]],\r\n      webRoot: [webServerSettings.webRoot, []],\r\n      userName: [webServerSettings.userName, []],\r\n      password: [webServerSettings.password, []],\r\n      launchBrowser: [webServerSettings.launchBrowser, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getWebServerSettings(): WebServerSettings {\r\n    const settings = new WebServerSettings();\r\n    settings.webServerIp = FormUtils.getFormControlValue<string>(this.settingsForm, 'webServerIp');\r\n    settings.webServerPort = FormUtils.getFormControlValue<number>(this.settingsForm, 'webServerPort');\r\n    settings.webRoot = FormUtils.getFormControlValue<string>(this.settingsForm, 'webRoot');\r\n    settings.userName = FormUtils.getFormControlValue<string>(this.settingsForm, 'userName');\r\n    settings.password = FormUtils.getFormControlValue<string>(this.settingsForm, 'password');\r\n    settings.launchBrowser = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'launchBrowser');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Webserver settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Changing webserver settings will result in no automatic reload! You'll need to change the url manually in order to reload correctly!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Webserver ip -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webServerIp\" class=\"label\">IP address</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver IP address.</li>\r\n            <li>To allow hosts to connect to any IP address, use '0.0.0.0'.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"webServerIp\" mask=\"IP\" [dropSpecialCharacters]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Webserver port -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webServerPort\" class=\"label\">Port</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver port.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"webServerPort\" [showButtons]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Webroot -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webRoot\" class=\"label\">Webroot</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver webroot for reverse proxying.</li>\r\n            <li>Example: to proxy it to 'http://localhost/autosubliminal/' the webroot needs to be '/autosubliminal'.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"webRoot\" [validationFeedback]=\"saveAttempt\" (keyUpEvent)=\"formatWebRoot()\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"userName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for the webserver authentication.</li>\r\n            <li>If a username and password are set, the webserver requires authentication.</li>\r\n            <li>Otherwise no authentication is set or required.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"userName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"password\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for the webserver authentication.</li>\r\n            <li>If a username and password are set, the webserver requires authentication.</li>\r\n            <li>Otherwise no authentication is set or required.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"password\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Launch browser -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"launchBrowser\" class=\"label\">Launch browser</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the browser will start every time Auto-Subliminal starts.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"launchBrowser\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { appSettings } from '../../app-settings.service';\r\nimport { FileBrowserResult } from '../../models/filebrowser';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileSystemService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/filesystem`;\r\n\r\n  browse(path = '', includeFiles = true, includeFolders = true): Observable<FileBrowserResult> {\r\n    const url = `${this.URL}?path=${path}&includeFiles=${includeFiles}&includeFolders=${includeFolders}`;\r\n    return this.httpClient.get<FileBrowserResult>(url, this.options);\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, signal, computed, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { Header, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { SearchIcon } from 'primeng/icons/search';\nimport { CheckIcon } from 'primeng/icons/check';\nimport * as i4 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\n\nconst LISTBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Listbox),\n    multi: true\n};\n/**\n * ListBox is used to select one or more values from a list of items.\n * @group Components\n */\nclass Listbox {\n    el;\n    cd;\n    filterService;\n    config;\n    renderer;\n    /**\n     * Unique identifier of the component.\n     * @group Props\n     */\n    id;\n    /**\n     * Text to display when the search is active. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue '{0} results are available'\n     */\n    searchMessage;\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue 'No selected item'\n     */\n    emptySelectionMessage;\n    /**\n     * Text to be displayed in hidden accessible field when options are selected. Defaults to global value in i18n translation configuration.\n     * @group Props\n     * @defaultValue '{0} items selected'\n     */\n    selectionMessage;\n    /**\n     * Whether to focus on the first visible or selected element when the overlay panel is shown.\n     * @group Props\n     */\n    autoOptionFocus = true;\n    /**\n     * When enabled, the focused option is selected.\n     * @group Props\n     */\n    selectOnFocus;\n    /**\n     * Locale to use in searching. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    searchLocale;\n    /**\n     * When enabled, the hovered option will be focused.\n     * @group Props\n     */\n    focusOnHover;\n    /**\n     * Text to display when filtering.\n     * @group Props\n     */\n    filterMessage;\n    /**\n     * Fields used when filtering the options, defaults to optionLabel.\n     * @group Props\n     */\n    filterFields;\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * When specified, allows selecting multiple values.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Inline style of the container.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the container.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the list element.\n     * @group Props\n     */\n    listStyle;\n    /**\n     * Style class of the list element.\n     * @group Props\n     */\n    listStyleClass;\n    /**\n     * When present, it specifies that the element value cannot be changed.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * When specified, allows selecting items with checkboxes.\n     * @group Props\n     */\n    checkbox = false;\n    /**\n     * When specified, displays a filter input at header.\n     * @group Props\n     */\n    filter = false;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    metaKeySelection = false;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Whether header checkbox is shown in multiple mode.\n     * @group Props\n     */\n    showToggleAll = true;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel = 'label';\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Defines placeholder of the filter input.\n     * @group Props\n     */\n    filterPlaceHolder;\n    /**\n     * Text to display when filtering does not return any results.\n     * @group Props\n     */\n    emptyFilterMessage;\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * An array of selectitems to display as the available options.\n     * @group Props\n     */\n    get options() {\n        return this._options();\n    }\n    set options(val) {\n        this._options.set(val);\n    }\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n        return this._filterValue();\n    }\n    set filterValue(val) {\n        this._filterValue.set(val);\n    }\n    /**\n     * Whether all data is selected.\n     * @group Props\n     */\n    get selectAll() {\n        return this._selectAll;\n    }\n    set selectAll(value) {\n        this._selectAll = value;\n    }\n    /**\n     * Callback to invoke on value change.\n     * @param {ListboxChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when option is clicked.\n     * @param {ListboxClickEvent} event - Custom click event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when option is double clicked.\n     * @param {ListboxDoubleClickEvent} event - Custom double click event.\n     * @group Emits\n     */\n    onDblClick = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {ListboxFilterEvent} event - Custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when component receives focus.\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when component loses focus.\n     * @param {FocusEvent} event - Blur event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when all data is selected.\n     * @param {ListboxSelectAllChangeEvent} event - Custom select event.\n     * @group Emits\n     */\n    onSelectAllChange = new EventEmitter();\n    headerCheckboxViewChild;\n    filterViewChild;\n    lastHiddenFocusableElement;\n    firstHiddenFocusableElement;\n    scroller;\n    listViewChild;\n    headerFacet;\n    footerFacet;\n    templates;\n    itemTemplate;\n    groupTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    filterIconTemplate;\n    checkIconTemplate;\n    _filterValue = signal(null);\n    _filteredOptions;\n    filterOptions;\n    filtered;\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    optionTouched;\n    focus;\n    headerCheckboxFocus;\n    translationSubscription;\n    focused;\n    get containerClass() {\n        return {\n            'p-listbox p-component': true,\n            'p-focus': this.focused,\n            'p-disabled': this.disabled\n        };\n    }\n    get focusedOptionId() {\n        return this.focusedOptionIndex() !== -1 ? `${this.id}_${this.focusedOptionIndex()}` : null;\n    }\n    get filterResultMessageText() {\n        return ObjectUtils.isNotEmpty(this.visibleOptions()) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions().length) : this.emptyFilterMessageText;\n    }\n    get filterMessageText() {\n        return this.filterMessage || this.config.translation.searchMessage || '';\n    }\n    get searchMessageText() {\n        return this.searchMessage || this.config.translation.searchMessage || '';\n    }\n    get emptyFilterMessageText() {\n        return this.emptyFilterMessage || this.config.translation.emptySearchMessage || this.config.translation.emptyFilterMessage || '';\n    }\n    get selectionMessageText() {\n        return this.selectionMessage || this.config.translation.selectionMessage || '';\n    }\n    get emptySelectionMessageText() {\n        return this.emptySelectionMessage || this.config.translation.emptySelectionMessage || '';\n    }\n    get selectedMessageText() {\n        return this.hasSelectedOption() ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.modelValue().length : '1') : this.emptySelectionMessageText;\n    }\n    get ariaSetSize() {\n        return this.visibleOptions().filter((option) => !this.isOptionGroup(option)).length;\n    }\n    get virtualScrollerDisabled() {\n        return !this.virtualScroll;\n    }\n    get searchFields() {\n        return this.filterFields || [this.optionLabel];\n    }\n    get toggleAllAriaLabel() {\n        return this.config.translation.aria ? this.config.translation.aria[this.allSelected() ? 'selectAll' : 'unselectAll'] : undefined;\n    }\n    searchValue;\n    searchTimeout;\n    _selectAll = null;\n    _options = signal(null);\n    startRangeIndex = signal(-1);\n    focusedOptionIndex = signal(-1);\n    modelValue = signal(null);\n    visibleOptions = computed(() => {\n        const options = this.group ? this.flatOptions(this._options()) : this._options() || [];\n        return this._filterValue() ? this.filterService.filter(options, this.searchFields, this._filterValue(), this.filterMatchMode, this.filterLocale) : options;\n    });\n    constructor(el, cd, filterService, config, renderer) {\n        this.el = el;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.config = config;\n        this.renderer = renderer;\n    }\n    ngOnInit() {\n        this.id = this.id || UniqueComponentId();\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.cd.markForCheck();\n        });\n        this.autoUpdateModel();\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilterChange(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'filtericon':\n                    this.filterIconTemplate = item.template;\n                    break;\n                case 'checkicon':\n                    this.checkIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        this.modelValue.set(this.value);\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    flatOptions(options) {\n        return (options || []).reduce((result, option, index) => {\n            result.push({ optionGroup: option, group: true, index });\n            const optionGroupChildren = this.getOptionGroupChildren(option);\n            optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n            return result;\n        }, []);\n    }\n    autoUpdateModel() {\n        if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption() && !this.multiple) {\n            const focusedOptionIndex = this.findFirstFocusedOptionIndex();\n            this.focusedOptionIndex.set(focusedOptionIndex);\n            this.onOptionSelect(null, this.visibleOptions()[this.focusedOptionIndex()]);\n        }\n    }\n    /**\n     * Updates the model value.\n     * @group Method\n     */\n    updateModel(value, event) {\n        this.value = value;\n        this.modelValue.set(value);\n        this.onModelChange(value);\n        this.onChange.emit({ originalEvent: event, value: this.value });\n    }\n    removeOption(option) {\n        return this.modelValue().filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey()));\n    }\n    onOptionSelect(event, option, index = -1) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        event && this.onClick.emit({ originalEvent: event, option, value: this.value });\n        this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n        this.optionTouched = false;\n        index !== -1 && this.focusedOptionIndex.set(index);\n    }\n    onOptionSelectMultiple(event, option) {\n        let selected = this.isSelected(option);\n        let value = null;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                value = metaKey ? this.removeOption(option) : [this.getOptionValue(option)];\n            }\n            else {\n                value = metaKey ? this.modelValue() || [] : [];\n                value = [...value, this.getOptionValue(option)];\n            }\n        }\n        else {\n            value = selected ? this.removeOption(option) : [...(this.modelValue() || []), this.getOptionValue(option)];\n        }\n        this.updateModel(value, event);\n    }\n    onOptionSelectSingle(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let value = null;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                if (metaKey) {\n                    value = null;\n                    valueChanged = true;\n                }\n            }\n            else {\n                value = this.getOptionValue(option);\n                valueChanged = true;\n            }\n        }\n        else {\n            value = selected ? null : this.getOptionValue(option);\n            valueChanged = true;\n        }\n        if (valueChanged) {\n            this.updateModel(value, event);\n        }\n    }\n    onOptionSelectRange(event, start = -1, end = -1) {\n        start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n        end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n        if (start !== -1 && end !== -1) {\n            const rangeStart = Math.min(start, end);\n            const rangeEnd = Math.max(start, end);\n            const value = this.visibleOptions()\n                .slice(rangeStart, rangeEnd + 1)\n                .filter((option) => this.isValidOption(option))\n                .map((option) => this.getOptionValue(option));\n            this.updateModel(value, event);\n        }\n    }\n    onToggleAll(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        DomHandler.focus(this.headerCheckboxViewChild.nativeElement);\n        if (this.selectAll !== null) {\n            this.onSelectAllChange.emit({\n                originalEvent: event,\n                checked: !this.allSelected()\n            });\n        }\n        else {\n            const value = this.allSelected()\n                ? []\n                : this.visibleOptions()\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n            this.updateModel(value, event);\n            this.onChange.emit({ originalEvent: event, value: this.value });\n        }\n        event.preventDefault();\n        // event.stopPropagation();\n    }\n    allSelected() {\n        return this.selectAll !== null ? this.selectAll : ObjectUtils.isNotEmpty(this.visibleOptions()) && this.visibleOptions().every((option) => this.isOptionGroup(option) || this.isOptionDisabled(option) || this.isSelected(option));\n    }\n    onOptionTouchEnd() {\n        if (this.disabled) {\n            return;\n        }\n        this.optionTouched = true;\n    }\n    onOptionMouseDown(event, index) {\n        this.changeFocusedOptionIndex(event, index);\n    }\n    onOptionMouseEnter(event, index) {\n        if (this.focusOnHover) {\n            this.changeFocusedOptionIndex(event, index);\n        }\n    }\n    onOptionDoubleClick(event, option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        this.onDblClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n    }\n    onFirstHiddenFocus(event) {\n        DomHandler.focus(this.listViewChild.nativeElement);\n        const firstFocusableEl = DomHandler.getFirstFocusableElement(this.el.nativeElement, ':not([data-p-hidden-focusable=\"true\"])');\n        this.lastHiddenFocusableElement.nativeElement.tabIndex = ObjectUtils.isEmpty(firstFocusableEl) ? '-1' : undefined;\n        this.firstHiddenFocusableElement.nativeElement.tabIndex = -1;\n    }\n    onLastHiddenFocus(event) {\n        const relatedTarget = event.relatedTarget;\n        if (relatedTarget === this.listViewChild.nativeElement) {\n            const firstFocusableEl = DomHandler.getFirstFocusableElement(this.el.nativeElement, ':not(.p-hidden-focusable)');\n            DomHandler.focus(firstFocusableEl);\n            this.firstHiddenFocusableElement.nativeElement.tabIndex = undefined;\n        }\n        else {\n            DomHandler.focus(this.firstHiddenFocusableElement.nativeElement);\n        }\n        this.lastHiddenFocusableElement.nativeElement.tabIndex = -1;\n    }\n    onFocusout(event) {\n        if (!this.el.nativeElement.contains(event.relatedTarget) && this.lastHiddenFocusableElement && this.firstHiddenFocusableElement) {\n            this.firstHiddenFocusableElement.nativeElement.tabIndex = this.lastHiddenFocusableElement.nativeElement.tabIndex = undefined;\n        }\n    }\n    onListFocus(event) {\n        this.focused = true;\n        const focusedOptionIndex = this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n        this.focusedOptionIndex.set(focusedOptionIndex);\n        this.onFocus.emit(event);\n    }\n    onListBlur(event) {\n        this.focused = false;\n        this.focusedOptionIndex.set(-1);\n        this.startRangeIndex.set(-1);\n        this.searchValue = '';\n    }\n    onHeaderCheckboxFocus(event) {\n        this.headerCheckboxFocus = true;\n    }\n    onHeaderCheckboxBlur() {\n        this.headerCheckboxFocus = false;\n    }\n    onHeaderCheckboxKeyDown(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            return;\n        }\n        switch (event.code) {\n            case 'Space':\n                this.onToggleAll(event);\n                break;\n            case 'Enter':\n                this.onToggleAll(event);\n                break;\n            case 'Tab':\n                this.onHeaderCheckboxTabKeyDown(event);\n                break;\n            default:\n                break;\n        }\n    }\n    onHeaderCheckboxTabKeyDown(event) {\n        DomHandler.focus(this.listViewChild.nativeElement);\n        event.preventDefault();\n    }\n    onFilterChange(event) {\n        let value = event.target.value?.trim();\n        this._filterValue.set(value);\n        this.focusedOptionIndex.set(-1);\n        this.startRangeIndex.set(-1);\n        this.onFilter.emit({ originalEvent: event, filter: this._filterValue() });\n        !this.virtualScrollerDisabled && this.scroller.scrollToIndex(0);\n    }\n    onFilterBlur(event) {\n        this.focusedOptionIndex.set(-1);\n        this.startRangeIndex.set(-1);\n    }\n    onListKeyDown(event) {\n        const metaKey = event.metaKey || event.ctrlKey;\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event);\n                break;\n            case 'Home':\n                this.onHomeKey(event);\n                break;\n            case 'End':\n                this.onEndKey(event);\n                break;\n            case 'PageDown':\n                this.onPageDownKey(event);\n                break;\n            case 'PageUp':\n                this.onPageUpKey(event);\n                break;\n            case 'Enter':\n            case 'Space':\n                this.onSpaceKey(event);\n                break;\n            case 'Tab':\n                //NOOP\n                break;\n            case 'ShiftLeft':\n            case 'ShiftRight':\n                this.onShiftKey();\n                break;\n            default:\n                if (this.multiple && event.code === 'KeyA' && metaKey) {\n                    const value = this.visibleOptions()\n                        .filter((option) => this.isValidOption(option))\n                        .map((option) => this.getOptionValue(option));\n                    this.updateModel(value, event);\n                    event.preventDefault();\n                    break;\n                }\n                if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                    this.searchOptions(event, event.key);\n                    event.preventDefault();\n                }\n                break;\n        }\n    }\n    onFilterKeyDown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                this.onArrowLeftKey(event, true);\n                break;\n            case 'Home':\n                this.onHomeKey(event, true);\n                break;\n            case 'End':\n                this.onEndKey(event, true);\n                break;\n            case 'Enter':\n                this.onEnterKey(event);\n                break;\n            case 'ShiftLeft':\n            case 'ShiftRight':\n                this.onShiftKey();\n                break;\n            default:\n                break;\n        }\n    }\n    onArrowDownKey(event) {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex()) : this.findFirstFocusedOptionIndex();\n        if (this.multiple && event.shiftKey) {\n            this.onOptionSelectRange(event, this.startRangeIndex(), optionIndex);\n        }\n        this.changeFocusedOptionIndex(event, optionIndex);\n        event.preventDefault();\n    }\n    onArrowUpKey(event) {\n        const optionIndex = this.focusedOptionIndex() !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex()) : this.findLastFocusedOptionIndex();\n        if (this.multiple && event.shiftKey) {\n            this.onOptionSelectRange(event, optionIndex, this.startRangeIndex());\n        }\n        this.changeFocusedOptionIndex(event, optionIndex);\n        event.preventDefault();\n    }\n    onArrowLeftKey(event, pressedInInputText = false) {\n        pressedInInputText && this.focusedOptionIndex.set(-1);\n    }\n    onHomeKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            event.currentTarget.setSelectionRange(0, 0);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            let metaKey = event.metaKey || event.ctrlKey;\n            let optionIndex = this.findFirstOptionIndex();\n            if (this.multiple && event.shiftKey && metaKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex());\n            }\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        event.preventDefault();\n    }\n    onEndKey(event, pressedInInputText = false) {\n        if (pressedInInputText) {\n            const target = event.currentTarget;\n            const len = target.value.length;\n            target.setSelectionRange(len, len);\n            this.focusedOptionIndex.set(-1);\n        }\n        else {\n            let metaKey = event.metaKey || event.ctrlKey;\n            let optionIndex = this.findLastOptionIndex();\n            if (this.multiple && event.shiftKey && metaKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex(), optionIndex);\n            }\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        event.preventDefault();\n    }\n    onPageDownKey(event) {\n        this.scrollInView(0);\n        event.preventDefault();\n    }\n    onPageUpKey(event) {\n        this.scrollInView(this.visibleOptions().length - 1);\n        event.preventDefault();\n    }\n    onEnterKey(event) {\n        if (this.focusedOptionIndex() !== -1) {\n            if (this.multiple && event.shiftKey)\n                this.onOptionSelectRange(event, this.focusedOptionIndex());\n            else\n                this.onOptionSelect(event, this.visibleOptions()[this.focusedOptionIndex()]);\n        }\n        event.preventDefault();\n    }\n    onSpaceKey(event) {\n        this.onEnterKey(event);\n    }\n    onShiftKey() {\n        const focusedOptionIndex = this.focusedOptionIndex();\n        this.startRangeIndex.set(focusedOptionIndex);\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n    getOptionIndex(index, scrollerOptions) {\n        return this.virtualScrollerDisabled ? index : scrollerOptions && scrollerOptions.getItemOptions(index)['index'];\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    getAriaPosInset(index) {\n        return ((this.optionGroupLabel\n            ? index -\n                this.visibleOptions()\n                    .slice(0, index)\n                    .filter((option) => this.isOptionGroup(option)).length\n            : index) + 1);\n    }\n    hasSelectedOption() {\n        return ObjectUtils.isNotEmpty(this.modelValue());\n    }\n    isOptionGroup(option) {\n        return this.optionGroupLabel && option.optionGroup && option.group;\n    }\n    changeFocusedOptionIndex(event, index) {\n        if (this.focusedOptionIndex() !== index) {\n            this.focusedOptionIndex.set(index);\n            this.scrollInView();\n            if (this.selectOnFocus && !this.multiple) {\n                this.onOptionSelect(event, this.visibleOptions()[index]);\n            }\n        }\n    }\n    searchOptions(event, char) {\n        this.searchValue = (this.searchValue || '') + char;\n        let optionIndex = -1;\n        let matched = false;\n        if (this.focusedOptionIndex() !== -1) {\n            optionIndex = this.visibleOptions()\n                .slice(this.focusedOptionIndex())\n                .findIndex((option) => this.isOptionMatched(option));\n            optionIndex =\n                optionIndex === -1\n                    ? this.visibleOptions()\n                        .slice(0, this.focusedOptionIndex())\n                        .findIndex((option) => this.isOptionMatched(option))\n                    : optionIndex + this.focusedOptionIndex();\n        }\n        else {\n            optionIndex = this.visibleOptions().findIndex((option) => this.isOptionMatched(option));\n        }\n        if (optionIndex !== -1) {\n            matched = true;\n        }\n        if (optionIndex === -1 && this.focusedOptionIndex() === -1) {\n            optionIndex = this.findFirstFocusedOptionIndex();\n        }\n        if (optionIndex !== -1) {\n            this.changeFocusedOptionIndex(event, optionIndex);\n        }\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        this.searchTimeout = setTimeout(() => {\n            this.searchValue = '';\n            this.searchTimeout = null;\n        }, 500);\n        return matched;\n    }\n    isOptionMatched(option) {\n        return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n    }\n    scrollInView(index = -1) {\n        const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n        const element = DomHandler.findSingle(this.listViewChild.nativeElement, `li[id=\"${id}\"]`);\n        if (element) {\n            element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n        }\n        else if (!this.virtualScrollerDisabled) {\n            this.virtualScroll && this.scroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex());\n        }\n    }\n    findFirstOptionIndex() {\n        return this.visibleOptions().findIndex((option) => this.isValidOption(option));\n    }\n    findLastOptionIndex() {\n        return ObjectUtils.findLastIndex(this.visibleOptions(), (option) => this.isValidOption(option));\n    }\n    findFirstFocusedOptionIndex() {\n        const selectedIndex = this.findFirstSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n    }\n    findLastFocusedOptionIndex() {\n        const selectedIndex = this.findLastSelectedOptionIndex();\n        return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n    }\n    findLastSelectedOptionIndex() {\n        return this.hasSelectedOption() ? ObjectUtils.findLastIndex(this.visibleOptions(), (option) => this.isValidSelectedOption(option)) : -1;\n    }\n    findNextOptionIndex(index) {\n        const matchedOptionIndex = index < this.visibleOptions().length - 1\n            ? this.visibleOptions()\n                .slice(index + 1)\n                .findIndex((option) => this.isValidOption(option))\n            : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n    }\n    findNextSelectedOptionIndex(index) {\n        const matchedOptionIndex = this.hasSelectedOption() && index < this.visibleOptions().length - 1\n            ? this.visibleOptions()\n                .slice(index + 1)\n                .findIndex((option) => this.isValidSelectedOption(option))\n            : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n    }\n    findPrevSelectedOptionIndex(index) {\n        const matchedOptionIndex = this.hasSelectedOption() && index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n    }\n    findFirstSelectedOptionIndex() {\n        return this.hasSelectedOption() ? this.visibleOptions().findIndex((option) => this.isValidSelectedOption(option)) : -1;\n    }\n    findPrevOptionIndex(index) {\n        const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions().slice(0, index), (option) => this.isValidOption(option)) : -1;\n        return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n        let matchedOptionIndex = -1;\n        if (this.hasSelectedOption()) {\n            if (firstCheckUp) {\n                matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n            }\n            else {\n                matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n            }\n        }\n        return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    }\n    equalityKey() {\n        return this.optionValue ? null : this.dataKey;\n    }\n    isValidSelectedOption(option) {\n        return this.isValidOption(option) && this.isSelected(option);\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n    }\n    isSelected(option) {\n        const optionValue = this.getOptionValue(option);\n        if (this.multiple)\n            return (this.modelValue() || []).some((value) => ObjectUtils.equals(value, optionValue, this.equalityKey()));\n        else\n            return ObjectUtils.equals(this.modelValue(), optionValue, this.equalityKey());\n    }\n    isValidOption(option) {\n        return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n    }\n    isEmpty() {\n        return !this._options() || (this._options() && this._options().length === 0);\n    }\n    hasFilter() {\n        return this._filterValue() && this._filterValue().trim().length > 0;\n    }\n    resetFilter() {\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this._filterValue.set(null);\n    }\n    ngOnDestroy() {\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: Listbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }, { token: i1.PrimeNGConfig }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.2\", type: Listbox, selector: \"p-listbox\", inputs: { id: \"id\", searchMessage: \"searchMessage\", emptySelectionMessage: \"emptySelectionMessage\", selectionMessage: \"selectionMessage\", autoOptionFocus: \"autoOptionFocus\", selectOnFocus: \"selectOnFocus\", searchLocale: \"searchLocale\", focusOnHover: \"focusOnHover\", filterMessage: \"filterMessage\", filterFields: \"filterFields\", lazy: \"lazy\", virtualScroll: \"virtualScroll\", virtualScrollItemSize: \"virtualScrollItemSize\", virtualScrollOptions: \"virtualScrollOptions\", scrollHeight: \"scrollHeight\", tabindex: \"tabindex\", multiple: \"multiple\", style: \"style\", styleClass: \"styleClass\", listStyle: \"listStyle\", listStyleClass: \"listStyleClass\", readonly: \"readonly\", disabled: \"disabled\", checkbox: \"checkbox\", filter: \"filter\", filterBy: \"filterBy\", filterMatchMode: \"filterMatchMode\", filterLocale: \"filterLocale\", metaKeySelection: \"metaKeySelection\", dataKey: \"dataKey\", showToggleAll: \"showToggleAll\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", optionDisabled: \"optionDisabled\", ariaFilterLabel: \"ariaFilterLabel\", filterPlaceHolder: \"filterPlaceHolder\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", group: \"group\", options: \"options\", filterValue: \"filterValue\", selectAll: \"selectAll\" }, outputs: { onChange: \"onChange\", onClick: \"onClick\", onDblClick: \"onDblClick\", onFilter: \"onFilter\", onFocus: \"onFocus\", onBlur: \"onBlur\", onSelectAllChange: \"onSelectAllChange\" }, host: { classAttribute: \"p-element\" }, providers: [LISTBOX_VALUE_ACCESSOR], queries: [{ propertyName: \"headerFacet\", first: true, predicate: Header, descendants: true }, { propertyName: \"footerFacet\", first: true, predicate: Footer, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"headerCheckboxViewChild\", first: true, predicate: [\"headerchkbox\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }, { propertyName: \"lastHiddenFocusableElement\", first: true, predicate: [\"lastHiddenFocusableElement\"], descendants: true }, { propertyName: \"firstHiddenFocusableElement\", first: true, predicate: [\"firstHiddenFocusableElement\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }, { propertyName: \"listViewChild\", first: true, predicate: [\"list\"], descendants: true }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" [ngClass]=\"containerClass\" [ngStyle]=\"style\" [class]=\"styleClass\" (focusout)=\"onFocusout($event)\">\n            <span\n                #firstHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onFirstHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div *ngIf=\"checkbox && multiple && showToggleAll\" class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\" (click)=\"onToggleAll($event)\" (keydown)=\"onHeaderCheckboxKeyDown($event)\">\n                    <div class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        <input\n                            #headerchkbox\n                            type=\"checkbox\"\n                            readonly=\"readonly\"\n                            [attr.checked]=\"allSelected()\"\n                            [disabled]=\"disabled || toggleAllDisabled\"\n                            (focus)=\"onHeaderCheckboxFocus($event)\"\n                            (blur)=\"onHeaderCheckboxBlur($event)\"\n                            [attr.aria-label]=\"toggleAllAriaLabel\"\n                        />\n                    </div>\n                    <div class=\"p-checkbox-box\" role=\"checkbox\" [attr.aria-checked]=\"allSelected()\" [ngClass]=\"{ 'p-highlight': allSelected(), 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\">\n                        <ng-container *ngIf=\"allSelected()\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filterInput\n                            type=\"text\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            role=\"searchbox\"\n                            [value]=\"_filterValue() || ''\"\n                            [disabled]=\"disabled\"\n                            [attr.aria-owns]=\"id + '_list'\"\n                            [attr.aria-activedescendant]=\"focusedOptionId\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                            [tabindex]=\"!disabled && !focused ? tabindex : -1\"\n                            (input)=\"onFilterChange($event)\"\n                            (keydown)=\"onFilterKeyDown($event)\"\n                            (blur)=\"onFilterBlur($event)\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" [attr.aria-hidden]=\"true\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\" [attr.aria-hidden]=\"true\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                    <span role=\"status\" attr.aria-live=\"polite\" class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        {{ filterResultMessageText }}\n                    </span>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                <p-scroller\n                    #scroller\n                    *ngIf=\"virtualScroll\"\n                    [items]=\"visibleOptions()\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize\"\n                    [autoSize]=\"true\"\n                    [tabindex]=\"-1\"\n                    [lazy]=\"lazy\"\n                    [options]=\"virtualScrollOptions\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul\n                        #list\n                        class=\"p-listbox-list\"\n                        role=\"listbox\"\n                        [tabindex]=\"-1\"\n                        [attr.aria-multiselectable]=\"true\"\n                        [ngClass]=\"scrollerOptions.contentStyleClass\"\n                        [style]=\"scrollerOptions.contentStyle\"\n                        [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-multiselectable]=\"multiple\"\n                        [attr.aria-disabled]=\"disabled\"\n                        (focus)=\"onListFocus($event)\"\n                        (blur)=\"onListBlur($event)\"\n                        (keydown)=\"onListKeyDown($event)\"\n                    >\n                        <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                            <ng-container *ngIf=\"isOptionGroup(option)\">\n                                <li [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" class=\"p-listbox-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                </li>\n                            </ng-container>\n                            <ng-container *ngIf=\"!isOptionGroup(option)\">\n                                <li\n                                    pRipple\n                                    class=\"p-listbox-item\"\n                                    role=\"option\"\n                                    [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                    [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                    [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-focus': focusedOptionIndex() === getOptionIndex(i, scrollerOptions), 'p-disabled': isOptionDisabled(option) }\"\n                                    [attr.aria-label]=\"getOptionLabel(option)\"\n                                    [attr.aria-selected]=\"isSelected(option)\"\n                                    [attr.aria-disabled]=\"isOptionDisabled(option)\"\n                                    [attr.aria-setsize]=\"ariaSetSize\"\n                                    [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                    (click)=\"onOptionSelect($event, option, getOptionIndex(i, scrollerOptions))\"\n                                    (dblclick)=\"onOptionDoubleClick($event, option)\"\n                                    (mousedown)=\"onOptionMouseDown($event, getOptionIndex(i, scrollerOptions))\"\n                                    (mouseenter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                    (touchend)=\"onOptionTouchEnd()\"\n                                >\n                                    <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                        <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                            <ng-container *ngIf=\"isSelected(option)\">\n                                                <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                                                <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                                    <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                                </span>\n                                            </ng-container>\n                                        </div>\n                                    </div>\n                                    <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: getOptionIndex(i, scrollerOptions) }\"></ng-container>\n                                </li>\n                            </ng-container>\n                        </ng-template>\n                        <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{ emptyFilterMessageText }}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessage }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <span *ngIf=\"isEmpty()\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ emptyMessage }}\n            </span>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ selectedMessageText }}\n            </span>\n            <span\n                #lastHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onLastHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i2.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgForOf), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i2.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.Ripple), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(() => i4.Scroller), selector: \"p-scroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"component\", type: i0.forwardRef(() => SearchIcon), selector: \"SearchIcon\" }, { kind: \"component\", type: i0.forwardRef(() => CheckIcon), selector: \"CheckIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: Listbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-listbox', template: `\n        <div [attr.id]=\"id\" [ngClass]=\"containerClass\" [ngStyle]=\"style\" [class]=\"styleClass\" (focusout)=\"onFocusout($event)\">\n            <span\n                #firstHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onFirstHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div *ngIf=\"checkbox && multiple && showToggleAll\" class=\"p-checkbox p-component\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\" (click)=\"onToggleAll($event)\" (keydown)=\"onHeaderCheckboxKeyDown($event)\">\n                    <div class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        <input\n                            #headerchkbox\n                            type=\"checkbox\"\n                            readonly=\"readonly\"\n                            [attr.checked]=\"allSelected()\"\n                            [disabled]=\"disabled || toggleAllDisabled\"\n                            (focus)=\"onHeaderCheckboxFocus($event)\"\n                            (blur)=\"onHeaderCheckboxBlur($event)\"\n                            [attr.aria-label]=\"toggleAllAriaLabel\"\n                        />\n                    </div>\n                    <div class=\"p-checkbox-box\" role=\"checkbox\" [attr.aria-checked]=\"allSelected()\" [ngClass]=\"{ 'p-highlight': allSelected(), 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\">\n                        <ng-container *ngIf=\"allSelected()\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filterInput\n                            type=\"text\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            role=\"searchbox\"\n                            [value]=\"_filterValue() || ''\"\n                            [disabled]=\"disabled\"\n                            [attr.aria-owns]=\"id + '_list'\"\n                            [attr.aria-activedescendant]=\"focusedOptionId\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                            [tabindex]=\"!disabled && !focused ? tabindex : -1\"\n                            (input)=\"onFilterChange($event)\"\n                            (keydown)=\"onFilterKeyDown($event)\"\n                            (blur)=\"onFilterBlur($event)\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" [attr.aria-hidden]=\"true\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\" [attr.aria-hidden]=\"true\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                    <span role=\"status\" attr.aria-live=\"polite\" class=\"p-hidden-accessible\" [attr.data-p-hidden-accessible]=\"true\">\n                        {{ filterResultMessageText }}\n                    </span>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight || 'auto'\">\n                <p-scroller\n                    #scroller\n                    *ngIf=\"virtualScroll\"\n                    [items]=\"visibleOptions()\"\n                    [style]=\"{ height: scrollHeight }\"\n                    [itemSize]=\"virtualScrollItemSize\"\n                    [autoSize]=\"true\"\n                    [tabindex]=\"-1\"\n                    [lazy]=\"lazy\"\n                    [options]=\"virtualScrollOptions\"\n                    (onLazyLoad)=\"onLazyLoad.emit($event)\"\n                >\n                    <ng-template pTemplate=\"content\" let-items let-scrollerOptions=\"options\">\n                        <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n                    </ng-template>\n                    <ng-container *ngIf=\"loaderTemplate\">\n                        <ng-template pTemplate=\"loader\" let-scrollerOptions=\"options\">\n                            <ng-container *ngTemplateOutlet=\"loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                </p-scroller>\n                <ng-container *ngIf=\"!virtualScroll\">\n                    <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: visibleOptions(), options: {} }\"></ng-container>\n                </ng-container>\n\n                <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n                    <ul\n                        #list\n                        class=\"p-listbox-list\"\n                        role=\"listbox\"\n                        [tabindex]=\"-1\"\n                        [attr.aria-multiselectable]=\"true\"\n                        [ngClass]=\"scrollerOptions.contentStyleClass\"\n                        [style]=\"scrollerOptions.contentStyle\"\n                        [attr.aria-activedescendant]=\"focused ? focusedOptionId : undefined\"\n                        [attr.aria-label]=\"ariaLabel\"\n                        [attr.aria-multiselectable]=\"multiple\"\n                        [attr.aria-disabled]=\"disabled\"\n                        (focus)=\"onListFocus($event)\"\n                        (blur)=\"onListBlur($event)\"\n                        (keydown)=\"onListKeyDown($event)\"\n                    >\n                        <ng-template ngFor let-option [ngForOf]=\"items\" let-i=\"index\">\n                            <ng-container *ngIf=\"isOptionGroup(option)\">\n                                <li [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\" class=\"p-listbox-item-group\" [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\" role=\"option\">\n                                    <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: option.optionGroup }\"></ng-container>\n                                </li>\n                            </ng-container>\n                            <ng-container *ngIf=\"!isOptionGroup(option)\">\n                                <li\n                                    pRipple\n                                    class=\"p-listbox-item\"\n                                    role=\"option\"\n                                    [attr.id]=\"id + '_' + getOptionIndex(i, scrollerOptions)\"\n                                    [ngStyle]=\"{ height: scrollerOptions.itemSize + 'px' }\"\n                                    [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-focus': focusedOptionIndex() === getOptionIndex(i, scrollerOptions), 'p-disabled': isOptionDisabled(option) }\"\n                                    [attr.aria-label]=\"getOptionLabel(option)\"\n                                    [attr.aria-selected]=\"isSelected(option)\"\n                                    [attr.aria-disabled]=\"isOptionDisabled(option)\"\n                                    [attr.aria-setsize]=\"ariaSetSize\"\n                                    [ariaPosInset]=\"getAriaPosInset(getOptionIndex(i, scrollerOptions))\"\n                                    (click)=\"onOptionSelect($event, option, getOptionIndex(i, scrollerOptions))\"\n                                    (dblclick)=\"onOptionDoubleClick($event, option)\"\n                                    (mousedown)=\"onOptionMouseDown($event, getOptionIndex(i, scrollerOptions))\"\n                                    (mouseenter)=\"onOptionMouseEnter($event, getOptionIndex(i, scrollerOptions))\"\n                                    (touchend)=\"onOptionTouchEnd()\"\n                                >\n                                    <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                        <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                            <ng-container *ngIf=\"isSelected(option)\">\n                                                <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" [attr.aria-hidden]=\"true\" />\n                                                <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\" [attr.aria-hidden]=\"true\">\n                                                    <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                                </span>\n                                            </ng-container>\n                                        </div>\n                                    </div>\n                                    <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                                    <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: getOptionIndex(i, scrollerOptions) }\"></ng-container>\n                                </li>\n                            </ng-container>\n                        </ng-template>\n                        <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                                {{ emptyFilterMessageText }}\n                            </ng-container>\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\" role=\"option\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{ emptyMessage }}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ul>\n                </ng-template>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: modelValue(), options: visibleOptions() }\"></ng-container>\n            </div>\n            <span *ngIf=\"isEmpty()\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ emptyMessage }}\n            </span>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\">\n                {{ selectedMessageText }}\n            </span>\n            <span\n                #lastHiddenFocusableElement\n                role=\"presentation\"\n                [attr.aria-hidden]=\"true\"\n                class=\"p-hidden-accessible p-hidden-focusable\"\n                [tabindex]=\"!disabled ? tabindex : -1\"\n                (focus)=\"onLastHiddenFocus($event)\"\n                [attr.data-p-hidden-focusable]=\"true\"\n            >\n            </span>\n        </div>\n    `, providers: [LISTBOX_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }, { type: i1.PrimeNGConfig }, { type: i0.Renderer2 }], propDecorators: { id: [{\n                type: Input\n            }], searchMessage: [{\n                type: Input\n            }], emptySelectionMessage: [{\n                type: Input\n            }], selectionMessage: [{\n                type: Input\n            }], autoOptionFocus: [{\n                type: Input\n            }], selectOnFocus: [{\n                type: Input\n            }], searchLocale: [{\n                type: Input\n            }], focusOnHover: [{\n                type: Input\n            }], filterMessage: [{\n                type: Input\n            }], filterFields: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], virtualScrollItemSize: [{\n                type: Input\n            }], virtualScrollOptions: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], listStyle: [{\n                type: Input\n            }], listStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], checkbox: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], showToggleAll: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], filterPlaceHolder: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }], selectAll: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onDblClick: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onSelectAllChange: [{\n                type: Output\n            }], headerCheckboxViewChild: [{\n                type: ViewChild,\n                args: ['headerchkbox']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], lastHiddenFocusableElement: [{\n                type: ViewChild,\n                args: ['lastHiddenFocusableElement']\n            }], firstHiddenFocusableElement: [{\n                type: ViewChild,\n                args: ['firstHiddenFocusableElement']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], listViewChild: [{\n                type: ViewChild,\n                args: ['list']\n            }], headerFacet: [{\n                type: ContentChild,\n                args: [Header]\n            }], footerFacet: [{\n                type: ContentChild,\n                args: [Footer]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ListboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: ListboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.2\", ngImport: i0, type: ListboxModule, declarations: [Listbox], imports: [CommonModule, SharedModule, RippleModule, ScrollerModule, SearchIcon, CheckIcon], exports: [Listbox, SharedModule, ScrollerModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: ListboxModule, imports: [CommonModule, SharedModule, RippleModule, ScrollerModule, SearchIcon, CheckIcon, SharedModule, ScrollerModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: ListboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, RippleModule, ScrollerModule, SearchIcon, CheckIcon],\n                    exports: [Listbox, SharedModule, ScrollerModule],\n                    declarations: [Listbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LISTBOX_VALUE_ACCESSOR, Listbox, ListboxModule };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ExclamationTriangleIcon } from 'primeng/icons/exclamationtriangle';\nimport { InfoCircleIcon } from 'primeng/icons/infocircle';\nimport { TimesCircleIcon } from 'primeng/icons/timescircle';\n\n/**\n * Message groups a collection of contents in tabs.\n * @group Components\n */\nclass UIMessage {\n    /**\n     * Severity level of the message.\n     * @group Props\n     */\n    severity;\n    /**\n     * Text content.\n     * @group Props\n     */\n    text;\n    /**\n     * Whether displaying messages would be escaped or not.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    get icon() {\n        if (this.severity && this.severity.trim()) {\n            return this.severity;\n        }\n        else {\n            return 'info';\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: UIMessage, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.2\", type: UIMessage, selector: \"p-message\", inputs: { severity: \"severity\", text: \"text\", escape: \"escape\", style: \"style\", styleClass: \"styleClass\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div\n            aria-live=\"polite\"\n            class=\"p-inline-message p-component p-inline-message\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-inline-message-info': severity === 'info',\n                'p-inline-message-warn': severity === 'warn',\n                'p-inline-message-error': severity === 'error',\n                'p-inline-message-success': severity === 'success',\n                'p-inline-message-icon-only': this.text == null\n            }\"\n        >\n            <CheckIcon *ngIf=\"icon === 'success'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <InfoCircleIcon *ngIf=\"icon === 'info'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <TimesCircleIcon *ngIf=\"icon === 'error'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <ExclamationTriangleIcon *ngIf=\"icon === 'warn'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{ text }}</span>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(() => CheckIcon), selector: \"CheckIcon\" }, { kind: \"component\", type: i0.forwardRef(() => InfoCircleIcon), selector: \"InfoCircleIcon\" }, { kind: \"component\", type: i0.forwardRef(() => TimesCircleIcon), selector: \"TimesCircleIcon\" }, { kind: \"component\", type: i0.forwardRef(() => ExclamationTriangleIcon), selector: \"ExclamationTriangleIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: UIMessage, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-message', template: `\n        <div\n            aria-live=\"polite\"\n            class=\"p-inline-message p-component p-inline-message\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-inline-message-info': severity === 'info',\n                'p-inline-message-warn': severity === 'warn',\n                'p-inline-message-error': severity === 'error',\n                'p-inline-message-success': severity === 'success',\n                'p-inline-message-icon-only': this.text == null\n            }\"\n        >\n            <CheckIcon *ngIf=\"icon === 'success'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <InfoCircleIcon *ngIf=\"icon === 'info'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <TimesCircleIcon *ngIf=\"icon === 'error'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <ExclamationTriangleIcon *ngIf=\"icon === 'warn'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{ text }}</span>\n            </ng-template>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}}\\n\"] }]\n        }], propDecorators: { severity: [{\n                type: Input\n            }], text: [{\n                type: Input\n            }], escape: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }] } });\nclass MessageModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: MessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.2\", ngImport: i0, type: MessageModule, declarations: [UIMessage], imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon], exports: [UIMessage] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: MessageModule, imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.2\", ngImport: i0, type: MessageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon],\n                    exports: [UIMessage],\n                    declarations: [UIMessage]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MessageModule, UIMessage };\n"],"names":["NgIf","DestroyRef","EventEmitter","inject","takeUntilDestroyed","FormsModule","ReactiveFormsModule","UntypedFormControl","SharedModule","ButtonModule","DialogModule","InputTextModule","TableModule","catchError","debounceTime","mergeMap","of","appSettings","FileBrowserFile","FileBrowserFileType","FileSystemService","joinPaths","splitPathInChunks","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","selectedFilePath","ɵɵtext","ɵɵtemplate","FileBrowserComponent_ng_template_4_i_3_Template","FileBrowserComponent_ng_template_4_i_4_Template","FileBrowserComponent_ng_template_4_i_5_Template","file_r4","ɵɵattribute","name","ctx_r2","isFolder","type","isFolderUp","isFile","ɵɵtextInterpolate","ɵɵlistener","FileBrowserComponent_ng_template_5_Template_p_button_click_1_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","close","FileBrowserComponent_ng_template_5_Template_p_button_click_2_listener","ctx_r11","selectFile","FileBrowserComponent","constructor","visible","visibleChange","path","pathChange","folderMode","FOLDER_UP","includeFiles","includeFolders","fileSystemService","destroyRef","ngOnInit","valueChanges","pipe","browse","subscribe","next","result","loadFileBrowserResult","select","selectedFile","FOLDER","folder","pathInChunks","fileBrowserPath","parentFolderchunks","slice","length","match","getFilePath","setValue","FILE","emit","value","fileBrowserResult","selectedFileName","getSelectedFileName","fileBrowserFiles","getFileBrowserFiles","unshift","scrollToSelectedFileName","filter","part","includes","files","folders","forEach","push","file","fileBrowserFile","setTimeout","row","rowElements","find","r","nativeElement","getAttribute","scrollIntoView","inline","block","endsWith","pathSeparator","_","_2","selectors","viewQuery","FileBrowserComponent_Query","rf","ctx","ɵɵtwoWayListener","FileBrowserComponent_Template_p_dialog_visibleChange_0_listener","$event","ɵɵtwoWayBindingSet","FileBrowserComponent_Template_p_table_selectionChange_1_listener","FileBrowserComponent_Template_p_table_onRowSelect_1_listener","FileBrowserComponent_ng_template_2_Template","FileBrowserComponent_ng_template_3_Template","FileBrowserComponent_ng_template_4_Template","FileBrowserComponent_ng_template_5_Template","ɵɵtwoWayProperty","i1","DefaultValueAccessor","NgControlStatus","FormControlDirective","i2","Dialog","i3","PrimeTemplate","i4","Table","SelectableRow","i5","Button","i6","InputText","styles","NgClass","forwardRef","NG_VALUE_ACCESSOR","DropdownModule","InputComponent","InputDropdownComponent","writeValue","obj","changeDetectorRef","detectChanges","onDropDownChange","event","changeEvent","originalEvent","t","inputs","options","standalone","features","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","InputDropdownComponent_Template","InputDropdownComponent_Template_p_dropdown_onFocus_0_listener","onFocus","InputDropdownComponent_Template_p_dropdown_onChange_0_listener","InputDropdownComponent_Template_p_dropdown_onBlur_0_listener","onBlur","id","formControlName","control","validationClass","Dropdown","InputFileBrowserComponent_app_file_browser_3_Template_app_file_browser_visibleChange_0_listener","_r2","ctx_r1","showFileBrowser","InputFileBrowserComponent_app_file_browser_3_Template_app_file_browser_pathChange_0_listener","ctx_r3","setFilePath","browserPath","InputFileBrowserComponent","placeholder","openFileBrowser","filePath","InputFileBrowserComponent_Template","InputFileBrowserComponent_Template_input_focus_1_listener","InputFileBrowserComponent_Template_input_keydown_1_listener","onKeyDown","InputFileBrowserComponent_Template_input_keyup_1_listener","onKeyUp","InputFileBrowserComponent_Template_input_change_1_listener","onChange","InputFileBrowserComponent_Template_input_blur_1_listener","InputFileBrowserComponent_Template_p_button_onClick_2_listener","InputFileBrowserComponent_app_file_browser_3_Template","NgFor","InputMultiFileBrowserComponent_div_1_Template_input_keyup_2_listener","restoredCtx","_r5","value_r2","$implicit","ctx_r4","onValueKeyup","InputMultiFileBrowserComponent_div_1_Template_p_button_onClick_3_listener","i_r3","index","ctx_r6","InputMultiFileBrowserComponent_div_1_Template_p_button_onClick_4_listener","ctx_r7","removeValue","InputMultiFileBrowserComponent_app_file_browser_7_Template_app_file_browser_visibleChange_0_listener","_r9","ctx_r8","InputMultiFileBrowserComponent_app_file_browser_7_Template_app_file_browser_pathChange_0_listener","ctx_r10","InputMultiFileBrowserComponent","addButtonDisabled","browserIndex","values","trackValueByIndex","originalValue","changedValue","target","trim","map","val","onNewValueKeyup","addNewValue","newValue","concat","InputMultiFileBrowserComponent_Template","InputMultiFileBrowserComponent_div_1_Template","InputMultiFileBrowserComponent_Template_input_ngModelChange_4_listener","InputMultiFileBrowserComponent_Template_input_keyup_4_listener","InputMultiFileBrowserComponent_Template_p_button_onClick_5_listener","InputMultiFileBrowserComponent_Template_p_button_onClick_6_listener","InputMultiFileBrowserComponent_app_file_browser_7_Template","NgModel","InputMultiTextComponent_div_1_p_dropdown_1_Template_p_dropdown_onChange_0_listener","value_r3","onValueChange","ctx_r5","i_r4","InputMultiTextComponent_div_1_input_2_Template_input_keyup_0_listener","_r13","InputMultiTextComponent_div_1_p_dropdown_1_Template","InputMultiTextComponent_div_1_input_2_Template","InputMultiTextComponent_div_1_Template_p_button_onClick_3_listener","_r16","ctx_r15","InputMultiTextComponent_p_dropdown_3_Template_p_dropdown_ngModelChange_0_listener","_r18","ctx_r17","InputMultiTextComponent_p_dropdown_3_Template_p_dropdown_onChange_0_listener","ctx_r19","onNewValueChange","InputMultiTextComponent_input_4_Template_input_ngModelChange_0_listener","_r21","ctx_r20","InputMultiTextComponent_input_4_Template_input_keyup_0_listener","ctx_r22","InputMultiTextComponent","InputMultiTextComponent_Template","InputMultiTextComponent_div_1_Template","InputMultiTextComponent_p_dropdown_3_Template","InputMultiTextComponent_input_4_Template","InputMultiTextComponent_Template_p_button_onClick_5_listener","FileBrowserResult","UntypedFormBuilder","Validators","PanelModule","AppSettingsService","IconDropdownComponent","InputNumberComponent","GeneralSettings","SettingsService","MessageService","FormUtils","FormValidators","saveAttempt","SettingsGeneralComponent_form_2_div_215_Template","SettingsGeneralComponent_form_2_Template_p_button_onClick_251_listener","_r3","save","settingsForm","languages","enabledOrDisabled","ɵɵtextInterpolate1","scanDiskIntervalDefault","checkSubIntervalDefault","checkSubDeadlineDefault","checkSubDeltaDefault","checkVersionIntervalDefault","showFfmpegPath","timestampFormats","SettingsGeneralComponent","fb","settingsService","appSettingsService","messageService","initDefaults","buildSelectItems","getGeneralSettings","generalSettings","buildForm","error","showErrorMessage","valid","updateGeneralSettings","showSuccessMessage","reload","scrollToFirstInvalidField","getFormControlValue","enabledOrDisabledSelectItems","label","language","code","group","videoPaths","required","notEmpty","defaultLanguage","defaultLanguageSuffix","additionalLanguages","manualSearchWithScoring","scanDiskInterval","scanDiskAtStartup","checkSubInterval","checkSubAtStartup","checkSubDeadline","checkSubDelta","checkVersionInterval","checkVersionAtStartup","checkVersionAutoUpdate","scanEmbeddedSubs","scanHardcodedSubs","skipHiddenDirs","detectInvalidSubLanguage","detectedLanguageProbability","manualSubSync","ffmpegPath","minVideoFileSize","maxDbResults","timestampFormat","validator","globalFormValidator","formGroup","ffmpegPathRequired","addFormControlValidationErrors","controls","markFormControlFieldsAsDirty","clearFormControlValidationErrors","settings","SettingsGeneralComponent_Template","SettingsGeneralComponent_form_2_Template","Panel","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","LibrarySettings","SettingsLibraryComponent_form_2_Template_p_button_onClick_56_listener","scanLibraryIntervalDefault","SettingsLibraryComponent","getLibrarySettings","librarySettings","updateLibrarySettings","libraryMode","libraryPaths","scanLibraryInterval","scanLibraryAtStartup","libraryEditMode","SettingsLibraryComponent_Template","SettingsLibraryComponent_form_2_Template","InputTextComponent","LogSettings","SettingsLoggingComponent_form_2_Template_p_button_onClick_92_listener","logLevels","SettingsLoggingComponent","getLogSettings","logSettings","updateLogSettings","logFile","logLevel","logNum","logSize","logHttpAccess","logExternalLibs","logDetailedFormat","logReversed","logLevelConsole","SettingsLoggingComponent_Template","SettingsLoggingComponent_form_2_Template","MessageModule","NameMappingSettings","SettingsNamemappingComponent_form_2_Template_p_button_onClick_89_listener","SettingsNamemappingComponent","getNameMappingSettings","nameMappingSettings","updateNameMappingSettings","showNameMapping","addic7edShowNameMapping","alternativeShowNameMapping","movieNameMapping","alternativeMovieNameMapping","SettingsNamemappingComponent_Template","SettingsNamemappingComponent_form_2_Template","UIMessage","NotificationSettings","SettingsNotificationComponent_form_2_Template_p_button_onClick_23_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_125_listener","test","SettingsNotificationComponent_form_2_Template_p_button_onClick_126_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_162_listener","registerTwitter","SettingsNotificationComponent_form_2_Template_p_button_onClick_163_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_164_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_191_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_192_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_239_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_240_listener","ctx_r12","SettingsNotificationComponent_form_2_Template_p_button_onClick_294_listener","ctx_r13","SettingsNotificationComponent_form_2_Template_p_button_onClick_295_listener","ctx_r14","SettingsNotificationComponent_form_2_Template_p_button_onClick_335_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_336_listener","ctx_r16","SettingsNotificationComponent_form_2_Template_p_button_onClick_363_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_364_listener","ctx_r18","SettingsNotificationComponent_form_2_Template_p_button_onClick_408_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_409_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_412_listener","ctx_r21","growlProwlPriorities","SettingsNotificationComponent_div_4_Template_input_ngModelChange_29_listener","_r23","twitterRegistration","tokenPin","SettingsNotificationComponent_div_4_Template_p_button_onClick_30_listener","ctx_r24","authorizeTwitter","url","ɵɵsanitizeUrl","SettingsNotificationComponent","twitterRegistrationDialog","getNotificationSettings","notificationSettings","updateNotificationSettings","notifierName","testNotifier","twitterAuthorization","setFormControlValue","twitterKey","twitterSecret","notify","notifyMail","mailServer","mailFromName","mailFrom","mailTo","mailUserName","mailPassword","mailSubject","mailEncryption","mailAuthentication","notifyTwitter","notifyPushalot","pushalotApi","notifyPushover","pushoverKey","pushoverApi","pushoverDevices","notifyGrowl","growlHost","growlPort","growlPassword","growlPriority","notifyProwl","prowlApi","prowlPriority","notifyPushbullet","pushbulletApi","notifyTelegram","telegramBotApi","telegramChatId","SettingsNotificationComponent_Template","SettingsNotificationComponent_form_2_Template","SettingsNotificationComponent_Template_p_dialog_visibleChange_3_listener","SettingsNotificationComponent_div_4_Template","PostProcessSettings","SettingsPostprocessingComponent_form_2_Template_p_button_onClick_82_listener","SettingsPostprocessingComponent","getPostProcessSettings","postProcessSettings","updatePostProcessSettings","postProcess","postProcessIndividual","postProcessUtf8Encoding","showPostProcessCmd","showPostProcessArgs","moviePostProcessCmd","moviePostProcessArgs","SettingsPostprocessingComponent_Template","SettingsPostprocessingComponent_form_2_Template","SettingsSkipmappingComponent","SettingsSubliminalComponent","SettingsWebserverComponent","routes","redirectTo","pathMatch","component","SkipMappingSettings","SettingsSkipmappingComponent_form_2_Template_p_button_onClick_45_listener","getSkipMappingSettings","skipMappingSettings","updateSkipMappingSettings","skipShowMapping","skipMovieMapping","SettingsSkipmappingComponent_Template","SettingsSkipmappingComponent_form_2_Template","ListboxModule","InputSwitchComponent","SubliminalSettings","SettingsSubliminalComponent_form_2_Template_p_button_onClick_214_listener","subliminalProviders","antiCaptchaProviders","getSubliminalSettings","subliminalSettings","updateSubliminalSettings","provider","source","class","showMatchSource","showMatchQuality","showMatchCodec","showMatchReleaseGroup","movieMatchSource","movieMatchQuality","movieMatchCodec","movieMatchReleaseGroup","subtitleUtf8Encoding","refineVideo","omdbApiKey","manualRefineVideo","preferHearingImpaired","antiCaptchaClass","antiCaptchaClientKey","addic7edUserName","addic7edPassword","addic7edUserId","opensubtitlesUserName","opensubtitlesPassword","opensubtitlesApiKey","legendastvUserName","legendastvPassword","SettingsSubliminalComponent_Template","SettingsSubliminalComponent_form_2_Template","Listbox","WebServerSettings","SettingsWebserverComponent_form_2_Template_app_input_text_keyUpEvent_34_listener","formatWebRoot","SettingsWebserverComponent_form_2_Template_p_button_onClick_72_listener","getWebServerSettings","webServerSettings","webRoot","startsWith","replace","RegExp","updateWebServerSettings","webServerIp","webServerPort","userName","password","launchBrowser","SettingsWebserverComponent_Template","SettingsWebserverComponent_form_2_Template","ApiServiceTemplate","URL","httpClient","get","factory","ɵfac","providedIn","asyncScheduler","operate","createOperatorSubscriber","dueTime","scheduler","subscriber","activeTask","lastValue","lastTime","unsubscribe","emitWhenIdle","targetTime","now","schedule","undefined","add","complete","signal","computed","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChild","ContentChildren","NgModule","CommonModule","Header","Footer","DomHandler","ObjectUtils","UniqueComponentId","RippleModule","SearchIcon","CheckIcon","ScrollerModule","_c0","_c1","_c2","_c3","_c4","_c5","Listbox_div_3_ng_container_2_Template","ɵɵelementContainer","_c6","a0","a1","Listbox_div_3_Template","ɵɵprojection","headerTemplate","ɵɵpureFunction2","modelValue","visibleOptions","Listbox_div_4_div_1_ng_container_5_CheckIcon_1_Template","Listbox_div_4_div_1_ng_container_5_span_2_1_ng_template_0_Template","Listbox_div_4_div_1_ng_container_5_span_2_1_Template","Listbox_div_4_div_1_ng_container_5_span_2_Template","checkIconTemplate","Listbox_div_4_div_1_ng_container_5_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","_c7","_c8","a2","Listbox_div_4_div_1_Template","_r22","ɵɵgetCurrentView","Listbox_div_4_div_1_Template_div_click_0_listener","onToggleAll","Listbox_div_4_div_1_Template_div_keydown_0_listener","ctx_r23","onHeaderCheckboxKeyDown","Listbox_div_4_div_1_Template_input_focus_2_listener","onHeaderCheckboxFocus","Listbox_div_4_div_1_Template_input_blur_2_listener","ctx_r25","onHeaderCheckboxBlur","ɵɵpureFunction1","disabled","toggleAllDisabled","allSelected","toggleAllAriaLabel","ɵɵpureFunction3","headerCheckboxFocus","Listbox_div_4_ng_container_2_ng_container_1_Template","_c9","Listbox_div_4_ng_container_2_Template","filterTemplate","filterOptions","Listbox_div_4_ng_template_3_div_0_SearchIcon_3_Template","Listbox_div_4_ng_template_3_div_0_span_4_1_ng_template_0_Template","Listbox_div_4_ng_template_3_div_0_span_4_1_Template","Listbox_div_4_ng_template_3_div_0_span_4_Template","ctx_r30","filterIconTemplate","Listbox_div_4_ng_template_3_div_0_Template","_r34","Listbox_div_4_ng_template_3_div_0_Template_input_input_1_listener","ctx_r33","onFilterChange","Listbox_div_4_ng_template_3_div_0_Template_input_keydown_1_listener","ctx_r35","onFilterKeyDown","Listbox_div_4_ng_template_3_div_0_Template_input_blur_1_listener","ctx_r36","onFilterBlur","ctx_r27","_filterValue","focused","tabindex","focusedOptionId","filterPlaceHolder","ariaFilterLabel","Listbox_div_4_ng_template_3_Template","filterResultMessageText","Listbox_div_4_Template","ɵɵtemplateRefExtractor","_r14","ɵɵreference","checkbox","multiple","showToggleAll","Listbox_p_scroller_6_ng_template_2_ng_container_0_Template","Listbox_p_scroller_6_ng_template_2_Template","items_r40","scrollerOptions_r41","_r6","Listbox_p_scroller_6_ng_container_3_ng_template_1_ng_container_0_Template","Listbox_p_scroller_6_ng_container_3_ng_template_1_Template","scrollerOptions_r44","ctx_r43","loaderTemplate","Listbox_p_scroller_6_ng_container_3_Template","_c10","height","Listbox_p_scroller_6_Template","_r47","Listbox_p_scroller_6_Template_p_scroller_onLazyLoad_0_listener","ctx_r46","onLazyLoad","ɵɵstyleMap","scrollHeight","virtualScrollItemSize","lazy","virtualScrollOptions","Listbox_ng_container_7_ng_container_1_Template","_c11","Listbox_ng_container_7_Template","ɵɵpureFunction0","Listbox_ng_template_8_ng_template_2_ng_container_0_span_2_Template","option_r55","ctx_r59","getOptionGroupLabel","optionGroup","Listbox_ng_template_8_ng_template_2_ng_container_0_ng_container_3_Template","_c12","Listbox_ng_template_8_ng_template_2_ng_container_0_Template","ctx_r63","i_r56","scrollerOptions_r50","ctx_r57","itemSize","getOptionIndex","groupTemplate","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_CheckIcon_1_Template","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_span_2_1_ng_template_0_Template","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_span_2_1_Template","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_span_2_Template","ctx_r69","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_ng_container_2_Template","ctx_r67","_c13","Listbox_ng_template_8_ng_template_2_ng_container_1_div_2_Template","ctx_r64","isOptionDisabled","isSelected","Listbox_ng_template_8_ng_template_2_ng_container_1_span_3_Template","ctx_r65","getOptionLabel","Listbox_ng_template_8_ng_template_2_ng_container_1_ng_container_4_Template","_c14","a3","_c15","Listbox_ng_template_8_ng_template_2_ng_container_1_Template","_r76","Listbox_ng_template_8_ng_template_2_ng_container_1_Template_li_click_1_listener","ctx_r75","ctx_r74","onOptionSelect","Listbox_ng_template_8_ng_template_2_ng_container_1_Template_li_dblclick_1_listener","ctx_r78","onOptionDoubleClick","Listbox_ng_template_8_ng_template_2_ng_container_1_Template_li_mousedown_1_listener","ctx_r80","onOptionMouseDown","Listbox_ng_template_8_ng_template_2_ng_container_1_Template_li_mouseenter_1_listener","ctx_r83","onOptionMouseEnter","Listbox_ng_template_8_ng_template_2_ng_container_1_Template_li_touchend_1_listener","ctx_r86","onOptionTouchEnd","ctx_r88","ctx_r58","focusedOptionIndex","getAriaPosInset","ariaSetSize","itemTemplate","Listbox_ng_template_8_ng_template_2_Template","ctx_r52","isOptionGroup","Listbox_ng_template_8_li_3_ng_container_1_Template","ctx_r89","emptyFilterMessageText","Listbox_ng_template_8_li_3_ng_container_2_Template","Listbox_ng_template_8_li_3_Template","ctx_r53","emptyFilterTemplate","emptyTemplate","emptyFilter","Listbox_ng_template_8_li_4_ng_container_1_Template","ctx_r92","emptyMessage","Listbox_ng_template_8_li_4_ng_container_2_Template","Listbox_ng_template_8_li_4_Template","ctx_r54","empty","Listbox_ng_template_8_Template","_r96","Listbox_ng_template_8_Template_ul_focus_0_listener","ctx_r95","onListFocus","Listbox_ng_template_8_Template_ul_blur_0_listener","ctx_r97","onListBlur","Listbox_ng_template_8_Template_ul_keydown_0_listener","ctx_r98","onListKeyDown","items_r49","contentStyle","contentStyleClass","ariaLabel","hasFilter","isEmpty","Listbox_div_10_ng_container_2_Template","Listbox_div_10_Template","footerTemplate","Listbox_span_11_Template","_c16","_c17","LISTBOX_VALUE_ACCESSOR","el","cd","filterService","config","renderer","searchMessage","emptySelectionMessage","selectionMessage","autoOptionFocus","selectOnFocus","searchLocale","focusOnHover","filterMessage","filterFields","virtualScroll","style","styleClass","listStyle","listStyleClass","readonly","filterBy","filterMatchMode","filterLocale","metaKeySelection","dataKey","optionLabel","optionValue","optionGroupChildren","optionGroupLabel","optionDisabled","emptyFilterMessage","_options","set","filterValue","selectAll","_selectAll","onClick","onDblClick","onFilter","onSelectAllChange","headerCheckboxViewChild","filterViewChild","lastHiddenFocusableElement","firstHiddenFocusableElement","scroller","listViewChild","headerFacet","footerFacet","templates","_filteredOptions","filtered","onModelChange","onModelTouched","optionTouched","focus","translationSubscription","containerClass","isNotEmpty","filterMessageText","replaceAll","translation","searchMessageText","emptySearchMessage","selectionMessageText","emptySelectionMessageText","selectedMessageText","hasSelectedOption","option","virtualScrollerDisabled","searchFields","aria","searchValue","searchTimeout","startRangeIndex","flatOptions","translationObserver","markForCheck","autoUpdateModel","reset","resetFilter","ngAfterContentInit","item","getType","registerOnChange","fn","registerOnTouched","setDisabledState","reduce","getOptionGroupChildren","o","findFirstFocusedOptionIndex","updateModel","removeOption","equals","getOptionValue","equalityKey","onOptionSelectMultiple","onOptionSelectSingle","selected","metaSelection","metaKey","ctrlKey","valueChanged","onOptionSelectRange","start","end","findNearestSelectedOptionIndex","rangeStart","Math","min","rangeEnd","max","isValidOption","checked","preventDefault","every","changeFocusedOptionIndex","onFirstHiddenFocus","firstFocusableEl","getFirstFocusableElement","tabIndex","onLastHiddenFocus","relatedTarget","onFocusout","contains","onHeaderCheckboxTabKeyDown","scrollToIndex","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onShiftKey","isPrintableCharacter","key","searchOptions","onArrowLeftKey","onEnterKey","optionIndex","findNextOptionIndex","shiftKey","findPrevOptionIndex","findLastFocusedOptionIndex","pressedInInputText","currentTarget","setSelectionRange","findFirstOptionIndex","len","findLastOptionIndex","scrollInView","resolveFieldData","items","scrollerOptions","getItemOptions","char","matched","findIndex","isOptionMatched","clearTimeout","toLocaleLowerCase","element","findSingle","findLastIndex","selectedIndex","findFirstSelectedOptionIndex","findLastSelectedOptionIndex","isValidSelectedOption","matchedOptionIndex","findNextSelectedOptionIndex","findPrevSelectedOptionIndex","firstCheckUp","some","ngOnDestroy","Listbox_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","FilterService","PrimeNGConfig","Renderer2","ɵcmp","ɵɵdefineComponent","contentQueries","Listbox_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","Listbox_Query","ɵɵviewQuery","hostAttrs","outputs","ngContentSelectors","Listbox_Template","ɵɵprojectionDef","Listbox_Template_div_focusout_0_listener","Listbox_Template_span_focus_1_listener","Listbox_Template_span_focus_14_listener","ɵɵclassMap","ɵɵstyleProp","dependencies","NgForOf","NgTemplateOutlet","NgStyle","Ripple","Scroller","encapsulation","changeDetection","ngDevMode","ListboxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ExclamationTriangleIcon","InfoCircleIcon","TimesCircleIcon","UIMessage_CheckIcon_1_Template","UIMessage_InfoCircleIcon_2_Template","UIMessage_TimesCircleIcon_3_Template","UIMessage_ExclamationTriangleIcon_4_Template","UIMessage_div_5_span_1_Template","text","ɵɵsanitizeHtml","UIMessage_div_5_Template","escape","UIMessage_ng_template_6_span_0_Template","UIMessage_ng_template_6_Template","a4","severity","icon","UIMessage_Factory","UIMessage_Template","ɵɵpureFunction5","MessageModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[31,32,33]}