{"version":3,"file":"514.7354a4c1668498ef.js","mappings":"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","sources":["./src/app/core/services/api/log.service.ts","./src/app/modules/log/clear/log-clear.component.ts","./src/app/modules/log/log-routing.module.ts","./src/app/modules/log/log.module.ts","./src/app/modules/log/view/log-view.component.ts","./src/app/modules/log/view/log-view.component.html","./src/app/shared/models/loglevel.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/logs`;\r\n\r\n  getLogs(lognum?: number): Observable<string[]> {\r\n    const url = lognum ? `${this.URL}/${lognum}` : this.URL;\r\n    return this.httpClient.get<string[]>(url, this.options);\r\n  }\r\n\r\n  clearLogs(): Observable<boolean> {\r\n    return this.httpClient.delete<void>(this.URL, this.options)\r\n      .pipe(map(() => true));\r\n  }\r\n\r\n  getLogCount(): Observable<number> {\r\n    return this.httpClient.get<Count>(`${this.URL}/count`, this.options)\r\n      .pipe(map((count) => count.count));\r\n  }\r\n}\r\n\r\ntype Count = { count: number };\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-log-clear',\r\n  templateUrl: './log-clear.component.html',\r\n  styleUrls: ['./log-clear.component.scss']\r\n})\r\nexport class LogClearComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private logService: LogService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.logService.clearLogs().subscribe({\r\n      next: (result) => {\r\n        // Redirect to log view after the logs are cleared\r\n        if (result) {\r\n          this.router.navigateByUrl('/log/view');\r\n        }\r\n      },\r\n      error: () => this.messageService.showErrorMessage(`Unable to clear the logs!`)\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\nimport { LogViewComponent } from './view/log-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'view',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'view',\r\n    component: LogViewComponent\r\n  },\r\n  {\r\n    path: 'clear',\r\n    component: LogClearComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'view'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LogRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { LogRoutingModule } from './log-routing.module';\r\nimport { LogViewComponent } from './view/log-view.component';\r\nimport { LogClearComponent } from './clear/log-clear.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LogViewComponent,\r\n    LogClearComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    LogRoutingModule\r\n  ]\r\n})\r\nexport class LogModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\r\nimport { appSettings } from '../../../app-settings.service';\r\nimport { LogService } from '../../../core/services/api/log.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { ScrollService } from '../../../core/services/scroll.service';\r\nimport { Loglevel } from '../../../shared/models/loglevel';\r\n\r\n@Component({\r\n  selector: 'app-log-view',\r\n  templateUrl: './log-view.component.html',\r\n  styleUrls: ['./log-view.component.scss']\r\n})\r\nexport class LogViewComponent implements OnInit {\r\n\r\n  private readonly LOG_MESSAGE_REGEX = /^((?<date>\\d{4}-\\d{2}-\\d{2})\\s(?<time>\\d{2}:\\d{2}:\\d{2},\\d{3})\\s(?<loglevel>\\w+))/;\r\n\r\n  logNums: number[];\r\n  selectedLogNum = 0;\r\n  loglevels: SelectItem[];\r\n  selectedLoglevel = '';\r\n  loading = false;\r\n  tailing = false;\r\n  tailingDisabled = false; // true for non current (lognum != 0) logfiles as tailing has no use in this case\r\n  tailButtonLabel = 'Start tailing';\r\n  tailButtonIcon = 'pi pi-play';\r\n\r\n  private logWebsocket: WebSocketSubject<string>;\r\n  private logMessages: string[] = [];\r\n\r\n  constructor(private logService: LogService, private messageService: MessageService, private scrollService: ScrollService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loglevels = this.getLogLevels();\r\n    this.logService.getLogCount().subscribe({\r\n      next: (count) => this.logNums = Array.from(Array(count).keys()).map((i) => i + 1) // get array starting from 1\r\n    });\r\n    this.getLogs(0); // 0 = current logfile\r\n  }\r\n\r\n  getLogs(logNum: number): void {\r\n    this.loading = true;\r\n    this.selectedLogNum = logNum;\r\n    this.tailingDisabled = this.selectedLogNum !== 0; // tailing only allowed when on current logfile -> lognum = 0\r\n    this.logService.getLogs(logNum).subscribe({\r\n      next: (logLines) => {\r\n        this.logMessages = logLines;\r\n        this.loading = false;\r\n        this.handleLogTailing();\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the logs!')\r\n    });\r\n  }\r\n\r\n  toggleTailing(): void {\r\n    this.tailing = !this.tailing;\r\n    if (this.tailing) {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Stop tailing';\r\n      this.tailButtonIcon = 'pi pi-pause';\r\n      // Scroll to right position when tailing is enabled\r\n      if (appSettings.logReversed) {\r\n        this.scrollService.triggerScrollUp();\r\n      } else {\r\n        this.scrollService.triggerScrollDown();\r\n      }\r\n    } else {\r\n      // Change button label\r\n      this.tailButtonLabel = 'Start tailing';\r\n      this.tailButtonIcon = 'pi pi-play';\r\n    }\r\n    this.handleLogTailing();\r\n  }\r\n\r\n  get filteredLogMessages(): string[] {\r\n    return this.logMessages.filter((logMessage) => {\r\n      if (this.selectedLoglevel) {\r\n        const match = this.LOG_MESSAGE_REGEX.exec(logMessage);\r\n        return match && match.groups['loglevel'] === this.selectedLoglevel;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get logContent(): string {\r\n    return this.filteredLogMessages.join('\\n');\r\n  }\r\n\r\n  private getLogLevels(): SelectItem[] {\r\n    const logLevels: SelectItem[] = [];\r\n    logLevels.push({ label: 'ALL', value: '' });\r\n    Object.entries(Loglevel).forEach((entry) => logLevels.push({ label: entry[0], value: entry[1] }));\r\n    return logLevels;\r\n  }\r\n\r\n  private createLogWebSocket(): WebSocketSubject<string> {\r\n    let protocol = 'ws:';\r\n    if (window.location.protocol === 'https:') {\r\n      protocol = 'wss:';\r\n    }\r\n    const url = `${protocol}//${window.location.host}${appSettings.webRoot}/websocket/log`;\r\n    const config: WebSocketSubjectConfig<string> = {\r\n      url,\r\n      deserializer: (e: MessageEvent) => e.data as string,\r\n      serializer: (value: string) => value\r\n    };\r\n    return webSocket(config);\r\n  }\r\n\r\n  private handleLogTailing(): void {\r\n    if (this.tailing && !this.tailingDisabled) {\r\n      // Subscribe on new logs once loaded (only for current logfile -> logNum = 0)\r\n      this.logWebsocket = this.createLogWebSocket(); // Need to create a new socket after unsubscribe\r\n      this.logWebsocket.subscribe({\r\n        next: (logMessage) => {\r\n          if (appSettings.logReversed) {\r\n            // Append to the top\r\n            this.logMessages.unshift(logMessage);\r\n            this.scrollService.triggerScrollUp();\r\n          } else {\r\n            // Append to the end\r\n            this.logMessages.push(logMessage);\r\n            this.scrollService.triggerScrollDown();\r\n          }\r\n        }\r\n      });\r\n      console.log('Log tailing enabled');\r\n    } else {\r\n      // Unsubscribe when not tailing\r\n      if (this.logWebsocket) {\r\n        this.logWebsocket.unsubscribe();\r\n      }\r\n      console.log('Log tailing disabled');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel>\r\n    <!-- Custom panel header -->\r\n    <ng-template pTemplate=\"header\">\r\n      <div class=\"w-100\">\r\n        <div class=\"p-panel-title\">Logfile</div>\r\n        <div>\r\n          <span class=\"log-num\">\r\n            <span class=\"p-tag p-tag-rounded\" [ngClass]=\"{'p-tag-secondary': selectedLogNum !== 0}\" (click)=\"getLogs(0)\">current</span>\r\n            <span *ngFor=\"let logNum of logNums\" class=\"p-badge\" [ngClass]=\"{'p-badge-secondary': selectedLogNum !== logNum}\" (click)=\"getLogs(logNum)\">{{logNum}}</span>\r\n          </span>\r\n          <span class=\"log-tail\">\r\n            <p-button [label]=\"tailButtonLabel\" [icon]=\"tailButtonIcon\" styleClass=\"p-button-outlined\" [disabled]=\"tailingDisabled\" (onClick)=\"toggleTailing()\"></p-button>\r\n          </span>\r\n          <span class=\"log-level\">\r\n            <p-dropdown [options]=\"loglevels\" [(ngModel)]=\"selectedLoglevel\" styleClass=\"p-dropdown-ar\" scrollHeight=\"300px\"></p-dropdown>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <!-- Log content -->\r\n    <pre class=\"log-content\">{{logContent}}</pre>\r\n  </p-panel>\r\n</div>\r\n\r\n<!-- Loading component -->\r\n<app-loading [visible]=\"loading\"></app-loading>\r\n\r\n<!-- Scroll component -->\r\n<app-scroll></app-scroll>\r\n","export enum Loglevel {\r\n  DEBUG = 'DEBUG',\r\n  INFO = 'INFO',\r\n  WARNING = 'WARNING',\r\n  ERROR = 'ERROR',\r\n  CRITICAL = 'CRITICAL'\r\n}\r\n"],"names":["map","appSettings","ApiServiceTemplate","LogService","constructor","URL","webRoot","getLogs","lognum","url","httpClient","get","options","clearLogs","delete","pipe","getLogCount","count","t","factory","ɵfac","providedIn","LogClearComponent","router","logService","messageService","ngOnInit","subscribe","next","result","navigateByUrl","error","showErrorMessage","i0","ɵɵdirectiveInject","i1","Router","i2","i3","MessageService","selectors","decls","vars","template","LogClearComponent_Template","rf","ctx","styles","RouterModule","LogViewComponent","routes","path","redirectTo","pathMatch","component","LogRoutingModule","forChild","imports","exports","SharedModule","LogModule","declarations","webSocket","Loglevel","ɵɵelementStart","ɵɵlistener","LogViewComponent_ng_template_2_span_7_Template_span_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","logNum_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r1","selectedLogNum","ɵɵadvance","ɵɵtextInterpolate","LogViewComponent_ng_template_2_Template_span_click_5_listener","_r6","ctx_r5","ɵɵtemplate","LogViewComponent_ng_template_2_span_7_Template","LogViewComponent_ng_template_2_Template_p_button_onClick_9_listener","ctx_r7","toggleTailing","LogViewComponent_ng_template_2_Template_p_dropdown_ngModelChange_11_listener","$event","ctx_r8","selectedLoglevel","_c1","ctx_r0","logNums","tailButtonLabel","tailButtonIcon","tailingDisabled","loglevels","scrollService","LOG_MESSAGE_REGEX","loading","tailing","logMessages","getLogLevels","Array","from","keys","i","logNum","logLines","handleLogTailing","logReversed","triggerScrollUp","triggerScrollDown","filteredLogMessages","filter","logMessage","match","exec","groups","logContent","join","logLevels","push","label","value","Object","entries","forEach","entry","createLogWebSocket","protocol","window","location","host","config","deserializer","e","data","serializer","logWebsocket","unshift","console","log","unsubscribe","ScrollService","consts","LogViewComponent_Template","LogViewComponent_ng_template_2_Template","ɵɵelement"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}