{"version":3,"file":"109.5b3d22478626259e.js","mappings":"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","sources":["./src/app/modules/system/info/system-info.component.ts","./src/app/modules/system/info/system-info.component.html","./src/app/modules/system/status/system-status.component.html","./src/app/modules/system/status/system-status.component.ts","./src/app/modules/system/system-routing.module.ts","./src/app/modules/system/system.module.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SystemService } from '../../../core/services/api/system.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { SystemInfo, SystemInstallType } from '../../../shared/models/systeminfo';\r\n\r\n@Component({\r\n  selector: 'app-system-info',\r\n  templateUrl: './system-info.component.html',\r\n  styleUrls: ['./system-info.component.scss']\r\n})\r\nexport class SystemInfoComponent implements OnInit {\r\n\r\n  private readonly NOT_AVAILABLE = 'N/A';\r\n  private readonly CHANGELOG_URL = 'https://raw.githubusercontent.com/h3llrais3r/Auto-Subliminal/master/changelog.html';\r\n\r\n  readonly SOURCE_URL = 'https://github.com/h3llrais3r/Auto-Subliminal';\r\n  readonly ISSUES_URL = `${this.SOURCE_URL}/issues`;\r\n  readonly WIKI_URL = `${this.SOURCE_URL}/wiki`;\r\n\r\n  systemInfo: SystemInfo;\r\n  changelog: string;\r\n  version: string;\r\n  versionUrl: string;\r\n  gitInstall = false;\r\n\r\n  constructor(private httpClient: HttpClient, private systemService: SystemService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Get system info\r\n    this.systemService.getSystemInfo().subscribe(\r\n      (systemInfo) => {\r\n        this.systemInfo = systemInfo;\r\n        if (this.systemInfo.installType === SystemInstallType.SOURCE) {\r\n          this.version = this.systemInfo.currentVersion;\r\n          this.versionUrl = this.systemInfo.currentVersionUrl;\r\n        } else if (this.systemInfo.installType === SystemInstallType.GIT) {\r\n          this.version = this.systemInfo.releaseVersion;\r\n          this.gitInstall = true;\r\n        } else {\r\n          this.version = this.NOT_AVAILABLE;\r\n        }\r\n      },\r\n      () => this.messageService.showErrorMessage('Unable to get the system info!')\r\n    );\r\n\r\n    // Get changelog\r\n    this.httpClient.get(this.CHANGELOG_URL, { responseType: 'text' }).subscribe(\r\n      (changelog) => {\r\n        this.changelog = this.parseChangelog(changelog);\r\n      },\r\n      () => this.messageService.showErrorMessage('Unable to get the changelog!')\r\n    );\r\n  }\r\n\r\n  private parseChangelog(changelogHtml: string): string {\r\n    let result = '';\r\n    const parser = new DOMParser();\r\n    const parsedChangelog = parser.parseFromString(changelogHtml, 'text/html');\r\n    const releases = parsedChangelog.getElementsByClassName('release');\r\n    Array.from(releases).forEach((release, index) => {\r\n      const version = release.getElementsByClassName('version')[0];\r\n      const releaseDate = release.getElementsByClassName('releasedate')[0];\r\n      const changelog = release.getElementsByClassName('changelog')[0];\r\n      if (index > 0) {\r\n        result += '<hr class=\"separator\">';\r\n      }\r\n      result += '<div class=\"release\">';\r\n      result += '<div class=\"version-label\">Version</div>' + version.outerHTML;\r\n      result += '<div class=\"releasedate-label\">Release date</div>' + releaseDate.outerHTML;\r\n      result += '<div class=\"changelog-label\">Changelog</div>' + changelog.outerHTML;\r\n      result += '</div>';\r\n    });\r\n    return result;\r\n  }\r\n\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-tabView>\r\n    <!-- Info tab -->\r\n    <p-tabPanel header=\"General\">\r\n      <div class=\"info-wrapper\" *ngIf=\"systemInfo\">\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">OS</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.os}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">PID</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.pid}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Version</div>\r\n          <div class=\"info col-sm-12 col-md-8\" *ngIf=\"!versionUrl\">{{version}}</div>\r\n          <div class=\"info col-sm-12 col-md-8\" *ngIf=\"versionUrl\"><a href=\"{{versionUrl}}\" target=\"_blank\">{{version}}</a></div>\r\n        </div>\r\n        <!-- Only show git branch when installed through git -->\r\n        <div class=\"info-item row\" *ngIf=\"gitInstall\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Git branch</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{systemInfo.currentBranchUrl}}\" target=\"_blank\">{{systemInfo.currentBranch}}</a></div>\r\n        </div>\r\n        <!-- Only show git version when installed through git -->\r\n        <div class=\"info-item row\" *ngIf=\"gitInstall\">\r\n          <div class=\" info-label col-sm-12 col-md-4\">Git version</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{systemInfo.currentVersionUrl}}\" target=\"_blank\">{{systemInfo.currentVersion}}</a></div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">System encoding</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.systemEncoding}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Python version</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.pythonVersion}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Python location</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.pythonLocation}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Config file</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.configFile}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Database file</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.databaseFile}}</div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Log file</div>\r\n          <div class=\"info col-sm-12 col-md-8\">{{systemInfo.logFile}}</div>\r\n        </div>\r\n        <hr class=\"separator\">\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Source</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{SOURCE_URL}}\" target=\"_blank\">{{SOURCE_URL}}</a></div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Issues</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{ISSUES_URL}}\" target=\"_blank\">{{ISSUES_URL}}</a></div>\r\n        </div>\r\n        <div class=\"info-item row\">\r\n          <div class=\"info-label col-sm-12 col-md-4\">Wiki</div>\r\n          <div class=\"info col-sm-12 col-md-8\"><a href=\"{{WIKI_URL}}\" target=\"_blank\">{{WIKI_URL}}</a></div>\r\n        </div>\r\n      </div>\r\n    </p-tabPanel>\r\n    <!--- Changelog tab -->\r\n    <p-tabPanel header=\"Changelog\">\r\n      <div class=\"changelog-wrapper\" *ngIf=\"changelog\" [innerHTML]=\"changelog\"></div>\r\n    </p-tabPanel>\r\n  </p-tabView>\r\n</div>\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Status\">\r\n    <!-- Schedulers section -->\r\n    <div class=\"panel-section\">\r\n      <div class=\"panel-section-header\">Schedulers</div>\r\n      <p-table [value]=\"schedulers\" [autoLayout]=\"true\" [rowHover]=\"true\" styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped p-datatable-responsive-mode\">\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th pSortableColumn=\"name\"><span>Name<p-sortIcon field=\"name\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"active\"><span>Active<p-sortIcon field=\"active\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"alive\"><span>Alive<p-sortIcon field=\"alive\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"interval\"><span>Interval<p-sortIcon field=\"interval\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"lastRun\"><span>Last run<p-sortIcon field=\"lastRun\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"nextRun\"><span>Next run<p-sortIcon field=\"nextRun\"></p-sortIcon></span></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-scheduler>\r\n          <tr [ngClass]=\"{'scheduler-running': scheduler.running}\">\r\n            <td><span class=\"p-column-title\">Name</span><span class=\"p-column-data\">{{scheduler.name}}</span></td>\r\n            <td><span class=\"p-column-title\">Active</span><span class=\"p-column-data\">{{scheduler.active}}</span></td>\r\n            <td><span class=\"p-column-title\">Alive</span><span class=\"p-column-data\">{{scheduler.alive}}</span></td>\r\n            <td><span class=\"p-column-title\">Interval</span><span class=\"p-column-data\">{{scheduler.intervalFormatted}}</span></td>\r\n            <td><span class=\"p-column-title\">Last Run</span><span class=\"p-column-data\">{{scheduler.lastRunFormatted}}</span></td>\r\n            <td><span class=\"p-column-title\">Next run</span><span class=\"p-column-data\">{{scheduler.running ? 'Running' : scheduler.nextRunFormatted}}</span></td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n    <!-- Paths section -->\r\n    <div class=\"panel-section\">\r\n      <div class=\"panel-section-header\">Paths</div>\r\n      <p-table [value]=\"paths\" [autoLayout]=\"true\" [rowHover]=\"true\" styleClass=\"p-datatable-sm p-datatable-gridlines p-datatable-striped p-datatable-responsive-mode\">\r\n        <ng-template pTemplate=\"header\">\r\n          <tr>\r\n            <th pSortableColumn=\"name\"><span>Name<p-sortIcon field=\"name\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"path\"><span>Path<p-sortIcon field=\"path\"></p-sortIcon></span></th>\r\n            <th pSortableColumn=\"freeBytes\"><span>Free space<p-sortIcon field=\"freeBytes\"></p-sortIcon></span></th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-pathInfo>\r\n          <tr>\r\n            <td><span class=\"p-column-title\">Name</span><span class=\"p-column-data\">{{pathInfo.name}}</span></td>\r\n            <td><span class=\"p-column-title\">Path</span><span class=\"p-column-data wrap-text\">{{pathInfo.path}}</span></td>\r\n            <td><span class=\"p-column-title\">Free space</span><span class=\"p-column-data\">{{pathInfo.freeSpaceFormatted}}<i *ngIf=\"pathInfo.freePercentage < 10\" class=\"fa fa-exclamation-triangle text-danger ml-1\" title=\"Low disk space\"></i></span>\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </div>\r\n  </p-panel>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Scheduler } from 'src/app/shared/models/scheduler';\r\nimport { SystemService } from '../../../core/services/api/system.service';\r\nimport { MessageService } from '../../../core/services/message.service';\r\nimport { SystemEventService } from '../../../core/services/system-event.service';\r\nimport { PathInfo } from '../../../shared/models/pathinfo';\r\n\r\n@Component({\r\n  selector: 'app-system-status',\r\n  templateUrl: './system-status.component.html',\r\n  styleUrls: ['./system-status.component.scss']\r\n})\r\nexport class SystemStatusComponent implements OnInit {\r\n\r\n  schedulers: Scheduler[];\r\n  paths: PathInfo[];\r\n\r\n  constructor(private systemService: SystemService, private systemEventService: SystemEventService, private messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Get schedulers\r\n    this.systemService.getSchedulers().subscribe(\r\n      (schedulers) => {\r\n        this.schedulers = schedulers;\r\n        // Subscribe on scheduler start events\r\n        this.systemEventService.schedulerStart.subscribe(\r\n          (startedScheduler) => {\r\n            // Replace started scheduler in list of schedulers\r\n            this.schedulers = this.schedulers.map((scheduler) => scheduler.name === startedScheduler.name ? startedScheduler : scheduler);\r\n          });\r\n        // Subscribe on scheduler finish events\r\n        this.systemEventService.schedulerFinish.subscribe(\r\n          (finishedScheduler) => {\r\n            // Replace finished scheduler in list of schedulers\r\n            this.schedulers = this.schedulers.map((scheduler) => scheduler.name === finishedScheduler.name ? finishedScheduler : scheduler);\r\n          });\r\n      },\r\n      () => this.messageService.showErrorMessage('Unable to get the system schedulers!')\r\n    );\r\n    // Get paths\r\n    this.systemService.getPaths().subscribe(\r\n      (paths) => {\r\n        this.paths = paths;\r\n      },\r\n      () => this.messageService.showErrorMessage('Unable to get the system paths!')\r\n    );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SystemInfoComponent } from './info/system-info.component';\r\nimport { SystemStatusComponent } from './status/system-status.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'info',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'info',\r\n    component: SystemInfoComponent\r\n  },\r\n  {\r\n    path: 'status',\r\n    component: SystemStatusComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'info'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SystemRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { SystemInfoComponent } from './info/system-info.component';\r\nimport { SystemStatusComponent } from './status/system-status.component';\r\nimport { SystemRoutingModule } from './system-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SystemInfoComponent,\r\n    SystemStatusComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    SystemRoutingModule\r\n  ]\r\n})\r\nexport class SystemModule { }\r\n"],"names":["SystemInstallType","i0","SystemInfoComponent","constructor","httpClient","systemService","messageService","SOURCE_URL","ngOnInit","getSystemInfo","subscribe","systemInfo","installType","SOURCE","version","currentVersion","versionUrl","currentVersionUrl","GIT","releaseVersion","gitInstall","NOT_AVAILABLE","showErrorMessage","get","CHANGELOG_URL","responseType","changelog","parseChangelog","changelogHtml","result","parser","DOMParser","parsedChangelog","parseFromString","releases","getElementsByClassName","Array","from","forEach","release","index","releaseDate","outerHTML","selectors","decls","vars","consts","template","SystemStatusComponent","systemEventService","getSchedulers","schedulers","schedulerStart","startedScheduler","map","scheduler","name","schedulerFinish","finishedScheduler","getPaths","paths","RouterModule","routes","path","redirectTo","pathMatch","component","SystemRoutingModule","forChild","imports","exports","SharedModule","SystemModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}