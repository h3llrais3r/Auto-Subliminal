{"version":3,"file":"266.de94d052e0182f44.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuC;AACiG;AACxE;AACsB;AAC3C;AACG;AACA;AACM;AACR;AACkB;AACL;AAC0C;AACzB;AACJ;;;;;;;;;;;ICGhEuB,4DAAA,aAA2B;IACzBA,uDAAA,eAA8H;IAChIA,0DAAA,EAAM;;;;IAD0BA,uDAAA,GAAgC;IAAhCA,wDAAA,gBAAAM,MAAA,CAAAC,gBAAA,CAAgC;;;;;IAIhEP,4DAAA,SAAI;IACmBA,oDAAA,WAAI;IAAAA,0DAAA,EAAK;IAC9BA,4DAAA,YAAqB;IAAAA,oDAAA,WAAI;IAAAA,0DAAA,EAAK;;;;;IAM5BA,uDAAA,YAAmH;;;;;IACnHA,uDAAA,YAAsH;;;;;IACtHA,uDAAA,YAAsF;;;;;IAJ1FA,4DAAA,iBAAmE;IAE/DA,wDAAA,IAAAU,+CAAA,gBAAmH;IACnHV,wDAAA,IAAAW,+CAAA,gBAAsH;IACtHX,wDAAA,IAAAY,+CAAA,gBAAsF;IACxFZ,0DAAA,EAAK;IACLA,4DAAA,YAAqB;IAAAA,oDAAA,GAAa;IAAAA,0DAAA,EAAK;;;;;IANEA,wDAAA,mBAAAa,OAAA,CAAuB;IAAlDb,yDAAA,YAAAa,OAAA,CAAAE,IAAA,CAA0B;IAElCf,uDAAA,GAAkD;IAAlDA,wDAAA,SAAAgB,MAAA,CAAAC,QAAA,CAAAJ,OAAA,CAAAK,IAAA,KAAAF,MAAA,CAAAG,UAAA,CAAAN,OAAA,CAAAE,IAAA,EAAkD;IAClDf,uDAAA,GAAmD;IAAnDA,wDAAA,SAAAgB,MAAA,CAAAC,QAAA,CAAAJ,OAAA,CAAAK,IAAA,MAAAF,MAAA,CAAAG,UAAA,CAAAN,OAAA,CAAAE,IAAA,EAAmD;IACnDf,uDAAA,GAAuB;IAAvBA,wDAAA,SAAAgB,MAAA,CAAAI,MAAA,CAAAP,OAAA,CAAAK,IAAA,EAAuB;IAERlB,uDAAA,GAAa;IAAbA,+DAAA,CAAAa,OAAA,CAAAE,IAAA,CAAa;;;;;;IAMtCf,4DAAA,mBAAuG;IAAlBA,wDAAA,mBAAAuB,sEAAA;MAAAvB,2DAAA,CAAAyB,IAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAASA,yDAAA,CAAA0B,MAAA,CAAAG,KAAA,EAAO;IAAA,EAAC;IAAC7B,0DAAA,EAAW;IAClHA,4DAAA,mBAA0F;IAAvBA,wDAAA,mBAAA8B,sEAAA;MAAA9B,2DAAA,CAAAyB,IAAA;MAAA,MAAAM,OAAA,GAAA/B,2DAAA;MAAA,OAASA,yDAAA,CAAA+B,OAAA,CAAAC,UAAA,EAAY;IAAA,EAAC;IAAChC,0DAAA,EAAW;;;ADlBlG,IAAMiC,oBAAoB;EAA3B,MAAOA,oBAAoB;IAPjCC,YAAA;MAaE,KAAAC,OAAO,GAAG,KAAK;MAGf,KAAAC,aAAa,GAAG,IAAIzD,uDAAY,EAAW,CAAC,CAAC;MAG7C,KAAA0D,IAAI,GAAG,EAAE,CAAC,CAAC;MAGX,KAAAC,UAAU,GAAG,IAAI3D,uDAAY,EAAU,CAAC,CAAC;MAGzC,KAAA4D,UAAU,GAAG,KAAK,CAAC,CAAC;MAOH,KAAAC,SAAS,GAAG,KAAK;MAI1B,KAAAC,YAAY,GAAG,IAAI;MACnB,KAAAC,cAAc,GAAG,IAAI;MAErB,KAAAC,iBAAiB,GAAG/D,qDAAM,CAACiB,+EAAiB,CAAC;MAC7C,KAAA+C,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN;MACA,IAAI,IAAI,CAACN,UAAU,EAAE;QACnB,IAAI,CAACE,YAAY,GAAG,KAAK;;MAE3B;MACA;MACA;MACA;MACA,IAAI,CAAClC,gBAAgB,GAAG,IAAIvB,8DAAkB,CAAC,IAAI,CAACqD,IAAI,CAAC;MACzD,IAAI,CAAC9B,gBAAgB,CAACuC,YAAY,CAACC,IAAI,CACrCxD,kDAAY,CAAC,GAAG,CAAC,EACjBC,8CAAQ,CAAE6C,IAAI,IAAK,IAAI,CAACM,iBAAiB,CAACK,MAAM,CAACX,IAAI,EAAE,IAAI,CAACI,YAAY,EAAE,IAAI,CAACC,cAAc,CAAC,CAAC,EAC/FpD,gDAAU,CAAC,MAAMG,wCAAE,CAAC,IAAI,CAAC,CAAC,EAC1BZ,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CACpC,CAACK,SAAS,CAAC;QACVC,IAAI,EAAGC,MAAM,IAAK,IAAI,CAACC,qBAAqB,CAACD,MAAM;OACpD,CAAC;MACF;MACA,IAAI,CAACR,iBAAiB,CAACK,MAAM,CAAC,IAAI,CAACX,IAAI,EAAE,IAAI,CAACI,YAAY,EAAE,IAAI,CAACC,cAAc,CAAC,CAACK,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QACnIC,IAAI,EAAGC,MAAM,IAAK,IAAI,CAACC,qBAAqB,CAACD,MAAM;OACpD,CAAC;IACJ;IAEAE,MAAMA,CAAA;MACJ;MACA,IAAI,IAAI,CAACC,YAAY,CAACpC,IAAI,KAAKtB,oEAAmB,CAAC2D,MAAM,EAAE;QACzD,IAAIC,MAAM,GAAG,IAAI,CAACF,YAAY,CAACvC,IAAI;QACnC,IAAIyC,MAAM,KAAK,IAAI,CAAChB,SAAS,EAAE;UAC7B,MAAMiB,YAAY,GAAG1D,oEAAiB,CAAC,IAAI,CAAC2D,eAAe,CAAC;UAC5D,MAAMC,kBAAkB,GAAGF,YAAY,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACtD;UACA,IAAID,kBAAkB,CAACE,MAAM,KAAK,CAAC,IAAIF,kBAAkB,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,SAAS,CAAC,EAAE;YAC7EN,MAAM,GAAG,EAAE;WACZ,MAAM;YACL;YACAA,MAAM,GAAG1D,4DAAS,CAAC,GAAG6D,kBAAkB,CAAC;;SAE5C,MAAM;UACLH,MAAM,GAAG,IAAI,CAACO,WAAW,CAACP,MAAM,CAAC,CAAC,CAAC;;;QAErC,IAAI,CAACjD,gBAAgB,CAACyD,QAAQ,CAACR,MAAM,CAAC;OACvC,MAAM;QACL,IAAI,CAACjD,gBAAgB,CAACyD,QAAQ,CAAC,IAAI,CAACD,WAAW,CAAC,IAAI,CAACT,YAAY,CAACvC,IAAI,CAAC,CAAC;;IAE5E;IAEAK,MAAMA,CAACF,IAAyB;MAC9B,OAAOtB,oEAAmB,CAACqE,IAAI,KAAK/C,IAAI;IAC1C;IAEAD,QAAQA,CAACC,IAAyB;MAChC,OAAOtB,oEAAmB,CAAC2D,MAAM,KAAKrC,IAAI;IAC5C;IAEAC,UAAUA,CAACJ,IAAY;MACrB,OAAOA,IAAI,KAAK,IAAI,CAACyB,SAAS;IAChC;IAEAR,UAAUA,CAAA;MACR,IAAI,CAACM,UAAU,CAAC4B,IAAI,CAAC,IAAI,CAAC3D,gBAAgB,CAAC4D,KAAK,CAAC;MACjD,IAAI,CAACtC,KAAK,EAAE;IACd;IAEAA,KAAKA,CAAA;MACH,IAAI,CAACO,aAAa,CAAC8B,IAAI,CAAC,KAAK,CAAC;IAChC;IAEQd,qBAAqBA,CAACgB,iBAAoC;MAChE;MACA,IAAIA,iBAAiB,EAAE;QACrB;QACA,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;QAC1C;QACA,IAAI,CAACV,eAAe,GAAG,IAAI,CAACU,iBAAiB,CAAC/B,IAAI;QAClD;QACA,MAAMgC,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAAC/D,gBAAgB,CAAC4D,KAAK,EAAE,IAAI,CAACT,eAAe,CAAC;QACpG;QACA,IAAI,CAACa,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACJ,iBAAiB,EAAEC,gBAAgB,CAAC;QAC1F;QACA,IAAI,IAAI,CAACX,eAAe,KAAK,EAAE,IAAI,IAAI,CAACA,eAAe,KAAK,GAAG,EAAE;UAC/D,IAAI,CAACa,gBAAgB,CAACE,OAAO,CAAC,IAAI9E,gEAAe,CAACC,oEAAmB,CAAC2D,MAAM,EAAE,IAAI,CAACf,SAAS,CAAC,CAAC;;QAEhG;QACA,IAAI,CAACkC,wBAAwB,CAACL,gBAAgB,CAAC;;IAEnD;IAEQC,mBAAmBA,CAAC/D,gBAAwB,EAAEmD,eAAuB;MAC3E,IAAIW,gBAAgB,GAAG,IAAI;MAC3B,IAAI9D,gBAAgB,IAAImD,eAAe,EAAE;QACvC;QACAW,gBAAgB,GAAGvE,4DAAS,CAAC,GAAGC,oEAAiB,CAACQ,gBAAgB,CAAC,CAACoE,MAAM,CAAEC,IAAI,IAAK,CAAC7E,oEAAiB,CAAC2D,eAAe,CAAC,CAACmB,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;OAC1I,MAAM,IAAIrE,gBAAgB,EAAE;QAC3B;QACA8D,gBAAgB,GAAG9D,gBAAgB;;MAErC,OAAO8D,gBAAgB;IACzB;IAEQG,mBAAmBA,CAACJ,iBAAoC,EAAEC,gBAAwB;MACxF,MAAMS,KAAK,GAAsB,EAAE;MACnC,IAAI,CAACxB,YAAY,GAAG,IAAI;MACxB;MACAc,iBAAiB,CAACW,OAAO,CAACC,OAAO,CAAExB,MAAM,IAAKsB,KAAK,CAACG,IAAI,CAAC,IAAItF,gEAAe,CAACC,oEAAmB,CAAC2D,MAAM,EAAEC,MAAM,CAAC,CAAC,CAAC;MAClH;MACAY,iBAAiB,CAACU,KAAK,CAACE,OAAO,CAAEE,IAAI,IAAI;QACvC,MAAMC,eAAe,GAAG,IAAIxF,gEAAe,CAACC,oEAAmB,CAACqE,IAAI,EAAEiB,IAAI,CAAC;QAC3EJ,KAAK,CAACG,IAAI,CAACE,eAAe,CAAC;QAC3B;QACA,IAAID,IAAI,KAAKb,gBAAgB,EAAE;UAC7B,IAAI,CAACf,YAAY,GAAG6B,eAAe;;MAEvC,CAAC,CAAC;MACF,OAAOL,KAAK;IACd;IAEQJ,wBAAwBA,CAACL,gBAAwB;MACvD;MACA,IAAIA,gBAAgB,EAAE;QACpBe,UAAU,CAAC,MAAK;UACd;UACA,MAAMC,GAAG,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,aAAa,CAACC,YAAY,CAAC,SAAS,CAAC,KAAKrB,gBAAgB,CAAC;UACtG,IAAIgB,GAAG,EAAE;YACPA,GAAG,CAACI,aAAa,CAACE,cAAc,CAAC;cAAEC,MAAM,EAAE,OAAO;cAAEC,KAAK,EAAE;YAAO,CAAE,CAAC;;QAEzE,CAAC,CAAC;;IAEN;IAEQ9B,WAAWA,CAAC1B,IAAY;MAC9B,IAAIqB,eAAe,GAAG,IAAI,CAACA,eAAe;MAC1C,IAAIA,eAAe,CAACoC,QAAQ,CAACpG,8DAAW,CAACqG,aAAa,CAAC,EAAE;QACvD;QACArC,eAAe,GAAGA,eAAe,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEhD,OAAOF,eAAe,GAAG5D,4DAAS,CAAC4D,eAAe,EAAErB,IAAI,CAAC,GAAGA,IAAI;IAClE;;EA5KWJ,oBAAoB;qBAApBA,oBAAoB;EAAA;EAApBA,oBAAoB;UAApBA,oBAAoB;IAAA+D,SAAA;IAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;QCrBjCnG,4DAAA,kBAK2C;QALjCA,wDAAA,2BAAAqG,gEAAAC,MAAA;UAAA,OAAAF,GAAA,CAAAjE,OAAA,GAAAmE,MAAA;QAAA,EAAqB;QAO7BtG,4DAAA,iBAMyD;QALhDA,wDAAA,6BAAAuG,iEAAAD,MAAA;UAAA,OAAAF,GAAA,CAAA9C,YAAA,GAAAgD,MAAA;QAAA,EAA4B,yBAAAE,6DAAA;UAAA,OAEbJ,GAAA,CAAA/C,MAAA,EAAQ;QAAA,EAFK;QAMnCrD,wDAAA,IAAAyG,2CAAA,yBAIc;QACdzG,wDAAA,IAAA0G,2CAAA,yBAKc;QACd1G,wDAAA,IAAA2G,2CAAA,yBASc;QAChB3G,0DAAA,EAAU;QAEVA,wDAAA,IAAA4G,2CAAA,yBAGc;QAChB5G,0DAAA,EAAW;;;QAzCDA,wDAAA,YAAAoG,GAAA,CAAAjE,OAAA,CAAqB;QAOpBnC,uDAAA,GAA0B;QAA1BA,wDAAA,UAAAoG,GAAA,CAAA7B,gBAAA,CAA0B,cAAA6B,GAAA,CAAA9C,YAAA;;;mBDYzB7E,kDAAI,EAAEK,uDAAW,EAAA+H,gEAAA,EAAAA,2DAAA,EAAE9H,+DAAmB,EAAA8H,gEAAA,EAAE1H,yDAAY,EAAA8H,mDAAA,EAAAE,uDAAA,EAAE9H,uDAAW,EAAAgI,iDAAA,EAAAA,yDAAA,EAAEnI,yDAAY,EAAAsI,mDAAA,EAAEvI,sDAAY,EAAEG,+DAAe,EAAAsI,yDAAA;IAAAE,MAAA;EAAA;EAAA,OAE7G3F,oBAAoB;AAAA;;;;;;;;;;;;;;;;;;;AEtBS;AACmB;AACwB;AAEd;AACnB;;;;AAc7C,IAAMiG,sBAAuB;EAA9B,MAAOA,sBAAuB,SAAQD,4DAAc;IAK/CE,UAAUA,CAACC,GAAQ;MAC1B,KAAK,CAACD,UAAU,CAACC,GAAG,CAAC;MACrB,IAAI,CAACC,iBAAiB,CAACC,aAAa,EAAE,CAAC,CAAC;IAC1C;;IAEAC,gBAAgBA,CAACC,KAA0B;MACzC,IAAI,CAACC,WAAW,CAACvE,IAAI,CAACsE,KAAK,CAACE,aAAa,CAAC;IAC5C;;EAZWR,sBAAuB;;;gKAAvBA,sBAAsB,IAAAS,CAAA,IAAtBT,sBAAsB;IAAA;EAAA;EAAtBA,sBAAuB;UAAvBA,sBAAsB;IAAAlC,SAAA;IAAA4C,MAAA;MAAAC,OAAA;IAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA/I,gEAAA,CARtB,CAAC;MACViJ,OAAO,EAAElB,6DAAiB;MAC1BmB,WAAW,EAAEpB,yDAAU,CAAC,MAAMI,sBAAsB,CAAC;MACrDiB,KAAK,EAAE;KACR,CAAC,GAAAnJ,wEAAA,EAAAA,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAvD,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdJnG,4DAAA,oBAO+B;QAHnBA,wDAAA,qBAAA2J,8DAAArD,MAAA;UAAA,OAAWF,GAAA,CAAAwD,OAAA,CAAAtD,MAAA,CAAe;QAAA,EAAC,sBAAAuD,+DAAAvD,MAAA;UAAA,OACfF,GAAA,CAAAmC,gBAAA,CAAAjC,MAAA,CAAwB;QAAA,EADT,oBAAAwD,6DAAAxD,MAAA;UAAA,OAEjBF,GAAA,CAAA2D,MAAA,CAAAzD,MAAA,CAAc;QAAA,EAFG;QAIvCtG,0DAAA,EAAa;;;QARDA,wDAAA,YAAAoG,GAAA,CAAA4D,EAAA,IAAA5D,GAAA,CAAA6D,eAAA,CAAiC,gBAAA7D,GAAA,CAAA8D,OAAA,aAAA9D,GAAA,CAAAyC,OAAA,aAAAzC,GAAA,CAAA+D,eAAA;;;mBDgBjCtC,oDAAO,EAAE/I,uDAAW,EAAA+H,2DAAA,EAAE9H,+DAAmB,EAAA8H,gEAAA,EAAEmB,4DAAc,EAAAf,sDAAA;IAAAW,MAAA;EAAA;EAAA,OAExDM,sBAAuB;AAAA;;;;;;;;;;;;;;;;;;;;;AEnBY;AACa;AACwB;AACvC;AACM;AAC6B;AAC7B;;;;;;;;ICWpDlI,4DAAA,0BAIqD;IAHnCA,wDAAA,2BAAAqK,gGAAA/D,MAAA;MAAAtG,2DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,2DAAA;MAAA,OAAAA,yDAAA,CAAAuK,MAAA,CAAAC,eAAA,GAAAlE,MAAA;IAAA,EAA6B,wBAAAmE,6FAAAnE,MAAA;MAAAtG,2DAAA,CAAAsK,GAAA;MAAA,MAAAI,MAAA,GAAA1K,2DAAA;MAAA,OAGfA,yDAAA,CAAA0K,MAAA,CAAAC,WAAA,CAAArE,MAAA,CAAmB;IAAA,EAHJ;IAI/CtG,0DAAA,EAAmB;;;;IAJDA,wDAAA,YAAAM,MAAA,CAAAkK,eAAA,CAA6B,SAAAlK,MAAA,CAAAsK,WAAA,gBAAAtK,MAAA,CAAAiC,UAAA;;;ADExC,IAAMsI,yBAA0B;EAAjC,MAAOA,yBAA0B,SAAQ5C,4DAAc;IAZ7D/F,YAAA;;MAeE,KAAAG,IAAI,GAAG,EAAE,CAAC,CAAC;MAGX,KAAAE,UAAU,GAAG,KAAK,CAAC,CAAC;MAGpB,KAAAuI,WAAW,GAAG,EAAE;MAEhB,KAAAN,eAAe,GAAG,KAAK;MACvB,KAAAI,WAAW,GAAG,EAAE;;IAEhBG,eAAeA,CAAA;MACb,IAAI,CAACH,WAAW,GAAG,IAAI,CAACvI,IAAI,IAAI,IAAI,CAAC6H,OAAO,CAAC/F,KAAK,IAAI,EAAE,CAAC,CAAC;MAC1D,IAAI,CAACqG,eAAe,GAAG,IAAI;IAC7B;IAEAG,WAAWA,CAACK,QAAgB;MAC1B,IAAI,CAACd,OAAO,CAAClG,QAAQ,CAACgH,QAAQ,CAAC;IACjC;;EArBWH,yBAA0B;;;sKAA1BA,yBAAyB,IAAAlC,CAAA,IAAzBkC,yBAAyB;IAAA;EAAA;EAAzBA,yBAA0B;UAA1BA,yBAAyB;IAAA7E,SAAA;IAAA4C,MAAA;MAAAvG,IAAA;MAAAE,UAAA;MAAAuI,WAAA;IAAA;IAAAhC,UAAA;IAAAC,QAAA,GAAA/I,gEAAA,CARzB,CAAC;MACViJ,OAAO,EAAElB,6DAAiB;MAC1BmB,WAAW,EAAEpB,yDAAU,CAAC,MAAM+C,yBAAyB,CAAC;MACxD1B,KAAK,EAAE;KACR,CAAC,GAAAnJ,wEAAA,EAAAA,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwB,mCAAA9E,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfJnG,4DAAA,aAA0B;QAOjBA,wDAAA,mBAAAkL,0DAAA5E,MAAA;UAAA,OAASF,GAAA,CAAAwD,OAAA,CAAAtD,MAAA,CAAe;QAAA,EAAC,qBAAA6E,4DAAA7E,MAAA;UAAA,OACdF,GAAA,CAAAgF,SAAA,CAAA9E,MAAA,CAAiB;QAAA,EADH,mBAAA+E,0DAAA/E,MAAA;UAAA,OAEhBF,GAAA,CAAAkF,OAAA,CAAAhF,MAAA,CAAe;QAAA,EAFC,oBAAAiF,2DAAAjF,MAAA;UAAA,OAGfF,GAAA,CAAAoF,QAAA,CAAAlF,MAAA,CAAgB;QAAA,EAHD,kBAAAmF,yDAAAnF,MAAA;UAAA,OAIjBF,GAAA,CAAA2D,MAAA,CAAAzD,MAAA,CAAc;QAAA,EAJG;QANhCtG,0DAAA,EAWqB;QACrBA,4DAAA,kBAA4G;QAA9BA,wDAAA,qBAAA0L,+DAAA;UAAA,OAAWtF,GAAA,CAAA2E,eAAA,EAAiB;QAAA,EAAC;QAAC/K,0DAAA,EAAW;QAGzHA,wDAAA,IAAA2L,qDAAA,8BAKmB;;;QAlBV3L,uDAAA,GAA4B;QAA5BA,wDAAA,OAAAoG,GAAA,CAAA4D,EAAA,IAAA5D,GAAA,CAAA6D,eAAA,CAA4B,gBAAA7D,GAAA,CAAA8D,OAAA,iBAAA9D,GAAA,CAAA0E,WAAA,aAAA1E,GAAA,CAAA+D,eAAA;QAalBnK,uDAAA,GAAqB;QAArBA,wDAAA,SAAAoG,GAAA,CAAAoE,eAAA,CAAqB;;;mBDC5B/L,iDAAI,EAAEoJ,oDAAO,EAAE/I,uDAAW,EAAA+H,gEAAA,EAAAA,2DAAA,EAAE9H,+DAAmB,EAAA8H,gEAAA,EAAEzH,8DAAe,EAAA6H,wDAAA,EAAE/H,wDAAY,EAAAiI,kDAAA,EAAElF,sFAAoB;IAAA2F,MAAA;EAAA;EAAA,OAEnGiD,yBAA0B;AAAA;;;;;;;;;;;;;;;;;;;;;AEpBgB;AACM;AACwB;AACvC;AACM;AAC6B;AAC7B;;;;;;;;ICHlD7K,4DAAA,aAA+F;IAEVA,wDAAA,mBAAA6L,qEAAAvF,MAAA;MAAA,MAAAwF,WAAA,GAAA9L,2DAAA,CAAA+L,GAAA;MAAA,MAAAC,QAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,MAAA,GAAAlM,2DAAA;MAAA,OAASA,yDAAA,CAAAkM,MAAA,CAAAC,YAAA,CAAA7F,MAAA,EAAA0F,QAAA,CAA2B;IAAA,EAAC;IAAtHhM,0DAAA,EAAuH;IACvHA,4DAAA,kBAAoH;IAAtCA,wDAAA,qBAAAoM,0EAAA;MAAA,MAAAN,WAAA,GAAA9L,2DAAA,CAAA+L,GAAA;MAAA,MAAAC,QAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAI,IAAA,GAAAP,WAAA,CAAAQ,KAAA;MAAA,MAAAC,MAAA,GAAAvM,2DAAA;MAAA,OAAWA,yDAAA,CAAAuM,MAAA,CAAAxB,eAAA,CAAAiB,QAAA,EAAAK,IAAA,CAAyB;IAAA,EAAC;IAACrM,0DAAA,EAAW;IAC/HA,4DAAA,kBAAuG;IAA/BA,wDAAA,qBAAAwM,0EAAA;MAAA,MAAAV,WAAA,GAAA9L,2DAAA,CAAA+L,GAAA;MAAA,MAAAC,QAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAQ,MAAA,GAAAzM,2DAAA;MAAA,OAAWA,yDAAA,CAAAyM,MAAA,CAAAC,WAAA,CAAAV,QAAA,CAAkB;IAAA,EAAC;IAAChM,0DAAA,EAAW;;;;;;IAFpFA,uDAAA,GAAkC;IAAlCA,wDAAA,QAAAM,MAAA,CAAA0J,EAAA,IAAA1J,MAAA,CAAA2J,eAAA,IAAAoC,IAAA,CAAkC,UAAAL,QAAA;;;;;;IAcpEhM,4DAAA,2BAIqD;IAHnCA,wDAAA,2BAAA2M,qGAAArG,MAAA;MAAAtG,2DAAA,CAAA4M,GAAA;MAAA,MAAAC,MAAA,GAAA7M,2DAAA;MAAA,OAAAA,yDAAA,CAAA6M,MAAA,CAAArC,eAAA,GAAAlE,MAAA;IAAA,EAA6B,wBAAAwG,kGAAAxG,MAAA;MAAAtG,2DAAA,CAAA4M,GAAA;MAAA,MAAAG,OAAA,GAAA/M,2DAAA;MAAA,OAGfA,yDAAA,CAAA+M,OAAA,CAAApC,WAAA,CAAArE,MAAA,CAAmB;IAAA,EAHJ;IAI/CtG,0DAAA,EAAmB;;;;IAJDA,wDAAA,YAAAuK,MAAA,CAAAC,eAAA,CAA6B,SAAAD,MAAA,CAAAK,WAAA,gBAAAL,MAAA,CAAAhI,UAAA;;;ADA1C,IAAMyK,8BAA+B;EAAtC,MAAOA,8BAA+B,SAAQ/E,4DAAc;IAZlE/F,YAAA;;MAeE,KAAAK,UAAU,GAAG,KAAK,CAAC,CAAC;MAEpB,KAAAiI,eAAe,GAAG,KAAK;MACvB,KAAAyC,iBAAiB,GAAG,IAAI;MACxB,KAAArC,WAAW,GAAG,EAAE;MAChB,KAAAsC,YAAY,GAAG,CAAC,CAAC;;IAGjB,IAAIC,MAAMA,CAAA;MACR,OAAO,IAAI,CAACjD,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC/F,KAAK,GAAG,EAAE;IAC/C;IAEA;IACA;IACAiJ,iBAAiBA,CAACd,KAAa,EAAEnI,KAAa;MAC5C,OAAOmI,KAAK;IACd;IAEAH,YAAYA,CAAC3D,KAAoB,EAAE6E,aAAqB;MACtD;MACA,MAAMC,YAAY,GAAI9E,KAAK,CAAC+E,MAA2B,CAACpJ,KAAK;MAC7D,IAAImJ,YAAY,IAAIA,YAAY,CAACE,IAAI,EAAE,EAAE;QACvC,IAAI,CAACtD,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACM,GAAG,CAAEC,GAAG,IAAKA,GAAG,KAAKL,aAAa,GAAGC,YAAY,CAACE,IAAI,EAAE,GAAGE,GAAG,CAAC,CAAC;;IAEtG;IAEAhB,WAAWA,CAACvI,KAAa;MACvB;MACA,IAAI,CAAC+F,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACxI,MAAM,CAAE+I,GAAG,IAAKA,GAAG,KAAKvJ,KAAK,CAAC,CAAC;IACnE;IAEAwJ,eAAeA,CAACnF,KAAoB;MAClC,MAAMrE,KAAK,GAAIqE,KAAK,CAAC+E,MAA2B,CAACpJ,KAAK;MACtD,IAAIA,KAAK,IAAIA,KAAK,CAACqJ,IAAI,EAAE,EAAE;QACzB,IAAI,CAACP,iBAAiB,GAAG,KAAK;OAC/B,MAAM;QACL,IAAI,CAACA,iBAAiB,GAAG,IAAI;;IAEjC;IAEAW,WAAWA,CAAA;MACT;MACA,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjB,IAAI,CAAC,IAAI,CAACV,MAAM,CAACtI,QAAQ,CAAC,IAAI,CAACgJ,QAAQ,CAACL,IAAI,EAAE,CAAC,EAAE;UAC/C,IAAI,CAACtD,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACW,MAAM,CAAC,IAAI,CAACD,QAAQ,CAACL,IAAI,EAAE,CAAC,CAAC;;QAEjE,IAAI,CAACK,QAAQ,GAAG,EAAE,CAAC,CAAC;QACpB,IAAI,CAACZ,iBAAiB,GAAG,IAAI;;IAEjC;IAEAlC,eAAeA,CAAC1I,IAAY,EAAEiK,KAAa;MACzC,IAAI,CAAC1B,WAAW,GAAGvI,IAAI,IAAI,EAAE;MAC7B,IAAI,CAAC6K,YAAY,GAAGZ,KAAK;MACzB,IAAI,CAAC9B,eAAe,GAAG,IAAI;IAC7B;IAEAG,WAAWA,CAACK,QAAgB;MAC1B,IAAI,IAAI,CAACkC,YAAY,IAAI,CAAC,EAAE;QAC1B,IAAI,CAACC,MAAM,CAAC,IAAI,CAACD,YAAY,CAAC,GAAGlC,QAAQ,CAACwC,IAAI,EAAE;OACjD,MAAM;QACL,IAAI,CAACL,MAAM,CAAClI,IAAI,CAAC+F,QAAQ,CAACwC,IAAI,EAAE,CAAC;;MAEnC,IAAI,CAACtD,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAAC;IACpC;;EAnEWH,8BAA+B;;;gLAA/BA,8BAA8B,IAAArE,CAAA,IAA9BqE,8BAA8B;IAAA;EAAA;EAA9BA,8BAA+B;UAA/BA,8BAA8B;IAAAhH,SAAA;IAAA4C,MAAA;MAAArG,UAAA;IAAA;IAAAuG,UAAA;IAAAC,QAAA,GAAA/I,gEAAA,CAR9B,CAAC;MACViJ,OAAO,EAAElB,6DAAiB;MAC1BmB,WAAW,EAAEpB,yDAAU,CAAC,MAAMkF,8BAA8B,CAAC;MAC7D7D,KAAK,EAAE;KACR,CAAC,GAAAnJ,wEAAA,EAAAA,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAsE,wCAAA5H,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfJnG,4DAAA,aAA8B;QAE5BA,wDAAA,IAAAgO,6CAAA,iBAMM;QAENhO,4DAAA,aAA0B;QAE+CA,wDAAA,2BAAAiO,uEAAA3H,MAAA;UAAA,OAAAF,GAAA,CAAAyH,QAAA,GAAAvH,MAAA;QAAA,EAAsB,mBAAA4H,+DAAA5H,MAAA;UAAA,OAAsCF,GAAA,CAAAuH,eAAA,CAAArH,MAAA,CAAuB;QAAA,EAA7D;QAA3FtG,0DAAA,EAAkL;QAClLA,4DAAA,kBAAwH;QAA1CA,wDAAA,qBAAAmO,oEAAA;UAAA,OAAW/H,GAAA,CAAA2E,eAAA,CAAA3E,GAAA,CAAAyH,QAAA,GAA2B,CAAC,CAAC;QAAA,EAAC;QAAC7N,0DAAA,EAAW;QACnIA,4DAAA,kBAAgI;QAAzDA,wDAAA,qBAAAoO,oEAAA;UAAA,OAAWhI,GAAA,CAAAwH,WAAA,EAAa;QAAA,EAAC;QAAgC5N,0DAAA,EAAW;QAI/IA,wDAAA,IAAAqO,0DAAA,8BAKmB;QAEnBrO,uDAAA,eAA0E;QAC5EA,0DAAA,EAAM;;;QAxBwCA,uDAAA,GAAW;QAAXA,wDAAA,YAAAoG,GAAA,CAAA+G,MAAA,CAAW,iBAAA/G,GAAA,CAAAgH,iBAAA;QAUrBpN,uDAAA,GAAsC;QAAtCA,wDAAA,QAAAoG,GAAA,CAAA4D,EAAA,IAAA5D,GAAA,CAAA6D,eAAA,UAAsC,YAAA7D,GAAA,CAAAyH,QAAA,aAAAzH,GAAA,CAAA+D,eAAA;QAE6BnK,uDAAA,GAA8B;QAA9BA,wDAAA,aAAAoG,GAAA,CAAA6G,iBAAA,CAA8B;QAIhHjN,uDAAA,GAAqB;QAArBA,wDAAA,SAAAoG,GAAA,CAAAoE,eAAA,CAAqB;QAOnBxK,uDAAA,GAA4B;QAA5BA,wDAAA,OAAAoG,GAAA,CAAA4D,EAAA,IAAA5D,GAAA,CAAA6D,eAAA,CAA4B,gBAAA7D,GAAA,CAAA8D,OAAA;;;mBDRvCzL,iDAAI,EAAEmN,kDAAK,EAAE/D,oDAAO,EAAE/I,uDAAW,EAAA+H,gEAAA,EAAAA,2DAAA,EAAAA,mDAAA,EAAE9H,+DAAmB,EAAA8H,gEAAA,EAAEzH,8DAAe,EAAA6H,wDAAA,EAAE/H,wDAAY,EAAAiI,kDAAA,EAAElF,sFAAoB;IAAA2F,MAAA;EAAA;EAAA,OAE1GoF,8BAA+B;AAAA;;;;;;;;;;;;;;;;;;;;;AEpBW;AACM;AACwB;AAEvC;AACyB;AACnB;AACA;;;;;;;;;ICHhDhN,4DAAA,qBAAuK;IAA7DA,wDAAA,sBAAAuO,mFAAAjI,MAAA;MAAAtG,2DAAA,CAAA4M,GAAA;MAAA,MAAA4B,QAAA,GAAAxO,2DAAA,GAAAiM,SAAA;MAAA,MAAAQ,MAAA,GAAAzM,2DAAA;MAAA,OAAYA,yDAAA,CAAAyM,MAAA,CAAAgC,aAAA,CAAAnI,MAAA,EAAAkI,QAAA,CAA4B;IAAA,EAAC;IAAoBxO,0DAAA,EAAa;;;;;;;IAAxJA,wDAAA,aAAA0O,MAAA,CAAA1E,EAAA,IAAA0E,MAAA,CAAAzE,eAAA,IAAA0E,IAAA,CAAuC,YAAAD,MAAA,CAAA7F,OAAA,aAAA2F,QAAA;;;;;;IACnExO,4DAAA,gBAAwI;IAAtCA,wDAAA,mBAAA4O,sEAAAtI,MAAA;MAAAtG,2DAAA,CAAA6O,IAAA;MAAA,MAAAL,QAAA,GAAAxO,2DAAA,GAAAiM,SAAA;MAAA,MAAAlK,OAAA,GAAA/B,2DAAA;MAAA,OAASA,yDAAA,CAAA+B,OAAA,CAAAoK,YAAA,CAAA7F,MAAA,EAAAkI,QAAA,CAA2B;IAAA,EAAC;IAAvIxO,0DAAA,EAAwI;;;;;;;IAAzFA,wDAAA,QAAAuM,MAAA,CAAAvC,EAAA,IAAAuC,MAAA,CAAAtC,eAAA,IAAA0E,IAAA,CAAkC,UAAAH,QAAA;;;;;;IAFnFxO,4DAAA,aAA+F;IAC7FA,wDAAA,IAAA8O,mDAAA,wBAAoL;IACpL9O,wDAAA,IAAA+O,8CAAA,mBAAwI;IACxI/O,4DAAA,kBAAuG;IAA/BA,wDAAA,qBAAAgP,mEAAA;MAAA,MAAAlD,WAAA,GAAA9L,2DAAA,CAAAiP,IAAA;MAAA,MAAAT,QAAA,GAAA1C,WAAA,CAAAG,SAAA;MAAA,MAAAiD,OAAA,GAAAlP,2DAAA;MAAA,OAAWA,yDAAA,CAAAkP,OAAA,CAAAxC,WAAA,CAAA8B,QAAA,CAAkB;IAAA,EAAC;IAACxO,0DAAA,EAAW;;;;IAFrGA,uDAAA,GAAa;IAAbA,wDAAA,SAAAM,MAAA,CAAAuI,OAAA,CAAa;IAClB7I,uDAAA,GAAc;IAAdA,wDAAA,UAAAM,MAAA,CAAAuI,OAAA,CAAc;;;;;;IAKtB7I,4DAAA,qBAAwM;IAA5GA,wDAAA,2BAAAmP,kFAAA7I,MAAA;MAAAtG,2DAAA,CAAAoP,IAAA;MAAA,MAAAC,OAAA,GAAArP,2DAAA;MAAA,OAAAA,yDAAA,CAAAqP,OAAA,CAAAxB,QAAA,GAAAvH,MAAA;IAAA,EAAsB,sBAAAgJ,6EAAAhJ,MAAA;MAAAtG,2DAAA,CAAAoP,IAAA;MAAA,MAAAG,OAAA,GAAAvP,2DAAA;MAAA,OAAyCA,yDAAA,CAAAuP,OAAA,CAAAC,gBAAA,CAAAlJ,MAAA,CAAwB;IAAA,EAAjE;IAAsFtG,0DAAA,EAAa;;;;IAAzLA,wDAAA,aAAAuK,MAAA,CAAAP,EAAA,IAAAO,MAAA,CAAAN,eAAA,UAA2C,YAAAM,MAAA,CAAA1B,OAAA,aAAA0B,MAAA,CAAAsD,QAAA,aAAAtD,MAAA,CAAAJ,eAAA;;;;;;IACvEnK,4DAAA,gBAAmM;IAA7GA,wDAAA,2BAAAyP,wEAAAnJ,MAAA;MAAAtG,2DAAA,CAAA0P,IAAA;MAAA,MAAAC,OAAA,GAAA3P,2DAAA;MAAA,OAAAA,yDAAA,CAAA2P,OAAA,CAAA9B,QAAA,GAAAvH,MAAA;IAAA,EAAsB,mBAAAsJ,gEAAAtJ,MAAA;MAAAtG,2DAAA,CAAA0P,IAAA;MAAA,MAAAG,OAAA,GAAA7P,2DAAA;MAAA,OAAsCA,yDAAA,CAAA6P,OAAA,CAAAlC,eAAA,CAAArH,MAAA,CAAuB;IAAA,EAA7D;IAA5GtG,0DAAA,EAAmM;;;;IAApJA,wDAAA,QAAAgB,MAAA,CAAAgJ,EAAA,IAAAhJ,MAAA,CAAAiJ,eAAA,UAAsC,YAAAjJ,MAAA,CAAA6M,QAAA,aAAA7M,MAAA,CAAAmJ,eAAA;;;ADUlF,IAAM2F,uBAAwB;EAA/B,MAAOA,uBAAwB,SAAQ7H,4DAAc;IAZ3D/F,YAAA;;MAmBE,KAAA+K,iBAAiB,GAAG,IAAI;;IAExB,IAAIE,MAAMA,CAAA;MACR,OAAO,IAAI,CAACjD,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC/F,KAAK,GAAG,EAAE;IAC/C;IAEA;IACA;IACAiJ,iBAAiBA,CAACd,KAAa,EAAEnI,KAAa;MAC5C,OAAOmI,KAAK;IACd;IAEAmC,aAAaA,CAACjG,KAA0B,EAAE6E,aAAqB;MAC7D;MACA,MAAMC,YAAY,GAAG9E,KAAK,CAACrE,KAAK;MAChC,IAAImJ,YAAY,EAAE;QAChB,IAAI,CAACpD,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACM,GAAG,CAAEC,GAAG,IAAKA,GAAG,KAAKL,aAAa,GAAGC,YAAY,CAACE,IAAI,EAAE,GAAGE,GAAG,CAAC,CAAC;;IAEtG;IAEAvB,YAAYA,CAAC3D,KAAoB,EAAE6E,aAAqB;MACtD;MACA,MAAMC,YAAY,GAAI9E,KAAK,CAAC+E,MAA2B,CAACpJ,KAAK;MAC7D,IAAImJ,YAAY,IAAIA,YAAY,CAACE,IAAI,EAAE,EAAE;QACvC,IAAI,CAACtD,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACM,GAAG,CAAEC,GAAG,IAAKA,GAAG,KAAKL,aAAa,GAAGC,YAAY,CAACE,IAAI,EAAE,GAAGE,GAAG,CAAC,CAAC;;IAEtG;IAEAhB,WAAWA,CAACvI,KAAa;MACvB;MACA,IAAI,CAAC+F,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACxI,MAAM,CAAE+I,GAAG,IAAKA,GAAG,KAAKvJ,KAAK,CAAC,CAAC;IACnE;IAEAqL,gBAAgBA,CAAChH,KAA0B;MACzC,IAAIA,KAAK,CAACrE,KAAK,EAAE;QACf,IAAI,CAAC8I,iBAAiB,GAAG,KAAK;OAC/B,MAAM;QACL,IAAI,CAACA,iBAAiB,GAAG,IAAI;;IAEjC;IAEAU,eAAeA,CAACnF,KAAoB;MAClC,MAAMrE,KAAK,GAAIqE,KAAK,CAAC+E,MAA2B,CAACpJ,KAAK;MACtD,IAAIA,KAAK,IAAIA,KAAK,CAACqJ,IAAI,EAAE,EAAE;QACzB,IAAI,CAACP,iBAAiB,GAAG,KAAK;OAC/B,MAAM;QACL,IAAI,CAACA,iBAAiB,GAAG,IAAI;;IAEjC;IAEAW,WAAWA,CAAA;MACT;MACA,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjB,IAAI,CAAC,IAAI,CAACV,MAAM,CAACtI,QAAQ,CAAC,IAAI,CAACgJ,QAAQ,CAACL,IAAI,EAAE,CAAC,EAAE;UAC/C,IAAI,CAACtD,OAAO,CAAClG,QAAQ,CAAC,IAAI,CAACmJ,MAAM,CAACW,MAAM,CAAC,IAAI,CAACD,QAAQ,CAACL,IAAI,EAAE,CAAC,CAAC;;QAEjE,IAAI,CAACK,QAAQ,GAAG,EAAE,CAAC,CAAC;QACpB,IAAI,CAACZ,iBAAiB,GAAG,IAAI;;IAEjC;;EAlEW6C,uBAAwB;;;kKAAxBA,uBAAuB,IAAAnH,CAAA,IAAvBmH,uBAAuB;IAAA;EAAA;EAAvBA,uBAAwB;UAAxBA,uBAAuB;IAAA9J,SAAA;IAAA4C,MAAA;MAAAC,OAAA;IAAA;IAAAC,UAAA;IAAAC,QAAA,GAAA/I,gEAAA,CARvB,CAAC;MACViJ,OAAO,EAAElB,6DAAiB;MAC1BmB,WAAW,EAAEpB,yDAAU,CAAC,MAAMgI,uBAAuB,CAAC;MACtD3G,KAAK,EAAE;KACR,CAAC,GAAAnJ,wEAAA,EAAAA,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAsG,iCAAA5J,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBJnG,4DAAA,aAA8B;QAE5BA,wDAAA,IAAAgQ,sCAAA,iBAIM;QAENhQ,4DAAA,aAA0B;QACxBA,wDAAA,IAAAiQ,6CAAA,wBAAqN;QACrNjQ,wDAAA,IAAAkQ,wCAAA,mBAAmM;QACnMlQ,4DAAA,kBAAgI;QAAzDA,wDAAA,qBAAAmQ,6DAAA;UAAA,OAAW/J,GAAA,CAAAwH,WAAA,EAAa;QAAA,EAAC;QAAgC5N,0DAAA,EAAW;QAG7IA,uDAAA,eAA0E;QAC5EA,0DAAA,EAAM;;;QAbwCA,uDAAA,GAAW;QAAXA,wDAAA,YAAAoG,GAAA,CAAA+G,MAAA,CAAW,iBAAA/G,GAAA,CAAAgH,iBAAA;QAOxCpN,uDAAA,GAAa;QAAbA,wDAAA,SAAAoG,GAAA,CAAAyC,OAAA,CAAa;QAClB7I,uDAAA,GAAc;QAAdA,wDAAA,UAAAoG,GAAA,CAAAyC,OAAA,CAAc;QAC2E7I,uDAAA,GAA8B;QAA9BA,wDAAA,aAAAoG,GAAA,CAAA6G,iBAAA,CAA8B;QAG5GjN,uDAAA,GAA4B;QAA5BA,wDAAA,OAAAoG,GAAA,CAAA4D,EAAA,IAAA5D,GAAA,CAAA6D,eAAA,CAA4B,gBAAA7D,GAAA,CAAA8D,OAAA;;;mBDIvCzL,iDAAI,EAAEmN,kDAAK,EAAE/D,oDAAO,EAAE/I,uDAAW,EAAA+H,gEAAA,EAAAA,2DAAA,EAAAA,mDAAA,EAAE9H,+DAAmB,EAAA8H,gEAAA,EAAEzH,8DAAe,EAAA6H,wDAAA,EAAEe,4DAAc,EAAAb,sDAAA,EAAEjI,wDAAY,EAAAmI,kDAAA;IAAAO,MAAA;EAAA;EAAA,OAEpGkI,uBAAwB;AAAA;;;;;;;;;;;;;;;;AErB/B,MAAOM,iBAAiB;AAMvB,IAAKxQ,mBAGX,gBAHD,UAAYA,mBAAmB;EAC7BA,mBAAA,iBAAa;EACbA,mBAAA,qBAAiB;EAAA,OAFPA,mBAAmB;AAG/B,CAAC,CAHWA,mBAAmB,OAG9B;AAEK,MAAOD,eAAe;EAI1BuC,YAAYhB,IAAyB,EAAEH,IAAY;IACjD,IAAI,CAACG,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACH,IAAI,GAAGA,IAAI;EAClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBqC;AAC+B;AACN;AACsE;AAExF;AACF;AACoC;AACkB;AACG;AACW;AACiB;AACvB;AACX;AACpC;AACc;AACN;AACb;AACU;;;;;;;ICmP1Df,6DAAA,aAAmD;IAETA,qDAAA,kBAAW;IAAAA,2DAAA,EAAQ;IACzDA,6DAAA,wBAAmB;IACbA,qDAAA,4DAAqD;IAAAA,2DAAA,EAAK;IAGlEA,6DAAA,aAAgD;IAC9CA,wDAAA,iCAAqI;IACvIA,2DAAA,EAAM;;;;IADiDA,wDAAA,GAAmB;IAAnBA,yDAAA,oBAAmB,uBAAAuK,MAAA,CAAAyG,WAAA;;;;;;IA3Q9EhR,6DAAA,cAAmE;IAIvBA,qDAAA,kBAAW;IAAAA,2DAAA,EAAQ;IACzDA,6DAAA,wBAAmB;IACbA,qDAAA,iDAA0C;IAAAA,2DAAA,EAAK;IAGvDA,6DAAA,aAAgD;IAC9CA,wDAAA,sCAAiJ;IACnJA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEqBA,qDAAA,wBAAgB;IAAAA,2DAAA,EAAQ;IACnEA,6DAAA,yBAAmB;IACbA,qDAAA,sCAA8B;IAAAA,2DAAA,EAAK;IAG3CA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAoI;IACtIA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAE2BA,qDAAA,+BAAuB;IAAAA,2DAAA,EAAQ;IAChFA,6DAAA,yBAAmB;IACbA,qDAAA,0GAAkG;IAAAA,2DAAA,EAAK;IAG/GA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAA+G;IACjHA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEyBA,qDAAA,4BAAoB;IAAAA,2DAAA,EAAQ;IAC3EA,6DAAA,yBAAmB;IACbA,qDAAA,oEAA4D;IAAAA,2DAAA,EAAK;IACrEA,6DAAA,UAAI;IAAAA,qDAAA,uHAA+G;IAAAA,2DAAA,EAAK;IAG5HA,6DAAA,cAAgD;IAC9CA,wDAAA,gCAAyG;IAC3GA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAE6BA,qDAAA,kCAA0B;IAAAA,2DAAA,EAAQ;IACrFA,6DAAA,yBAAmB;IACbA,qDAAA,yFAAiF;IAAAA,2DAAA,EAAK;IAC1FA,6DAAA,UAAI;IAAAA,qDAAA,4DAAoD;IAAAA,2DAAA,EAAK;IAC7DA,6DAAA,UAAI;IAAAA,qDAAA,6FAAqF;IAAAA,2DAAA,EAAK;IAGlGA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAiH;IACnHA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEsBA,qDAAA,0BAAkB;IAAAA,2DAAA,EAAQ;IACtEA,6DAAA,yBAAmB;IACbA,qDAAA,gGAAwF;IAAAA,2DAAA,EAAK;IACjGA,6DAAA,UAAI;IAAAA,qDAAA,IAA6D;IAAAA,2DAAA,EAAK;IAG1EA,6DAAA,cAAgD;IAC9CA,wDAAA,4BAA0H;IAC5HA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEuBA,qDAAA,4BAAoB;IAAAA,2DAAA,EAAQ;IACzEA,6DAAA,yBAAmB;IACbA,qDAAA,0EAAkE;IAAAA,2DAAA,EAAK;IAC3EA,6DAAA,UAAI;IAAAA,qDAAA,wEAAgE;IAAAA,2DAAA,EAAK;IAG7EA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAA2G;IAC7GA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEsBA,qDAAA,+BAAuB;IAAAA,2DAAA,EAAQ;IAC3EA,6DAAA,yBAAmB;IACbA,qDAAA,6HAAqH;IAAAA,2DAAA,EAAK;IAC9HA,6DAAA,UAAI;IAAAA,qDAAA,IAA6D;IAAAA,2DAAA,EAAK;IAG1EA,6DAAA,cAAgD;IAC9CA,wDAAA,4BAA0H;IAC5HA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEuBA,qDAAA,iCAAyB;IAAAA,2DAAA,EAAQ;IAC9EA,6DAAA,yBAAmB;IACbA,qDAAA,0EAAkE;IAAAA,2DAAA,EAAK;IAC3EA,6DAAA,UAAI;IAAAA,qDAAA,6EAAqE;IAAAA,2DAAA,EAAK;IAGlFA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAA2G;IAC7GA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEsBA,qDAAA,+BAAuB;IAAAA,2DAAA,EAAQ;IAC3EA,6DAAA,0BAAmB;IACbA,qDAAA,gFAAuE;IAAAA,2DAAA,EAAK;IAChFA,6DAAA,WAAI;IAAAA,qDAAA,uHAA8G;IAAAA,2DAAA,EAAK;IACvHA,6DAAA,WAAI;IAAAA,qDAAA,KAA6D;IAAAA,2DAAA,EAAK;IAG1EA,6DAAA,eAAgD;IAC9CA,wDAAA,6BAA0H;IAC5HA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEmBA,qDAAA,6BAAoB;IAAAA,2DAAA,EAAQ;IACrEA,6DAAA,0BAAmB;IACbA,qDAAA,4EAAmE;IAAAA,2DAAA,EAAK;IAC5EA,6DAAA,WAAI;IAAAA,qDAAA,wHAA+G;IAAAA,2DAAA,EAAK;IACxHA,6DAAA,WAAI;IAAAA,qDAAA,KAAyD;IAAAA,2DAAA,EAAK;IAGtEA,6DAAA,eAAgD;IAC9CA,wDAAA,6BAAmH;IACrHA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAE0BA,qDAAA,+BAAsB;IAAAA,2DAAA,EAAQ;IAC9EA,6DAAA,0BAAmB;IACbA,qDAAA,0GAAiG;IAAAA,2DAAA,EAAK;IAC1GA,6DAAA,WAAI;IAACA,qDAAA,KAAiE;IAAAA,2DAAA,EAAK;IAG/EA,6DAAA,eAAgD;IAC9CA,wDAAA,6BAAkI;IACpIA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAE2BA,qDAAA,iCAAwB;IAAAA,2DAAA,EAAQ;IACjFA,6DAAA,0BAAmB;IACbA,qDAAA,+EAAsE;IAAAA,2DAAA,EAAK;IAC/EA,6DAAA,WAAI;IAAAA,qDAAA,6EAAoE;IAAAA,2DAAA,EAAK;IAGjFA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAA+G;IACjHA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAE4BA,qDAAA,kCAAyB;IAAAA,2DAAA,EAAQ;IACnFA,6DAAA,0BAAmB;IACbA,qDAAA,iFAAwE;IAAAA,2DAAA,EAAK;IAGrFA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAAgH;IAClHA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEsBA,qDAAA,oCAA2B;IAAAA,2DAAA,EAAQ;IAC/EA,6DAAA,0BAAmB;IACbA,qDAAA,8EAAqE;IAAAA,2DAAA,EAAK;IAGlFA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAA0G;IAC5GA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEuBA,qDAAA,qCAA4B;IAAAA,2DAAA,EAAQ;IACjFA,6DAAA,0BAAmB;IACbA,qDAAA,+EAAsE;IAAAA,2DAAA,EAAK;IAGnFA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAA2G;IAC7GA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEoBA,qDAAA,gCAAuB;IAAAA,2DAAA,EAAQ;IACzEA,6DAAA,0BAAmB;IACbA,qDAAA,6GAAoG;IAAAA,2DAAA,EAAK;IAC7GA,6DAAA,WAAI;IAAAA,qDAAA,mEAA0D;IAAAA,2DAAA,EAAK;IAGvEA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAAwG;IAC1GA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAE8BA,qDAAA,gCAAuB;IAAAA,2DAAA,EAAQ;IACnFA,6DAAA,0BAAmB;IACbA,qDAAA,+FAAsF;IAAAA,2DAAA,EAAK;IAC/FA,6DAAA,WAAI;IAAAA,qDAAA,wIAA+H;IAAAA,2DAAA,EAAK;IAG5IA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAAkH;IACpHA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEiCA,qDAAA,uCAA8B;IAAAA,2DAAA,EAAQ;IAC7FA,6DAAA,0BAAmB;IACbA,qDAAA,2FAAkF;IAAAA,2DAAA,EAAK;IAC3FA,6DAAA,WAAI;IAAAA,qDAAA,8HAAqH;IAAAA,2DAAA,EAAK;IAGlIA,6DAAA,eAAgD;IAC9CA,wDAAA,6BAAqH;IACvHA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEmBA,qDAAA,wCAA+B;IAAAA,2DAAA,EAAQ;IAChFA,6DAAA,0BAAmB;IACbA,qDAAA,wFAA+E;IAAAA,2DAAA,EAAK;IACxFA,6DAAA,WAAI;IAAAA,qDAAA,4GAAmG;IAAAA,2DAAA,EAAK;IAGhHA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAAuG;IACzGA,2DAAA,EAAM;IAGRA,yDAAA,MAAAiR,gDAAA,kBAUM;IAENjR,6DAAA,eAA0B;IAEsBA,qDAAA,4BAAmB;IAAAA,2DAAA,EAAQ;IACvEA,6DAAA,0BAAmB;IACbA,qDAAA,gGAAuF;IAAAA,2DAAA,EAAK;IAChGA,6DAAA,WAAI;IAAAA,qDAAA,iFAAwE;IAAAA,2DAAA,EAAK;IACjFA,6DAAA,WAAI;IAAAA,qDAAA,qCAA4B;IAAAA,2DAAA,EAAK;IAGzCA,6DAAA,eAAgD;IAC9CA,wDAAA,6BAA+F;IACjGA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEkBA,qDAAA,uBAAc;IAAAA,2DAAA,EAAQ;IAC9DA,6DAAA,0BAAmB;IACbA,qDAAA,kEAAyD;IAAAA,2DAAA,EAAK;IAClEA,6DAAA,WAAI;IAAAA,qDAAA,yCAAgC;IAAAA,2DAAA,EAAK;IAG7CA,6DAAA,eAAgD;IAC9CA,wDAAA,6BAA+G;IACjHA,2DAAA,EAAM;IAGRA,6DAAA,eAA0B;IAEqBA,qDAAA,yBAAgB;IAAAA,2DAAA,EAAQ;IACnEA,6DAAA,0BAAmB;IACbA,qDAAA,sDAA6C;IAAAA,2DAAA,EAAK;IAG1DA,6DAAA,eAAgD;IAC9CA,wDAAA,+BAAwG;IAC1GA,2DAAA,EAAM;IAGRA,6DAAA,gBAA4B;IAEDA,yDAAA,qBAAAkR,uEAAA;MAAAlR,4DAAA,CAAAmR,GAAA;MAAA,MAAAnQ,MAAA,GAAAhB,4DAAA;MAAA,OAAWA,0DAAA,CAAAgB,MAAA,CAAAoQ,IAAA,EAAM;IAAA,EAAC;IAACpR,2DAAA,EAAW;;;;IAxThCA,yDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAUYrR,wDAAA,GAAmB;IAAnBA,yDAAA,oBAAmB,uBAAAM,MAAA,CAAA0Q,WAAA;IAYxBhR,wDAAA,GAAqB;IAArBA,yDAAA,YAAAM,MAAA,CAAAgR,SAAA,CAAqB,uBAAAhR,MAAA,CAAA0Q,WAAA;IAYfhR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAa7BvR,wDAAA,IAAqB;IAArBA,yDAAA,YAAAM,MAAA,CAAAgR,SAAA,CAAqB;IAcnBtR,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IASrFvR,wDAAA,GAA6D;IAA7DA,iEAAA,8BAAAM,MAAA,CAAAmR,uBAAA,cAA6D;IAIdzR,wDAAA,GAA+B;IAA/BA,yDAAA,QAAAM,MAAA,CAAAmR,uBAAA,CAA+B;IAa5BzR,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAS/EvR,wDAAA,GAA6D;IAA7DA,iEAAA,8BAAAM,MAAA,CAAAoR,uBAAA,cAA6D;IAId1R,wDAAA,GAA+B;IAA/BA,yDAAA,QAAAM,MAAA,CAAAoR,uBAAA,CAA+B;IAa5B1R,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAU/EvR,wDAAA,IAA6D;IAA7DA,iEAAA,8BAAAM,MAAA,CAAAqR,uBAAA,cAA6D;IAId3R,wDAAA,GAA+B;IAA/BA,yDAAA,QAAAM,MAAA,CAAAqR,uBAAA,CAA+B;IAU9E3R,wDAAA,IAAyD;IAAzDA,iEAAA,8BAAAM,MAAA,CAAAsR,oBAAA,aAAyD;IAIb5R,wDAAA,GAA4B;IAA5BA,yDAAA,QAAAM,MAAA,CAAAsR,oBAAA,CAA4B;IASvE5R,wDAAA,GAAiE;IAAjEA,iEAAA,+BAAAM,MAAA,CAAAuR,2BAAA,cAAiE;IAIf7R,wDAAA,GAAmC;IAAnCA,yDAAA,QAAAM,MAAA,CAAAuR,2BAAA,CAAmC;IAahC7R,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAY5BvR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYnCvR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAY5BvR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAahCvR,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAanBvR,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAa5BvR,wDAAA,IAAS;IAATA,yDAAA,UAAS;IAarBA,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAI1DvR,wDAAA,GAAsB;IAAtBA,yDAAA,SAAAM,MAAA,CAAAwR,cAAA,GAAsB;IAsBQ9R,wDAAA,IAAS;IAATA,yDAAA,UAAS;IAaEA,wDAAA,IAAS;IAATA,yDAAA,UAAS;IAYnBA,wDAAA,GAA4B;IAA5BA,yDAAA,YAAAM,MAAA,CAAAyR,gBAAA,CAA4B;;;ADzRrF,IAAMC,wBAAwB;EAA/B,MAAOA,wBAAwB;IAPrC9P,YAAA;MAqBE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,sDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,sDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,sDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,sDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,sDAAM,CAACF,sDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACwP,YAAY,EAAE;MACnB,IAAI,CAACC,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAACK,kBAAkB,EAAE,CAACxP,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAC5FC,IAAI,EAAGsP,eAAe,IAAI;UACxB,IAAI,CAACC,SAAS,CAACD,eAAe,CAAC;QACjC,CAAC;QACDE,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,qCAAqC;OACxF,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACW,qBAAqB,CAAC,IAAI,CAACN,kBAAkB,EAAE,CAAC,CAACxP,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UACxHC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,yBAAyB,CAAC;YACjE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,sCAAsC;SACzF,CAAC;OACH,MAAM;QACL7B,yDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEAS,cAAcA,CAAA;MACZ;MACA,OAAOhB,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;IACnF;IAEQgB,YAAYA,CAAA;MAClB,IAAI,CAACZ,uBAAuB,GAAG/R,8DAAW,CAAC+R,uBAAuB;MAClE,IAAI,CAACC,uBAAuB,GAAGhS,8DAAW,CAACgS,uBAAuB;MAClE,IAAI,CAACC,uBAAuB,GAAGjS,8DAAW,CAACiS,uBAAuB;MAClE,IAAI,CAACC,oBAAoB,GAAGlS,8DAAW,CAACkS,oBAAoB;MAC5D,IAAI,CAACC,2BAA2B,GAAGnS,8DAAW,CAACmS,2BAA2B;IAC5E;IAEQS,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,yDAAS,CAACoC,4BAA4B,EAAE;MACjE;MACA,IAAI,CAAC5B,SAAS,GAAG,EAAE;MACnB,IAAI,CAACA,SAAS,CAACrM,IAAI,CAAC;QAAEkO,KAAK,EAAE,mBAAmB;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;MAC9DzE,8DAAW,CAAC4R,SAAS,CAACtM,OAAO,CAAEoO,QAAQ,IAAK,IAAI,CAAC9B,SAAS,CAACrM,IAAI,CAAC;QAAEkO,KAAK,EAAEC,QAAQ,CAACrS,IAAI;QAAEoD,KAAK,EAAEiP,QAAQ,CAACC;MAAI,CAAE,CAAC,CAAC;MAChH;MACA,IAAI,CAACtB,gBAAgB,GAAG,EAAE;MAC1B,IAAI,CAACA,gBAAgB,CAAC9M,IAAI,CAAC;QAAEkO,KAAK,EAAE,qBAAqB;QAAEhP,KAAK,EAAE;MAAmB,CAAE,CAAC;MACxF,IAAI,CAAC4N,gBAAgB,CAAC9M,IAAI,CAAC;QAAEkO,KAAK,EAAE,qBAAqB;QAAEhP,KAAK,EAAE;MAAmB,CAAE,CAAC;MACxF,IAAI,CAAC4N,gBAAgB,CAAC9M,IAAI,CAAC;QAAEkO,KAAK,EAAE,qBAAqB;QAAEhP,KAAK,EAAE;MAAmB,CAAE,CAAC;IAC1F;IAEQsO,SAASA,CAACD,eAAgC;MAChD,IAAI,CAACnB,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChCC,UAAU,EAAE,CAACf,eAAe,CAACe,UAAU,IAAI,EAAE,EAAE,CAACjD,uDAAU,CAACkD,QAAQ,EAAEzC,mEAAc,CAAC0C,QAAQ,CAAC,CAAC;QAC9FC,eAAe,EAAE,CAAClB,eAAe,CAACkB,eAAe,EAAE,CAACpD,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACzEG,qBAAqB,EAAE,CAACnB,eAAe,CAACmB,qBAAqB,EAAE,CAACrD,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrFI,mBAAmB,EAAE,CAACpB,eAAe,CAACoB,mBAAmB,IAAI,EAAE,EAAE,EAAE,CAAC;QACpEC,uBAAuB,EAAE,CAACrB,eAAe,CAACqB,uBAAuB,EAAE,CAACvD,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACzFM,gBAAgB,EAAE,CAACtB,eAAe,CAACsB,gBAAgB,EAAE,CAACxD,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC3EO,iBAAiB,EAAE,CAACvB,eAAe,CAACuB,iBAAiB,EAAE,CAACzD,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC7EQ,gBAAgB,EAAE,CAACxB,eAAe,CAACwB,gBAAgB,EAAE,CAAC1D,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC3ES,iBAAiB,EAAE,CAACzB,eAAe,CAACyB,iBAAiB,EAAE,CAAC3D,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC7EU,gBAAgB,EAAE,CAAC1B,eAAe,CAAC0B,gBAAgB,EAAE,CAAC5D,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC3EW,aAAa,EAAE,CAAC3B,eAAe,CAAC2B,aAAa,EAAE,CAAC7D,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrEY,oBAAoB,EAAE,CAAC5B,eAAe,CAAC4B,oBAAoB,EAAE,CAAC9D,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACnFa,qBAAqB,EAAE,CAAC7B,eAAe,CAAC6B,qBAAqB,EAAE,CAAC/D,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrFc,sBAAsB,EAAE,CAAC9B,eAAe,CAAC8B,sBAAsB,EAAE,CAAChE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACvFe,gBAAgB,EAAE,CAAC/B,eAAe,CAAC+B,gBAAgB,EAAE,CAACjE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC3EgB,iBAAiB,EAAE,CAAChC,eAAe,CAACgC,iBAAiB,EAAE,CAAClE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC7EiB,cAAc,EAAE,CAACjC,eAAe,CAACiC,cAAc,EAAE,CAACnE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACvEkB,wBAAwB,EAAE,CAAClC,eAAe,CAACkC,wBAAwB,EAAE,CAACpE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC3FmB,2BAA2B,EAAE,CAACnC,eAAe,CAACmC,2BAA2B,GAAG,GAAG,EAAE,CAACrE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACvGoB,aAAa,EAAE,CAACpC,eAAe,CAACoC,aAAa,EAAE,CAACtE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrEqB,UAAU,EAAE,CAACrC,eAAe,CAACqC,UAAU,EAAE,EAAE,CAAC;QAC5CC,gBAAgB,EAAE,CAACtC,eAAe,CAACsC,gBAAgB,EAAE,CAACxE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC3EuB,YAAY,EAAE,CAACvC,eAAe,CAACuC,YAAY,EAAE,CAACzE,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACnEwB,eAAe,EAAE,CAACxC,eAAe,CAACwC,eAAe,EAAE,CAAC1E,uDAAU,CAACkD,QAAQ,CAAC;OACzE,EAAE;QAAEyB,SAAS,EAAE,IAAI,CAACC;MAAmB,CAAE,CAAC;IAC7C;IAEQA,mBAAmBA,CAACC,SAA2B;MACrD;MACA,MAAMzC,KAAK,GAAqB;QAAE0C,kBAAkB,EAAE;MAAI,CAAE;MAC5D,MAAMP,UAAU,GAAG/D,yDAAS,CAACmC,mBAAmB,CAASkC,SAAS,EAAE,YAAY,CAAC;MACjF,IAAIrE,yDAAS,CAACmC,mBAAmB,CAAUkC,SAAS,EAAE,eAAe,CAAC,KAAK,CAACN,UAAU,IAAI,CAACA,UAAU,CAACrH,IAAI,EAAE,CAAC,EAAE;QAC7GsD,yDAAS,CAACuE,8BAA8B,CAACF,SAAS,CAACG,QAAQ,CAAC,YAAY,CAAC,EAAE5C,KAAK,CAAC;QACjF5B,yDAAS,CAACyE,4BAA4B,CAACJ,SAAS,CAAC;QACjD,OAAOzC,KAAK;;MAEd5B,yDAAS,CAAC0E,gCAAgC,CAACL,SAAS,CAACG,QAAQ,CAAC,YAAY,CAAC,EAAE5C,KAAK,CAAC;MACnF,OAAO,IAAI;IACb;IAEQH,kBAAkBA,CAAA;MACxB,MAAMkD,QAAQ,GAAG,IAAI9E,6DAAe,EAAE;MACtC8E,QAAQ,CAAClC,UAAU,GAAGzC,yDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,YAAY,CAAC;MAC9FoE,QAAQ,CAAC/B,eAAe,GAAG5C,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACtGoE,QAAQ,CAAC9B,qBAAqB,GAAG7C,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MAClHoE,QAAQ,CAAC7B,mBAAmB,GAAG9C,yDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,qBAAqB,CAAC;MAChHoE,QAAQ,CAAC5B,uBAAuB,GAAG/C,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,yBAAyB,CAAC;MACvHoE,QAAQ,CAAC3B,gBAAgB,GAAGhD,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAAC1B,iBAAiB,GAAGjD,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,mBAAmB,CAAC;MAC3GoE,QAAQ,CAACzB,gBAAgB,GAAGlD,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAACxB,iBAAiB,GAAGnD,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,mBAAmB,CAAC;MAC3GoE,QAAQ,CAACvB,gBAAgB,GAAGpD,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAACtB,aAAa,GAAGrD,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAACrB,oBAAoB,GAAGtD,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,sBAAsB,CAAC;MAChHoE,QAAQ,CAACpB,qBAAqB,GAAGvD,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MACnHoE,QAAQ,CAACnB,sBAAsB,GAAGxD,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,wBAAwB,CAAC;MACrHoE,QAAQ,CAAClB,gBAAgB,GAAGzD,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACzGoE,QAAQ,CAACjB,iBAAiB,GAAG1D,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,mBAAmB,CAAC;MAC3GoE,QAAQ,CAAChB,cAAc,GAAG3D,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACrGoE,QAAQ,CAACf,wBAAwB,GAAG5D,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,0BAA0B,CAAC;MACzHoE,QAAQ,CAACd,2BAA2B,GAAG7D,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,6BAA6B,CAAC,GAAG,GAAG,CAAC,CAAC;MACtIoE,QAAQ,CAACb,aAAa,GAAG9D,yDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MACnGoE,QAAQ,CAACZ,UAAU,GAAG/D,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,YAAY,CAAC;MAC5FoE,QAAQ,CAACX,gBAAgB,GAAGhE,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAACV,YAAY,GAAGjE,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,cAAc,CAAC;MAChGoE,QAAQ,CAACT,eAAe,GAAGlE,yDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACtG,OAAOoE,QAAQ;IACjB;;EAhJWzD,wBAAwB;qBAAxBA,wBAAwB;EAAA;EAAxBA,wBAAwB;UAAxBA,wBAAwB;IAAAhM,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,kEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAiM,kCAAAvP,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC3BrCnG,6DAAA,aAA0B;QAEtBA,yDAAA,IAAA2V,wCAAA,qBA2TO;QACT3V,2DAAA,EAAU;;;QA5TDA,wDAAA,GAAkB;QAAlBA,yDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDuBjB5S,kDAAI,EAAE8R,uDAAW,EAAA1J,iDAAA,EAAE/H,wDAAW,EAAAmI,6DAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAElI,gEAAmB,EAAAkI,+DAAA,EAAAA,4DAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAEsJ,oGAAqB,EAAEzD,mIAA8B,EAAE9E,uGAAsB,EAAE4H,4GAAuB,EAAEY,iGAAoB,EAAE7F,kHAAyB;IAAAjD,MAAA;EAAA;EAAA,OAEzNoK,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3BE;AAC+B;AACN;AACoD;AAEtE;AACF;AACoC;AACkB;AACG;AAC4B;AAClC;AACpC;AACc;AACN;AACb;;;;;;;;ICblDhS,4DAAA,cAAmE;IAItBA,oDAAA,mBAAY;IAAAA,0DAAA,EAAQ;IAC3DA,4DAAA,wBAAmB;IACbA,oDAAA,2FAAoF;IAAAA,0DAAA,EAAK;IAC7FA,4DAAA,SAAI;IAAAA,oDAAA,gGAAyF;IAAAA,0DAAA,EAAK;IAClGA,4DAAA,UAAI;IAAAA,oDAAA,oFAA4E;IAAAA,0DAAA,EAAK;IAGzFA,4DAAA,cAAgD;IAC9CA,uDAAA,6BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEkBA,oDAAA,qBAAa;IAAAA,0DAAA,EAAQ;IAC7DA,4DAAA,yBAAmB;IACbA,oDAAA,gEAAwD;IAAAA,0DAAA,EAAK;IAGrEA,4DAAA,cAAgD;IAC9CA,uDAAA,wCAAmJ;IACrJA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEyBA,oDAAA,6BAAqB;IAAAA,0DAAA,EAAQ;IAC5EA,4DAAA,yBAAmB;IACbA,oDAAA,kHAA0G;IAAAA,0DAAA,EAAK;IACnHA,4DAAA,UAAI;IAAAA,oDAAA,IAAoE;IAAAA,0DAAA,EAAK;IAGjFA,4DAAA,cAAgD;IAC9CA,uDAAA,4BAAgI;IAClIA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE0BA,oDAAA,+BAAuB;IAAAA,0DAAA,EAAQ;IAC/EA,4DAAA,yBAAmB;IACbA,oDAAA,6EAAqE;IAAAA,0DAAA,EAAK;IAC9EA,4DAAA,UAAI;IAAAA,oDAAA,2EAAmE;IAAAA,0DAAA,EAAK;IAGhFA,4DAAA,cAAgD;IAC9CA,uDAAA,8BAA8G;IAChHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEqBA,oDAAA,yBAAiB;IAAAA,0DAAA,EAAQ;IACpEA,4DAAA,yBAAmB;IACbA,oDAAA,qEAA6D;IAAAA,0DAAA,EAAK;IAG1EA,4DAAA,cAAgD;IAC9CA,uDAAA,8BAAyG;IAC3GA,0DAAA,EAAM;IAGRA,4DAAA,eAA4B;IAEDA,wDAAA,qBAAAkW,sEAAA;MAAAlW,2DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,2DAAA;MAAA,OAAWA,yDAAA,CAAAuK,MAAA,CAAA6G,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;;;;IApEhCA,wDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAYGrR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYlBvR,uDAAA,GAAmB;IAAnBA,wDAAA,oBAAmB,uBAAAM,MAAA,CAAA0Q,WAAA;IAS1EhR,uDAAA,GAAoE;IAApEA,gEAAA,kCAAAM,MAAA,CAAA6V,0BAAA,cAAoE;IAIlBnW,uDAAA,GAAkC;IAAlCA,wDAAA,QAAAM,MAAA,CAAA6V,0BAAA,CAAkC;IAa/BnW,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYlCvR,uDAAA,GAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;;;ADxCtF,IAAM6E,wBAAwB;EAA/B,MAAOA,wBAAwB;IAPrClU,YAAA;MAeE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,qDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,qDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,qDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,qDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACwP,YAAY,EAAE;MACnB,IAAI,CAACC,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAACmE,kBAAkB,EAAE,CAACtT,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAC5FC,IAAI,EAAGoT,eAAe,IAAI;UACxB,IAAI,CAAC7D,SAAS,CAAC6D,eAAe,CAAC;QACjC,CAAC;QACD5D,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,qCAAqC;OACxF,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACqE,qBAAqB,CAAC,IAAI,CAACF,kBAAkB,EAAE,CAAC,CAACtT,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UACxHC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,yBAAyB,CAAC;YACjE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,sCAAsC;SACzF,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQgB,YAAYA,CAAA;MAClB,IAAI,CAAC8D,0BAA0B,GAAGzW,8DAAW,CAACyW,0BAA0B;IAC1E;IAEQ7D,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,wDAAS,CAACoC,4BAA4B,EAAE;IACnE;IAEQT,SAASA,CAAC6D,eAAgC;MAChD,IAAI,CAACjF,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChCkD,WAAW,EAAE,CAACF,eAAe,CAACE,WAAW,EAAE,CAAClG,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACjEiD,YAAY,EAAE,CAACH,eAAe,CAACG,YAAY,IAAI,EAAE,EAAE,EAAE,CAAC;QACtDC,mBAAmB,EAAE,CAACJ,eAAe,CAACI,mBAAmB,EAAE,CAACpG,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACjFmD,oBAAoB,EAAE,CAACL,eAAe,CAACK,oBAAoB,EAAE,CAACrG,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACnFoD,eAAe,EAAE,CAACN,eAAe,CAACM,eAAe,EAAE,CAACtG,uDAAU,CAACkD,QAAQ,CAAC;OACzE,CAAC;IACJ;IAEQ6C,kBAAkBA,CAAA;MACxB,MAAMZ,QAAQ,GAAG,IAAIQ,6DAAe,EAAE;MACtCR,QAAQ,CAACe,WAAW,GAAG1F,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC/FoE,QAAQ,CAACgB,YAAY,GAAG3F,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,cAAc,CAAC;MAClGoE,QAAQ,CAACiB,mBAAmB,GAAG5F,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,qBAAqB,CAAC;MAC9GoE,QAAQ,CAACkB,oBAAoB,GAAG7F,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,sBAAsB,CAAC;MACjHoE,QAAQ,CAACmB,eAAe,GAAG9F,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACvG,OAAOoE,QAAQ;IACjB;;EArEWW,wBAAwB;qBAAxBA,wBAAwB;EAAA;EAAxBA,wBAAwB;UAAxBA,wBAAwB;IAAApQ,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAoN,kCAAA1Q,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCxBrCnG,4DAAA,aAA0B;QAEtBA,wDAAA,IAAA8W,wCAAA,mBAuEO;QACT9W,0DAAA,EAAU;;;QAxEDA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDoBjB5S,kDAAI,EAAEK,wDAAW,EAAA+H,6DAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAE9H,gEAAmB,EAAA8H,+DAAA,EAAAA,4DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAEsJ,oGAAqB,EAAEvI,uGAAsB,EAAE8E,mIAA8B,EAAE0D,iGAAoB;IAAA9I,MAAA;EAAA;EAAA,OAErKwO,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBE;AAC+B;AACN;AACoD;AAEtE;AACF;AACuB;AAC+B;AACG;AACN;AACN;AAClC;AACkB;AACN;AACb;AACU;;;;;;;;ICd5DpW,6DAAA,cAAmE;IAI1BA,qDAAA,mBAAY;IAAAA,2DAAA,EAAQ;IACvDA,6DAAA,wBAAmB;IACbA,qDAAA,gDAAyC;IAAAA,2DAAA,EAAK;IAClDA,6DAAA,SAAI;IAAAA,qDAAA,qDAA8C;IAAAA,2DAAA,EAAK;IAG3DA,6DAAA,cAAgD;IAC9CA,wDAAA,yBAA8F;IAChGA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEcA,qDAAA,iBAAS;IAAAA,2DAAA,EAAQ;IACrDA,6DAAA,yBAAmB;IACbA,qDAAA,4CAAoC;IAAAA,2DAAA,EAAK;IAGjDA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAA6H;IAC/HA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEYA,qDAAA,kCAA0B;IAAAA,2DAAA,EAAQ;IACpEA,6DAAA,yBAAmB;IACbA,qDAAA,+CAAuC;IAAAA,2DAAA,EAAK;IAChDA,6DAAA,UAAI;IAAAA,qDAAA,sCAA8B;IAAAA,2DAAA,EAAK;IAG3CA,6DAAA,cAAgD;IAC9CA,wDAAA,4BAA0F;IAC5FA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEaA,qDAAA,gBAAQ;IAAAA,2DAAA,EAAQ;IACnDA,6DAAA,yBAAmB;IACbA,qDAAA,kDAA0C;IAAAA,2DAAA,EAAK;IACnDA,6DAAA,UAAI;IAAAA,qDAAA,iCAAyB;IAAAA,2DAAA,EAAK;IAGtCA,6DAAA,cAAgD;IAC9CA,wDAAA,4BAAsF;IACxFA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEmBA,qDAAA,uBAAe;IAAAA,2DAAA,EAAQ;IAChEA,6DAAA,yBAAmB;IACbA,qDAAA,4DAAoD;IAAAA,2DAAA,EAAK;IAGjEA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAuG;IACzGA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEqBA,qDAAA,yBAAiB;IAAAA,2DAAA,EAAQ;IACpEA,6DAAA,yBAAmB;IACbA,qDAAA,wDAAgD;IAAAA,2DAAA,EAAK;IACzDA,6DAAA,UAAI;IAAAA,qDAAA,6EAAqE;IAAAA,2DAAA,EAAK;IAGlFA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAyG;IAC3GA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEuBA,qDAAA,2BAAmB;IAAAA,2DAAA,EAAQ;IACxEA,6DAAA,yBAAmB;IACbA,qDAAA,2DAAmD;IAAAA,2DAAA,EAAK;IAGhEA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAA2G;IAC7GA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEiBA,qDAAA,oBAAY;IAAAA,2DAAA,EAAQ;IAC3DA,6DAAA,yBAAmB;IACbA,qDAAA,4GAAoG;IAAAA,2DAAA,EAAK;IAGjHA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAqG;IACvGA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEqBA,qDAAA,yBAAiB;IAAAA,2DAAA,EAAQ;IACpEA,6DAAA,yBAAmB;IACbA,qDAAA,mDAA2C;IAAAA,2DAAA,EAAK;IAGxDA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAoI;IACtIA,2DAAA,EAAM;IAGRA,6DAAA,eAA4B;IAEDA,yDAAA,qBAAAiX,sEAAA;MAAAjX,4DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,4DAAA;MAAA,OAAWA,0DAAA,CAAAuK,MAAA,CAAA6G,IAAA,EAAM;IAAA,EAAC;IAACpR,2DAAA,EAAW;;;;IApHhCA,yDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAWLrR,wDAAA,IAAkC;IAAlCA,yDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAY7BhR,wDAAA,GAAqB;IAArBA,yDAAA,YAAAM,MAAA,CAAA4W,SAAA,CAAqB,uBAAA5W,MAAA,CAAA0Q,WAAA;IAazBhR,wDAAA,IAAS;IAATA,yDAAA,UAAS;IAaRA,wDAAA,IAAS;IAATA,yDAAA,UAAS;IAYDA,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAa3BvR,wDAAA,IAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAY3BvR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYnCvR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYzBvR,wDAAA,GAAqB;IAArBA,yDAAA,YAAAM,MAAA,CAAA4W,SAAA,CAAqB,uBAAA5W,MAAA,CAAA0Q,WAAA;;;ADvF9E,IAAMmG,wBAAwB;EAA/B,MAAOA,wBAAwB;IAPrCjV,YAAA;MAcE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,sDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,sDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,sDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,sDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,sDAAM,CAACF,sDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACyP,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAACkF,cAAc,EAAE,CAACrU,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QACxFC,IAAI,EAAGmU,WAAW,IAAI;UACpB,IAAI,CAAC5E,SAAS,CAAC4E,WAAW,CAAC;QAC7B,CAAC;QACD3E,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,iCAAiC;OACpF,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACoF,iBAAiB,CAAC,IAAI,CAACF,cAAc,EAAE,CAAC,CAACrU,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAChHC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,qBAAqB,CAAC;YAC7D,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,kCAAkC;SACrF,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQiB,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,wDAAS,CAACoC,4BAA4B,EAAE;MACjE;MACA,IAAI,CAACgE,SAAS,GAAG,EAAE;MACnB,IAAI,CAACA,SAAS,CAACjS,IAAI,CAAC;QAAEkO,KAAK,EAAE,OAAO;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;MAClD,IAAI,CAAC+S,SAAS,CAACjS,IAAI,CAAC;QAAEkO,KAAK,EAAE,MAAM;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;MACjD,IAAI,CAAC+S,SAAS,CAACjS,IAAI,CAAC;QAAEkO,KAAK,EAAE,SAAS;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;MACpD,IAAI,CAAC+S,SAAS,CAACjS,IAAI,CAAC;QAAEkO,KAAK,EAAE,OAAO;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;MAClD,IAAI,CAAC+S,SAAS,CAACjS,IAAI,CAAC;QAAEkO,KAAK,EAAE,UAAU;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;IACvD;IAEQsO,SAASA,CAAC4E,WAAwB;MACxC,IAAI,CAAChG,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChCiE,OAAO,EAAE,CAACF,WAAW,CAACE,OAAO,EAAE,CAACjH,uDAAU,CAACkD,QAAQ,EAAEzC,kEAAc,CAAC0C,QAAQ,CAAC,CAAC;QAC9E+D,QAAQ,EAAE,CAACH,WAAW,CAACG,QAAQ,EAAE,CAAClH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACvDiE,MAAM,EAAE,CAACJ,WAAW,CAACI,MAAM,EAAE,CAACnH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACnDkE,OAAO,EAAE,CAACL,WAAW,CAACK,OAAO,EAAE,CAACpH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrDmE,aAAa,EAAE,CAACN,WAAW,CAACM,aAAa,EAAE,CAACrH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACjEoE,eAAe,EAAE,CAACP,WAAW,CAACO,eAAe,EAAE,CAACtH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrEqE,iBAAiB,EAAE,CAACR,WAAW,CAACQ,iBAAiB,EAAE,CAACvH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACzEsE,WAAW,EAAE,CAACT,WAAW,CAACS,WAAW,EAAE,CAACxH,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC7DuE,eAAe,EAAE,CAACV,WAAW,CAACU,eAAe,EAAE,CAACzH,uDAAU,CAACkD,QAAQ,CAAC;OACrE,CAAC;IACJ;IAEQ4D,cAAcA,CAAA;MACpB,MAAM3B,QAAQ,GAAG,IAAIuB,yDAAW,EAAE;MAClCvB,QAAQ,CAAC8B,OAAO,GAAGzG,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,SAAS,CAAC;MACtFoE,QAAQ,CAAC+B,QAAQ,GAAG1G,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,UAAU,CAAC;MACxFoE,QAAQ,CAACgC,MAAM,GAAG3G,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,QAAQ,CAAC;MACpFoE,QAAQ,CAACiC,OAAO,GAAG5G,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,SAAS,CAAC;MACtFoE,QAAQ,CAACkC,aAAa,GAAG7G,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MACnGoE,QAAQ,CAACmC,eAAe,GAAG9G,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACvGoE,QAAQ,CAACoC,iBAAiB,GAAG/G,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,mBAAmB,CAAC;MAC3GoE,QAAQ,CAACqC,WAAW,GAAGhH,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC/FoE,QAAQ,CAACsC,eAAe,GAAGjH,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACtG,OAAOoE,QAAQ;IACjB;;EA9EW0B,wBAAwB;qBAAxBA,wBAAwB;EAAA;EAAxBA,wBAAwB;UAAxBA,wBAAwB;IAAAnR,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,kEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAuO,kCAAA7R,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCzBrCnG,6DAAA,aAA0B;QAEtBA,yDAAA,IAAAiY,wCAAA,oBAuHO;QACTjY,2DAAA,EAAU;;;QAxHDA,wDAAA,GAAkB;QAAlBA,yDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDqBjB5S,kDAAI,EAAEK,wDAAW,EAAA+H,6DAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAE9H,gEAAmB,EAAA8H,+DAAA,EAAAA,4DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAEsJ,oGAAqB,EAAEsG,2FAAkB,EAAE7O,uGAAsB,EAAEwI,iGAAoB;IAAA9I,MAAA;EAAA;EAAA,OAEzJuP,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBE;AAC+B;AACN;AACwC;AAC1D;AACE;AACJ;AACuB;AAC+B;AACQ;AAC3C;AACU;AACN;AACb;;;;;;;;;ICXlDnX,4DAAA,cAAmE;IAI7DA,uDAAA,mBAA4K;IAC9KA,0DAAA,EAAM;IAGRA,4DAAA,aAA0B;IAEwBA,oDAAA,WAAI;IAAAA,0DAAA,EAAO;IAI7DA,4DAAA,aAA0B;IAEqBA,oDAAA,oBAAY;IAAAA,0DAAA,EAAQ;IAC/DA,4DAAA,yBAAmB;IACbA,oDAAA,mDAA2C;IAAAA,0DAAA,EAAK;IACpDA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,yBAAiB;IAAAA,0DAAA,EAAK;IAC1BA,4DAAA,UAAI;IAAAA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAK;IAGjCA,4DAAA,eAAgD;IAC9CA,uDAAA,gCAAkH;IACpHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE6BA,oDAAA,6BAAqB;IAAAA,0DAAA,EAAQ;IAChFA,4DAAA,yBAAmB;IACbA,oDAAA,uDAA+C;IAAAA,0DAAA,EAAK;IACxDA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,yBAAiB;IAAAA,0DAAA,EAAK;IAC1BA,4DAAA,UAAI;IAAAA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAK;IAGjCA,4DAAA,eAAgD;IAC9CA,uDAAA,gCAA0H;IAC5HA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEgCA,oDAAA,gCAAwB;IAAAA,0DAAA,EAAQ;IACtFA,4DAAA,yBAAmB;IACbA,oDAAA,2EAAmE;IAAAA,0DAAA,EAAK;IAC5EA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,qEAA6D;IAAAA,0DAAA,EAAK;IACtEA,4DAAA,UAAI;IAAAA,oDAAA,kCAA0B;IAAAA,0DAAA,EAAK;IAGvCA,4DAAA,eAAgD;IAC9CA,uDAAA,gCAA6H;IAC/HA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEwBA,oDAAA,aAAK;IAAAA,0DAAA,EAAO;IAI9DA,4DAAA,cAA0B;IAEsBA,oDAAA,oBAAY;IAAAA,0DAAA,EAAQ;IAChEA,4DAAA,yBAAmB;IACbA,oDAAA,oDAA4C;IAAAA,0DAAA,EAAK;IACrDA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,kCAA0B;IAAAA,0DAAA,EAAK;IACnCA,4DAAA,UAAI;IAAAA,oDAAA,qCAA6B;IAAAA,0DAAA,EAAK;IAG1CA,4DAAA,eAAgD;IAC9CA,uDAAA,gCAAmH;IACrHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEiCA,oDAAA,gCAAwB;IAAAA,0DAAA,EAAQ;IACvFA,4DAAA,yBAAmB;IACbA,oDAAA,6EAAqE;IAAAA,0DAAA,EAAK;IAC9EA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,2EAAmE;IAAAA,0DAAA,EAAK;IAC5EA,4DAAA,UAAI;IAAAA,oDAAA,sCAA8B;IAAAA,0DAAA,EAAK;IAG3CA,4DAAA,eAAgD;IAC9CA,uDAAA,gCAA8H;IAChIA,0DAAA,EAAM;IAGRA,4DAAA,eAA4B;IAEDA,wDAAA,qBAAAoY,0EAAA;MAAApY,2DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,2DAAA;MAAA,OAAWA,yDAAA,CAAAuK,MAAA,CAAA6G,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;;;;IAjGhCA,wDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAyBSrR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAe1BhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAe/BhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAqB5ChR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAevBhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;;;ADvEzG,IAAMqH,4BAA4B;EAAnC,MAAOA,4BAA4B;IAPzCnW,YAAA;MAWE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,qDAAM,CAACyR,8DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,qDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,qDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,qDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACqP,eAAe,CAACoG,sBAAsB,EAAE,CAACvV,IAAI,CAAClE,8EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAChGC,IAAI,EAAGqV,mBAAmB,IAAI;UAC5B,IAAI,CAAC9F,SAAS,CAAC8F,mBAAmB,CAAC;QACrC,CAAC;QACD7F,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,yCAAyC;OAC5F,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACsG,yBAAyB,CAAC,IAAI,CAACF,sBAAsB,EAAE,CAAC,CAACvV,IAAI,CAAClE,8EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAChIC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,6BAA6B,CAAC;YACrE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,0CAA0C;SAC7F,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQoB,SAASA,CAAC8F,mBAAwC;MACxD,IAAI,CAAClH,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChCmF,eAAe,EAAE,CAACF,mBAAmB,CAACE,eAAe,IAAI,EAAE,EAAE,EAAE,CAAC;QAChEC,uBAAuB,EAAE,CAACH,mBAAmB,CAACG,uBAAuB,IAAI,EAAE,EAAE,EAAE,CAAC;QAChFC,0BAA0B,EAAE,CAACJ,mBAAmB,CAACI,0BAA0B,IAAI,EAAE,EAAE,EAAE,CAAC;QACtFC,gBAAgB,EAAE,CAACL,mBAAmB,CAACK,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;QAClEC,2BAA2B,EAAE,CAACN,mBAAmB,CAACM,2BAA2B,IAAI,EAAE,EAAE,EAAE;OACxF,CAAC;IACJ;IAEQP,sBAAsBA,CAAA;MAC5B,MAAM7C,QAAQ,GAAG,IAAI0C,iEAAmB,EAAE;MAC1C1C,QAAQ,CAACgD,eAAe,GAAG3H,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACxGoE,QAAQ,CAACiD,uBAAuB,GAAG5H,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,yBAAyB,CAAC;MACxHoE,QAAQ,CAACkD,0BAA0B,GAAG7H,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,4BAA4B,CAAC;MAC9HoE,QAAQ,CAACmD,gBAAgB,GAAG9H,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MAC1GoE,QAAQ,CAACoD,2BAA2B,GAAG/H,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,6BAA6B,CAAC;MAChI,OAAOoE,QAAQ;IACjB;;EAtDW4C,4BAA4B;qBAA5BA,4BAA4B;EAAA;EAA5BA,4BAA4B;UAA5BA,4BAA4B;IAAArS,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAqP,sCAAA3S,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCtBzCnG,4DAAA,aAA0B;QAEtBA,wDAAA,IAAA+Y,4CAAA,mBAoGO;QACT/Y,0DAAA,EAAU;;;QArGDA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDkBjB5S,kDAAI,EAAEK,uDAAW,EAAA+H,4DAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAE9H,+DAAmB,EAAA8H,8DAAA,EAAAA,2DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAE+Q,2DAAa,EAAA7Q,uDAAA,EAAEoJ,oGAAqB,EAAEX,4GAAuB;IAAAlI,MAAA;EAAA;EAAA,OAE/HyQ,4BAA4B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBF;AAC+B;AACN;AACoD;AAEtE;AACA;AACM;AACJ;AACJ;AACuB;AAC+B;AACG;AACN;AACN;AACJ;AACZ;AACN;AACb;;;;;;;;;;;IChBlDrY,4DAAA,cAAmE;IAI7DA,uDAAA,mBAA6G;IAC/GA,0DAAA,EAAM;IAGRA,4DAAA,aAA0B;IAEtBA,uDAAA,mBAA4H;IAC9HA,0DAAA,EAAM;IAGRA,4DAAA,aAA0B;IAEwBA,oDAAA,eAAO;IAAAA,0DAAA,EAAO;IAIhEA,4DAAA,cAA0B;IAEYA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IAChDA,4DAAA,yBAAmB;IACbA,oDAAA,uFAA+E;IAAAA,0DAAA,EAAK;IAG5FA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAAgG;IAClGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IACxBA,uDAAA,eAAqE;IACrEA,4DAAA,eAAgD;IACvBA,wDAAA,qBAAAkZ,2EAAA;MAAAlZ,2DAAA,CAAAmR,GAAA;MAAA,MAAAnQ,MAAA,GAAAhB,2DAAA;MAAA,OAAWA,yDAAA,CAAAgB,MAAA,CAAAoQ,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,cAA0B;IAEwBA,oDAAA,YAAI;IAAAA,0DAAA,EAAO;IACzDA,uDAAA,eAAoF;IACtFA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEgBA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IACpDA,4DAAA,yBAAmB;IACbA,oDAAA,6FAAqF;IAAAA,0DAAA,EAAK;IAGlGA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAAoG;IACtGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEgBA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IACpDA,4DAAA,yBAAmB;IACbA,oDAAA,qDAA6C;IAAAA,0DAAA,EAAK;IAG1DA,4DAAA,eAAgD;IAC9CA,uDAAA,0BAAiG;IACnGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEkBA,oDAAA,mBAAW;IAAAA,0DAAA,EAAQ;IAC3DA,4DAAA,yBAAmB;IACbA,oDAAA,0DAAkD;IAAAA,0DAAA,EAAK;IAG/DA,4DAAA,eAAgD;IAC9CA,uDAAA,0BAAmG;IACrGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEcA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IAClDA,4DAAA,yBAAmB;IACbA,oDAAA,mEAA2D;IAAAA,0DAAA,EAAK;IAGxEA,4DAAA,eAAgD;IAC9CA,uDAAA,0BAA+F;IACjGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEYA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IAClDA,4DAAA,yBAAmB;IACbA,oDAAA,qEAA6D;IAAAA,0DAAA,EAAK;IAG1EA,4DAAA,eAAgD;IAC9CA,uDAAA,0BAA6F;IAC/FA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEkBA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,yBAAmB;IACbA,oDAAA,wCAAgC;IAAAA,0DAAA,EAAK;IAG7CA,4DAAA,eAAgD;IAC9CA,uDAAA,0BAAmG;IACrGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEkBA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,yBAAmB;IACbA,oDAAA,yDAAiD;IAAAA,0DAAA,EAAK;IAG9DA,4DAAA,eAAgD;IAC9CA,uDAAA,0BAAmH;IACrHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEiBA,oDAAA,eAAO;IAAAA,0DAAA,EAAQ;IACtDA,4DAAA,yBAAmB;IACbA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAK;IAC3BA,4DAAA,UAAI;IAAAA,oDAAA,2DAAkD;IAAAA,0DAAA,EAAK;IAG/DA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAkG;IACpGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEoBA,oDAAA,mBAAU;IAAAA,0DAAA,EAAQ;IAC5DA,4DAAA,0BAAmB;IACbA,oDAAA,uDAA8C;IAAAA,0DAAA,EAAK;IAG3DA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEwBA,oDAAA,uBAAc;IAAAA,0DAAA,EAAQ;IACpEA,4DAAA,0BAAmB;IACbA,oDAAA,8DAAqD;IAAAA,0DAAA,EAAK;IAC9DA,4DAAA,WAAI;IAAAA,oDAAA,gEAAuD;IAAAA,0DAAA,EAAK;IAGpEA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAyG;IAC3GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAAmZ,4EAAA;MAAAnZ,2DAAA,CAAAmR,GAAA;MAAA,MAAAjF,MAAA,GAAAlM,2DAAA;MAAA,OAAWA,yDAAA,CAAAkM,MAAA,CAAAkN,IAAA,CAAK,MAAM,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC3FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAAqZ,4EAAA;MAAArZ,2DAAA,CAAAmR,GAAA;MAAA,MAAAzC,MAAA,GAAA1O,2DAAA;MAAA,OAAWA,yDAAA,CAAA0O,MAAA,CAAA0C,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAO;IAC5DA,4DAAA,cAA+C;IAC7CA,uDAAA,gBAA4F;IAC9FA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEmBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACvDA,4DAAA,0BAAmB;IACbA,oDAAA,+FAAsF;IAAAA,0DAAA,EAAK;IAGnGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAAuG;IACzGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEgBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IACrDA,4DAAA,0BAAmB;IACbA,oDAAA,iCAAwB;IAAAA,0DAAA,EAAK;IAGrCA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAiG;IACnGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEmBA,oDAAA,oBAAW;IAAAA,0DAAA,EAAQ;IAC5DA,4DAAA,0BAAmB;IACbA,oDAAA,qCAA4B;IAAAA,0DAAA,EAAK;IAGzCA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAoH;IACtHA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEqCA,wDAAA,qBAAAsZ,4EAAA;MAAAtZ,2DAAA,CAAAmR,GAAA;MAAA,MAAA5E,MAAA,GAAAvM,2DAAA;MAAA,OAAWA,yDAAA,CAAAuM,MAAA,CAAAgN,eAAA,EAAiB;IAAA,EAAC;IAACvZ,0DAAA,EAAW;IACpGA,4DAAA,qBAAmF;IAA5BA,wDAAA,qBAAAwZ,4EAAA;MAAAxZ,2DAAA,CAAAmR,GAAA;MAAA,MAAA1E,MAAA,GAAAzM,2DAAA;MAAA,OAAWA,yDAAA,CAAAyM,MAAA,CAAA2M,IAAA,CAAK,SAAS,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC9FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAAyZ,4EAAA;MAAAzZ,2DAAA,CAAAmR,GAAA;MAAA,MAAAtE,MAAA,GAAA7M,2DAAA;MAAA,OAAWA,yDAAA,CAAA6M,MAAA,CAAAuE,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAO;IAC7DA,4DAAA,cAAgD;IAC9CA,uDAAA,gBAA+F;IACjGA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEoBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,0BAAmB;IACbA,oDAAA,gGAAuF;IAAAA,0DAAA,EAAK;IAGpGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAAwG;IAC1GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IACtDA,4DAAA,0BAAmB;IACbA,oDAAA,kCAAyB;IAAAA,0DAAA,EAAK;IAGtCA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAkG;IACpGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAA0Z,4EAAA;MAAA1Z,2DAAA,CAAAmR,GAAA;MAAA,MAAAzP,MAAA,GAAA1B,2DAAA;MAAA,OAAWA,yDAAA,CAAA0B,MAAA,CAAA0X,IAAA,CAAK,UAAU,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC/FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAA2Z,4EAAA;MAAA3Z,2DAAA,CAAAmR,GAAA;MAAA,MAAApE,OAAA,GAAA/M,2DAAA;MAAA,OAAWA,yDAAA,CAAA+M,OAAA,CAAAqE,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAO;IAC7DA,4DAAA,cAAgD;IAC9CA,uDAAA,gBAA+F;IACjGA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEoBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,0BAAmB;IACbA,oDAAA,gGAAuF;IAAAA,0DAAA,EAAK;IAGpGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAAwG;IAC1GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IACvDA,4DAAA,0BAAmB;IACbA,oDAAA,mCAA0B;IAAAA,0DAAA,EAAK;IAGvCA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAkG;IACpGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IACtDA,4DAAA,0BAAmB;IACbA,oDAAA,kCAAyB;IAAAA,0DAAA,EAAK;IAGtCA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAkG;IACpGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEqBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IAC1DA,4DAAA,0BAAmB;IACbA,oDAAA,4EAAmE;IAAAA,0DAAA,EAAK;IAC5EA,4DAAA,WAAI;IAAAA,oDAAA,kFAAyE;IAAAA,0DAAA,EAAK;IAGtFA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAsG;IACxGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAA4Z,4EAAA;MAAA5Z,2DAAA,CAAAmR,GAAA;MAAA,MAAApP,OAAA,GAAA/B,2DAAA;MAAA,OAAWA,yDAAA,CAAA+B,OAAA,CAAAqX,IAAA,CAAK,UAAU,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC/FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAA6Z,4EAAA;MAAA7Z,2DAAA,CAAAmR,GAAA;MAAA,MAAA2I,OAAA,GAAA9Z,2DAAA;MAAA,OAAWA,yDAAA,CAAA8Z,OAAA,CAAA1I,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,cAAK;IAAAA,0DAAA,EAAO;IAC1DA,4DAAA,cAAiD;IAC/CA,uDAAA,gBAAsF;IACxFA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEiBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACrDA,4DAAA,0BAAmB;IACbA,oDAAA,6FAAoF;IAAAA,0DAAA,EAAK;IAGjGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEeA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACnDA,4DAAA,0BAAmB;IACbA,oDAAA,uCAA8B;IAAAA,0DAAA,EAAK;IAG3CA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAgG;IAClGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEeA,oDAAA,aAAI;IAAAA,0DAAA,EAAQ;IACjDA,4DAAA,0BAAmB;IACbA,oDAAA,2CAAkC;IAAAA,0DAAA,EAAK;IAG/CA,4DAAA,gBAAgD;IAC9CA,uDAAA,6BAA0H;IAC5HA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEmBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IACzDA,4DAAA,0BAAmB;IACbA,oDAAA,+CAAsC;IAAAA,0DAAA,EAAK;IAGnDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAoH;IACtHA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEmBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IACzDA,4DAAA,0BAAmB;IACbA,oDAAA,iDAAwC;IAAAA,0DAAA,EAAK;IAGrDA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAA6I;IAC/IA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAA+Z,4EAAA;MAAA/Z,2DAAA,CAAAmR,GAAA;MAAA,MAAA6I,OAAA,GAAAha,2DAAA;MAAA,OAAWA,yDAAA,CAAAga,OAAA,CAAAZ,IAAA,CAAK,OAAO,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC5FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAAia,4EAAA;MAAAja,2DAAA,CAAAmR,GAAA;MAAA,MAAA+I,OAAA,GAAAla,2DAAA;MAAA,OAAWA,yDAAA,CAAAka,OAAA,CAAA9I,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,cAAK;IAAAA,0DAAA,EAAO;IAC1DA,4DAAA,cAAoD;IAClDA,uDAAA,gBAAsF;IACxFA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEiBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACrDA,4DAAA,0BAAmB;IACbA,oDAAA,6FAAoF;IAAAA,0DAAA,EAAK;IAGjGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEcA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IACnDA,4DAAA,0BAAmB;IACbA,oDAAA,+BAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,WAAI;IAAAA,oDAAA,gDAAuC;IAAAA,4DAAA,cAAgE;IAAAA,oDAAA,8CAAqC;IAAAA,0DAAA,EAAI;IAGxJA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAA+F;IACjGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEmBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IACzDA,4DAAA,0BAAmB;IACbA,oDAAA,iDAAwC;IAAAA,0DAAA,EAAK;IAGrDA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAA6I;IAC/IA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAAma,4EAAA;MAAAna,2DAAA,CAAAmR,GAAA;MAAA,MAAAjC,OAAA,GAAAlP,2DAAA;MAAA,OAAWA,yDAAA,CAAAkP,OAAA,CAAAkK,IAAA,CAAK,OAAO,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC5FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAAoa,4EAAA;MAAApa,2DAAA,CAAAmR,GAAA;MAAA,MAAAkJ,OAAA,GAAAra,2DAAA;MAAA,OAAWA,yDAAA,CAAAqa,OAAA,CAAAjJ,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,mBAAU;IAAAA,0DAAA,EAAO;IAC/DA,4DAAA,cAAsD;IACpDA,uDAAA,gBAAqG;IACvGA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEsBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IAC1DA,4DAAA,0BAAmB;IACbA,oDAAA,kGAAyF;IAAAA,0DAAA,EAAK;IAGtGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAA0G;IAC5GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEmBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,0BAAmB;IACbA,oDAAA,oCAA2B;IAAAA,0DAAA,EAAK;IAGxCA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAoG;IACtGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAAsa,4EAAA;MAAAta,2DAAA,CAAAmR,GAAA;MAAA,MAAA9B,OAAA,GAAArP,2DAAA;MAAA,OAAWA,yDAAA,CAAAqP,OAAA,CAAA+J,IAAA,CAAK,YAAY,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IACjGA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAAua,4EAAA;MAAAva,2DAAA,CAAAmR,GAAA;MAAA,MAAAqJ,OAAA,GAAAxa,2DAAA;MAAA,OAAWA,yDAAA,CAAAwa,OAAA,CAAApJ,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,eAA0B;IAEwBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAO;IAC7DA,4DAAA,cAAgD;IAC9CA,uDAAA,gBAA+F;IACjGA,0DAAA,EAAI;IAIRA,4DAAA,eAA0B;IAEoBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,0BAAmB;IACbA,oDAAA,gGAAuF;IAAAA,0DAAA,EAAK;IAGpGA,4DAAA,gBAAgD;IAC9CA,uDAAA,+BAAwG;IAC1GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEoBA,oDAAA,4BAAmB;IAAAA,0DAAA,EAAQ;IACrEA,4DAAA,0BAAmB;IACbA,oDAAA,8CAAqC;IAAAA,0DAAA,EAAK;IAC9CA,4DAAA,WAAI;IAAAA,oDAAA,sDAA6C;IAAAA,0DAAA,EAAK;IACtDA,4DAAA,WAAI;IAAAA,oDAAA,aAAI;IAAAA,4DAAA,cAAyD;IAAAA,oDAAA,uCAA8B;IAAAA,0DAAA,EAAI;IAGvGA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEoBA,oDAAA,gBAAO;IAAAA,0DAAA,EAAQ;IACzDA,4DAAA,0BAAmB;IACbA,oDAAA,kHAAyG;IAAAA,0DAAA,EAAK;IAClHA,4DAAA,WAAI;IAAAA,oDAAA,mDAA0C;IAAAA,0DAAA,EAAK;IAGvDA,4DAAA,gBAAgD;IAC9CA,uDAAA,4BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEiCA,wDAAA,qBAAAya,4EAAA;MAAAza,2DAAA,CAAAmR,GAAA;MAAA,MAAA5B,OAAA,GAAAvP,2DAAA;MAAA,OAAWA,yDAAA,CAAAuP,OAAA,CAAA6J,IAAA,CAAK,UAAU,CAAC;IAAA,EAAC;IAACpZ,0DAAA,EAAW;IAC/FA,4DAAA,qBAA0C;IAAnBA,wDAAA,qBAAA0a,4EAAA;MAAA1a,2DAAA,CAAAmR,GAAA;MAAA,MAAAxB,OAAA,GAAA3P,2DAAA;MAAA,OAAWA,yDAAA,CAAA2P,OAAA,CAAAyB,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;IAIzDA,4DAAA,iBAA4B;IAEDA,wDAAA,qBAAA2a,4EAAA;MAAA3a,2DAAA,CAAAmR,GAAA;MAAA,MAAAyJ,OAAA,GAAA5a,2DAAA;MAAA,OAAWA,yDAAA,CAAA4a,OAAA,CAAAxJ,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;;;;IA/iBhCA,wDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IA4BFrR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IA0BzBvR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYjCvR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYhChR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYtChR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYpChR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAY5BhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYlBhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAanDhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAY/BhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAa9BhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IA4BnChR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYpCvR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYfhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IA6B7ChR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYpCvR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IA4B3BhR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYpCvR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYlChR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAa9BhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IA4BlChR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYnCvR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYhChR,uDAAA,GAAqB;IAArBA,wDAAA,sBAAqB,uBAAAM,MAAA,CAAA0Q,WAAA;IAYHhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAY9ChR,uDAAA,GAAgC;IAAhCA,wDAAA,YAAAM,MAAA,CAAAua,oBAAA,CAAgC,uBAAAva,MAAA,CAAA0Q,WAAA;IA4BlChR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAapCvR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYzBhR,uDAAA,GAAgC;IAAhCA,wDAAA,YAAAM,MAAA,CAAAua,oBAAA,CAAgC,uBAAAva,MAAA,CAAA0Q,WAAA;IA4B7BhR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAYpCvR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IA4B7BhR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAcjCvR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAalChR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;;;;;;IA0B3FhR,4DAAA,UAAiC;IAGpBA,oDAAA,kHAA2G;IAAAA,0DAAA,EAAQ;IAG9HA,4DAAA,aAA0B;IAEfA,oDAAA,mCAA4B;IAAAA,0DAAA,EAAQ;IAG/CA,4DAAA,aAA0B;IAGTA,oDAAA,cAAM;IAAAA,4DAAA,cAAoD;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAI;IAChFA,4DAAA,UAAI;IAAOA,oDAAA,aAAK;IAAAA,0DAAA,EAAQ;IACxBA,4DAAA,UAAI;IAAOA,oDAAA,mCAA2B;IAAAA,0DAAA,EAAQ;IAC9CA,4DAAA,UAAI;IAAOA,oDAAA,sCAA8B;IAAAA,0DAAA,EAAQ;IAIvDA,4DAAA,cAA0B;IAGUA,wDAAA,2BAAA8a,6EAAAxU,MAAA;MAAAtG,2DAAA,CAAA+a,IAAA;MAAA,MAAAlL,OAAA,GAAA7P,2DAAA;MAAA,OAAaA,yDAAA,CAAA6P,OAAA,CAAAmL,mBAAA,CAAAC,QAAA,GAAA3U,MAAA,CAAoC;IAAA,EAAP;IAAxEtG,0DAAA,EAA2F;IAC3FA,4DAAA,qBAA+F;IAA/BA,wDAAA,qBAAAkb,0EAAA;MAAAlb,2DAAA,CAAA+a,IAAA;MAAA,MAAAI,OAAA,GAAAnb,2DAAA;MAAA,OAAWA,yDAAA,CAAAmb,OAAA,CAAAC,gBAAA,EAAkB;IAAA,EAAC;IAACpb,0DAAA,EAAW;;;;IAXtFA,uDAAA,IAAgC;IAAhCA,wDAAA,SAAAuK,MAAA,CAAAyQ,mBAAA,CAAAK,GAAA,EAAArb,2DAAA,CAAgC;IAUtBA,uDAAA,IAA0C;IAA1CA,wDAAA,YAAAuK,MAAA,CAAAyQ,mBAAA,CAAAC,QAAA,CAA0C;;;AD3jB3E,IAAMM,6BAA6B;EAApC,MAAOA,6BAA6B;IAP1CrZ,YAAA;MAeE,KAAAsZ,yBAAyB,GAAG,KAAK;MAEjC,KAAAxK,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,qDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,qDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,qDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,qDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACyP,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAACuJ,uBAAuB,EAAE,CAAC1Y,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QACjGC,IAAI,EAAGwY,oBAAoB,IAAI;UAC7B,IAAI,CAACjJ,SAAS,CAACiJ,oBAAoB,CAAC;QACtC,CAAC;QACDhJ,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,0CAA0C;OAC7F,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACyJ,0BAA0B,CAAC,IAAI,CAACF,uBAAuB,EAAE,CAAC,CAAC1Y,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAClIC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,8BAA8B,CAAC;YACtE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,2CAA2C;SAC9F,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEA+H,IAAIA,CAACwC,YAAoB;MACvB,IAAI,CAAC1J,eAAe,CAAC2J,YAAY,CAACD,YAAY,CAAC,CAAC7Y,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAClGC,IAAI,EAAEA,CAAA,KAAM,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,QAAQ8I,YAAY,qBAAqB,CAAC;QAC7FlJ,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,QAAQiJ,YAAY,uBAAuB;OAC9F,CAAC;IACJ;IAEArC,eAAeA,CAAA;MACb,IAAI,CAACrH,eAAe,CAACqH,eAAe,EAAE,CAACxW,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QACzFC,IAAI,EAAG8X,mBAAmB,IAAI;UAC5B;UACA,IAAI,CAACA,mBAAmB,GAAGA,mBAAmB;UAC9C,IAAI,CAACQ,yBAAyB,GAAG,IAAI;QACvC,CAAC;QACD9I,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,8BAA8B;OACjF,CAAC;IACJ;IAEAyI,gBAAgBA,CAAA;MACd,IAAI,CAAClJ,eAAe,CAACkJ,gBAAgB,CAAC,IAAI,CAACJ,mBAAmB,CAAC,CAACjY,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAClHC,IAAI,EAAG4Y,oBAAoB,IAAI;UAC7B;UACAhL,wDAAS,CAACiL,mBAAmB,CAAC,IAAI,CAAC1K,YAAY,EAAE,YAAY,EAAEyK,oBAAoB,CAACE,UAAU,CAAC;UAC/FlL,wDAAS,CAACiL,mBAAmB,CAAC,IAAI,CAAC1K,YAAY,EAAE,eAAe,EAAEyK,oBAAoB,CAACG,aAAa,CAAC;UACrG,IAAI,CAAC7J,cAAc,CAACU,kBAAkB,CAAC,gEAAgE,CAAC;QAC1G,CAAC;QACDJ,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,+BAA+B;OAClF,CAAC;IACJ;IAEQL,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,wDAAS,CAACoC,4BAA4B,EAAE;MACjE;MACA,IAAI,CAAC2H,oBAAoB,GAAG,EAAE;MAC9B,IAAI,CAACA,oBAAoB,CAAC5V,IAAI,CAAC;QAAEkO,KAAK,EAAE,UAAU;QAAEhP,KAAK,EAAE,CAAC;MAAC,CAAE,CAAC;MAChE,IAAI,CAAC0W,oBAAoB,CAAC5V,IAAI,CAAC;QAAEkO,KAAK,EAAE,UAAU;QAAEhP,KAAK,EAAE,CAAC;MAAC,CAAE,CAAC;MAChE,IAAI,CAAC0W,oBAAoB,CAAC5V,IAAI,CAAC;QAAEkO,KAAK,EAAE,QAAQ;QAAEhP,KAAK,EAAE;MAAC,CAAE,CAAC;MAC7D,IAAI,CAAC0W,oBAAoB,CAAC5V,IAAI,CAAC;QAAEkO,KAAK,EAAE,MAAM;QAAEhP,KAAK,EAAE;MAAC,CAAE,CAAC;MAC3D,IAAI,CAAC0W,oBAAoB,CAAC5V,IAAI,CAAC;QAAEkO,KAAK,EAAE,WAAW;QAAEhP,KAAK,EAAE;MAAC,CAAE,CAAC;IAClE;IAEQsO,SAASA,CAACiJ,oBAA0C;MAC1D,IAAI,CAACrK,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChC4I,MAAM,EAAE,CAACR,oBAAoB,CAACQ,MAAM,EAAE,CAAC5L,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC5D2I,UAAU,EAAE,CAACT,oBAAoB,CAACS,UAAU,EAAE,EAAE,CAAC;QACjDC,UAAU,EAAE,CAACV,oBAAoB,CAACU,UAAU,EAAE,EAAE,CAAC;QACjDC,YAAY,EAAE,CAACX,oBAAoB,CAACW,YAAY,EAAE,EAAE,CAAC;QACrDC,QAAQ,EAAE,CAACZ,oBAAoB,CAACY,QAAQ,EAAE,EAAE,CAAC;QAC7CC,MAAM,EAAE,CAACb,oBAAoB,CAACa,MAAM,EAAE,EAAE,CAAC;QACzCC,YAAY,EAAE,CAACd,oBAAoB,CAACc,YAAY,EAAE,EAAE,CAAC;QACrDC,YAAY,EAAE,CAACf,oBAAoB,CAACe,YAAY,EAAE,EAAE,CAAC;QACrDC,WAAW,EAAE,CAAChB,oBAAoB,CAACgB,WAAW,EAAE,EAAE,CAAC;QACnDC,cAAc,EAAE,CAACjB,oBAAoB,CAACiB,cAAc,EAAE,EAAE,CAAC;QACzDC,kBAAkB,EAAE,CAAClB,oBAAoB,CAACkB,kBAAkB,EAAE,EAAE,CAAC;QACjEC,aAAa,EAAE,CAACnB,oBAAoB,CAACmB,aAAa,EAAE,EAAE,CAAC;QACvDb,UAAU,EAAE,CAACN,oBAAoB,CAACM,UAAU,EAAE,EAAE,CAAC;QACjDC,aAAa,EAAE,CAACP,oBAAoB,CAACO,aAAa,EAAE,EAAE,CAAC;QACvDa,cAAc,EAAE,CAACpB,oBAAoB,CAACoB,cAAc,EAAE,EAAE,CAAC;QACzDC,WAAW,EAAE,CAACrB,oBAAoB,CAACqB,WAAW,EAAE,EAAE,CAAC;QACnDC,cAAc,EAAE,CAACtB,oBAAoB,CAACsB,cAAc,EAAE,EAAE,CAAC;QACzDC,WAAW,EAAE,CAACvB,oBAAoB,CAACuB,WAAW,EAAE,EAAE,CAAC;QACnDC,WAAW,EAAE,CAACxB,oBAAoB,CAACwB,WAAW,EAAE,EAAE,CAAC;QACnDC,eAAe,EAAE,CAACzB,oBAAoB,CAACyB,eAAe,EAAE,EAAE,CAAC;QAC3DC,WAAW,EAAE,CAAC1B,oBAAoB,CAAC0B,WAAW,EAAE,EAAE,CAAC;QACnDC,SAAS,EAAE,CAAC3B,oBAAoB,CAAC2B,SAAS,EAAE,EAAE,CAAC;QAC/CC,SAAS,EAAE,CAAC5B,oBAAoB,CAAC4B,SAAS,EAAE,EAAE,CAAC;QAC/CC,aAAa,EAAE,CAAC7B,oBAAoB,CAAC6B,aAAa,EAAE,EAAE,CAAC;QACvDC,aAAa,EAAE,CAAC9B,oBAAoB,CAAC8B,aAAa,IAAI,CAAC,EAAE,EAAE,CAAC;QAC5DC,WAAW,EAAE,CAAC/B,oBAAoB,CAAC+B,WAAW,EAAE,EAAE,CAAC;QACnDC,QAAQ,EAAE,CAAChC,oBAAoB,CAACgC,QAAQ,EAAE,EAAE,CAAC;QAC7CC,aAAa,EAAE,CAACjC,oBAAoB,CAACiC,aAAa,IAAI,CAAC,EAAE,EAAE,CAAC;QAC5DC,gBAAgB,EAAE,CAAClC,oBAAoB,CAACkC,gBAAgB,EAAE,EAAE,CAAC;QAC7DC,aAAa,EAAE,CAACnC,oBAAoB,CAACmC,aAAa,EAAE,EAAE,CAAC;QACvDC,cAAc,EAAE,CAACpC,oBAAoB,CAACoC,cAAc,EAAE,EAAE,CAAC;QACzDC,cAAc,EAAE,CAACrC,oBAAoB,CAACqC,cAAc,EAAE,EAAE,CAAC;QACzDC,cAAc,EAAE,CAACtC,oBAAoB,CAACsC,cAAc,EAAE,EAAE;OACzD,CAAC;IACJ;IAEQvC,uBAAuBA,CAAA;MAC7B,MAAMhG,QAAQ,GAAG,IAAIwD,kEAAoB,EAAE;MAC3CxD,QAAQ,CAACyG,MAAM,GAAGpL,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,QAAQ,CAAC;MACrFoE,QAAQ,CAAC0G,UAAU,GAAGrL,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,YAAY,CAAC;MAC7FoE,QAAQ,CAAC2G,UAAU,GAAGtL,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,YAAY,CAAC;MAC5FoE,QAAQ,CAAC4G,YAAY,GAAGvL,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,cAAc,CAAC;MAChGoE,QAAQ,CAAC6G,QAAQ,GAAGxL,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,UAAU,CAAC;MACxFoE,QAAQ,CAAC8G,MAAM,GAAGzL,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,QAAQ,CAAC;MACpFoE,QAAQ,CAAC+G,YAAY,GAAG1L,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,cAAc,CAAC;MAChGoE,QAAQ,CAACgH,YAAY,GAAG3L,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,cAAc,CAAC;MAChGoE,QAAQ,CAACiH,WAAW,GAAG5L,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC9FoE,QAAQ,CAACkH,cAAc,GAAG7L,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACpGoE,QAAQ,CAACmH,kBAAkB,GAAG9L,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,oBAAoB,CAAC;MAC5GoE,QAAQ,CAACoH,aAAa,GAAG/L,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MACnGoE,QAAQ,CAACuG,UAAU,GAAGlL,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,YAAY,CAAC;MAC5FoE,QAAQ,CAACwG,aAAa,GAAGnL,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAACqH,cAAc,GAAGhM,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACrGoE,QAAQ,CAACsH,WAAW,GAAGjM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC9FoE,QAAQ,CAACuH,cAAc,GAAGlM,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACrGoE,QAAQ,CAACwH,WAAW,GAAGnM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC9FoE,QAAQ,CAACyH,WAAW,GAAGpM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC9FoE,QAAQ,CAAC0H,eAAe,GAAGrM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACtGoE,QAAQ,CAAC2H,WAAW,GAAGtM,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC/FoE,QAAQ,CAAC4H,SAAS,GAAGvM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,WAAW,CAAC;MAC1FoE,QAAQ,CAAC6H,SAAS,GAAGxM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,WAAW,CAAC;MAC1FoE,QAAQ,CAAC8H,aAAa,GAAGzM,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAAC+H,aAAa,GAAG1M,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAACgI,WAAW,GAAG3M,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC/FoE,QAAQ,CAACiI,QAAQ,GAAG5M,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,UAAU,CAAC;MACxFoE,QAAQ,CAACkI,aAAa,GAAG7M,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAACmI,gBAAgB,GAAG9M,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACzGoE,QAAQ,CAACoI,aAAa,GAAG/M,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAACqI,cAAc,GAAGhN,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACrGoE,QAAQ,CAACsI,cAAc,GAAGjN,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACpGoE,QAAQ,CAACuI,cAAc,GAAGlN,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACpG,OAAOoE,QAAQ;IACjB;;EA/JW8F,6BAA6B;qBAA7BA,6BAA6B;EAAA;EAA7BA,6BAA6B;UAA7BA,6BAA6B;IAAAvV,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwU,uCAAA9X,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC3B1CnG,4DAAA,aAA0B;QAEtBA,wDAAA,IAAAke,6CAAA,qBAkjBO;QACTle,0DAAA,EAAU;QAGZA,4DAAA,kBAKwC;QAL9BA,wDAAA,2BAAAme,yEAAA7X,MAAA;UAAA,OAAAF,GAAA,CAAAoV,yBAAA,GAAAlV,MAAA;QAAA,EAAuC;QAM/CtG,wDAAA,IAAAoe,4CAAA,kBA6BM;QACRpe,0DAAA,EAAW;;;QA1lBAA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;QAsjBnBrR,uDAAA,GAAuC;QAAvCA,wDAAA,YAAAoG,GAAA,CAAAoV,yBAAA,CAAuC;QAMzCxb,uDAAA,GAAyB;QAAzBA,wDAAA,SAAAoG,GAAA,CAAA4U,mBAAA,CAAyB;;;mBDriBrBvc,kDAAI,EAAEK,wDAAW,EAAA+H,6DAAA,EAAAA,iEAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAAA,oDAAA,EAAE9H,gEAAmB,EAAA8H,+DAAA,EAAAA,4DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAEhI,yDAAY,EAAAkI,mDAAA,EAAEjI,+DAAe,EAAAoI,yDAAA,EAAE0Q,2DAAa,EAAAxQ,uDAAA,EAAE+I,oGAAqB,EAAEvI,uGAAsB,EAAE6O,2FAAkB,EAAErG,iGAAoB;IAAA9I,MAAA;EAAA;EAAA,OAEvM2T,6BAA6B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3BH;AAC+B;AACN;AACoD;AAEtE;AACF;AACuB;AAC+B;AACG;AACW;AACvB;AAC1B;AACU;AACN;AACb;;;;;;;;ICblDvb,4DAAA,cAAmE;IAIfA,oDAAA,cAAO;IAAAA,0DAAA,EAAO;IAIhEA,4DAAA,aAA0B;IAEiBA,oDAAA,mBAAY;IAAAA,0DAAA,EAAQ;IAC3DA,4DAAA,wBAAmB;IACbA,oDAAA,sEAA8D;IAAAA,0DAAA,EAAK;IAG3EA,4DAAA,cAAgD;IAC9CA,uDAAA,8BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE2BA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACnEA,4DAAA,yBAAmB;IACbA,oDAAA,oGAA4F;IAAAA,0DAAA,EAAK;IACrGA,4DAAA,UAAI;IAAAA,oDAAA,oHAA4G;IAAAA,0DAAA,EAAK;IAGzHA,4DAAA,cAAgD;IAC9CA,uDAAA,8BAA+G;IACjHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE6BA,oDAAA,sBAAc;IAAAA,0DAAA,EAAQ;IACzEA,4DAAA,yBAAmB;IACbA,oDAAA,8FAAsF;IAAAA,0DAAA,EAAK;IAC/FA,4DAAA,UAAI;IAAAA,oDAAA,kGAA0F;IAAAA,0DAAA,EAAK;IAGvGA,4DAAA,cAAgD;IAC9CA,uDAAA,8BAAiH;IACnHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEwBA,oDAAA,YAAI;IAAAA,0DAAA,EAAO;IAI7DA,4DAAA,cAA0B;IAEwBA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAQ;IAC1EA,4DAAA,yBAAmB;IACbA,oDAAA,mEAA2D;IAAAA,0DAAA,EAAK;IAGxEA,4DAAA,cAAgD;IAC9CA,uDAAA,kCAAyH;IAC3HA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEyBA,oDAAA,gCAAwB;IAAAA,0DAAA,EAAQ;IAC/EA,4DAAA,yBAAmB;IACbA,oDAAA,8GAAsG;IAAAA,0DAAA,EAAK;IAGnHA,4DAAA,cAAgD;IAC9CA,uDAAA,0BAA0G;IAC5GA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEwBA,oDAAA,aAAK;IAAAA,0DAAA,EAAO;IAI9DA,4DAAA,cAA0B;IAEyBA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAQ;IAC3EA,4DAAA,yBAAmB;IACbA,oDAAA,oEAA4D;IAAAA,0DAAA,EAAK;IAGzEA,4DAAA,cAAgD;IAC9CA,uDAAA,kCAA0H;IAC5HA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE0BA,oDAAA,gCAAwB;IAAAA,0DAAA,EAAQ;IAChFA,4DAAA,yBAAmB;IACbA,oDAAA,+GAAuG;IAAAA,0DAAA,EAAK;IAGpHA,4DAAA,cAAgD;IAC9CA,uDAAA,0BAA2G;IAC7GA,0DAAA,EAAM;IAGRA,4DAAA,eAA4B;IAEDA,wDAAA,qBAAAse,6EAAA;MAAAte,2DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,2DAAA;MAAA,OAAWA,yDAAA,CAAAuK,MAAA,CAAA6G,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;;;;IA5GhCA,wDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAgBGrR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAanBvR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAa3BvR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;IAkB9BvR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYzChR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAkB1BhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYzChR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;;;ADhF5F,IAAMuN,+BAA+B;EAAtC,MAAOA,+BAA+B;IAP5Crc,YAAA;MAaE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,qDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,qDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,qDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,qDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACyP,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAACsM,sBAAsB,EAAE,CAACzb,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAChGC,IAAI,EAAGub,mBAAmB,IAAI;UAC5B,IAAI,CAAChM,SAAS,CAACgM,mBAAmB,CAAC;QACrC,CAAC;QACD/L,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,4CAA4C;OAC/F,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACwM,yBAAyB,CAAC,IAAI,CAACF,sBAAsB,EAAE,CAAC,CAACzb,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAChIC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,gCAAgC,CAAC;YACxE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,6CAA6C;SAChG,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQiB,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,wDAAS,CAACoC,4BAA4B,EAAE;IACnE;IAEQT,SAASA,CAACgM,mBAAwC;MACxD,IAAI,CAACpN,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChCqL,WAAW,EAAE,CAACF,mBAAmB,CAACE,WAAW,EAAE,CAACrO,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACrEoL,qBAAqB,EAAE,CAACH,mBAAmB,CAACG,qBAAqB,EAAE,CAACtO,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACzFqL,uBAAuB,EAAE,CAACJ,mBAAmB,CAACI,uBAAuB,EAAE,CAACvO,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC7FsL,kBAAkB,EAAE,CAACL,mBAAmB,CAACK,kBAAkB,EAAE,EAAE,CAAC;QAChEC,mBAAmB,EAAE,CAACN,mBAAmB,CAACM,mBAAmB,EAAE,EAAE,CAAC;QAClEC,mBAAmB,EAAE,CAACP,mBAAmB,CAACO,mBAAmB,EAAE,EAAE,CAAC;QAClEC,oBAAoB,EAAE,CAACR,mBAAmB,CAACQ,oBAAoB,EAAE,EAAE;OACpE,CAAC;IACJ;IAEQT,sBAAsBA,CAAA;MAC5B,MAAM/I,QAAQ,GAAG,IAAI4I,iEAAmB,EAAE;MAC1C5I,QAAQ,CAACkJ,WAAW,GAAG7N,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC/FoE,QAAQ,CAACmJ,qBAAqB,GAAG9N,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MACnHoE,QAAQ,CAACoJ,uBAAuB,GAAG/N,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,yBAAyB,CAAC;MACvHoE,QAAQ,CAACqJ,kBAAkB,GAAGhO,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,oBAAoB,CAAC;MAC5GoE,QAAQ,CAACsJ,mBAAmB,GAAGjO,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,qBAAqB,CAAC;MAC9GoE,QAAQ,CAACuJ,mBAAmB,GAAGlO,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,qBAAqB,CAAC;MAC9GoE,QAAQ,CAACwJ,oBAAoB,GAAGnO,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,sBAAsB,CAAC;MAChH,OAAOoE,QAAQ;IACjB;;EAlEW8I,+BAA+B;qBAA/BA,+BAA+B;EAAA;EAA/BA,+BAA+B;UAA/BA,+BAA+B;IAAAvY,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAyV,yCAAA/Y,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCxB5CnG,4DAAA,aAA0B;QAEtBA,wDAAA,IAAAmf,+CAAA,mBA+GO;QACTnf,0DAAA,EAAU;;;QAhHDA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDoBjB5S,kDAAI,EAAEK,wDAAW,EAAA+H,6DAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAE9H,gEAAmB,EAAA8H,+DAAA,EAAAA,4DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAEsJ,oGAAqB,EAAEvI,uGAAsB,EAAE2C,kHAAyB,EAAEkM,2FAAkB;IAAAnP,MAAA;EAAA;EAAA,OAE9J2W,+BAA+B;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEvBoC;AACA;AACA;AACY;AACG;AACM;AACT;AACH;AACH;AAEtF,MAAMgB,MAAM,GAAW,CACrB;EACEld,IAAI,EAAE,EAAE;EACRmd,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE;CACZ,EACD;EACEpd,IAAI,EAAE,SAAS;EACfqd,SAAS,EAAE1N,yFAAwBA;CACpC,EACD;EACE3P,IAAI,EAAE,SAAS;EACfqd,SAAS,EAAEtJ,yFAAwBA;CACpC,EACD;EACE/T,IAAI,EAAE,SAAS;EACfqd,SAAS,EAAEvI,yFAAwBA;CACpC,EACD;EACE9U,IAAI,EAAE,WAAW;EACjBqd,SAAS,EAAEJ,+FAA0BA;CACtC,EACD;EACEjd,IAAI,EAAE,YAAY;EAClBqd,SAAS,EAAEL,kGAA2BA;CACvC,EACD;EACEhd,IAAI,EAAE,aAAa;EACnBqd,SAAS,EAAErH,qGAA4BA;CACxC,EACD;EACEhW,IAAI,EAAE,aAAa;EACnBqd,SAAS,EAAEN,qGAA4BA;CACxC,EACD;EACE/c,IAAI,EAAE,cAAc;EACpBqd,SAAS,EAAEnE,wGAA6BA;CACzC,EACD;EACElZ,IAAI,EAAE,gBAAgB;EACtBqd,SAAS,EAAEnB,8GAA+BA;CAC3C,EACD;EACElc,IAAI,EAAE,IAAI;EACVmd,UAAU,EAAE;CACb,CACF;AAED;AACA,iEAAeD,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DkB;AAC+B;AACN;AACwC;AAC1D;AACF;AACuB;AAC+B;AACQ;AAC3C;AACU;AACN;AACb;;;;;;;;ICVlDvf,4DAAA,cAAmE;IAIfA,oDAAA,WAAI;IAAAA,0DAAA,EAAO;IAI7DA,4DAAA,aAA0B;IAEqBA,oDAAA,wBAAiB;IAAAA,0DAAA,EAAQ;IACpEA,4DAAA,wBAAmB;IACbA,oDAAA,mCAA2B;IAAAA,0DAAA,EAAK;IACpCA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,wEAAgE;IAAAA,0DAAA,EAAK;IACzEA,4DAAA,UAAI;IAAAA,oDAAA,kGAA0F;IAAAA,0DAAA,EAAK;IACnGA,4DAAA,UAAI;IAAAA,oDAAA,4FAAoF;IAAAA,0DAAA,EAAK;IAC7FA,4DAAA,UAAI;IAAAA,oDAAA,4EAAoE;IAAAA,0DAAA,EAAK;IAGjFA,4DAAA,cAAgD;IAC9CA,uDAAA,gCAAkH;IACpHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEwBA,oDAAA,aAAK;IAAAA,0DAAA,EAAO;IAI9DA,4DAAA,cAA0B;IAEsBA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAQ;IACtEA,4DAAA,yBAAmB;IACbA,oDAAA,oCAA4B;IAAAA,0DAAA,EAAK;IACrCA,4DAAA,UAAI;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAK;IAClBA,4DAAA,UAAI;IAAAA,oDAAA,+BAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,UAAI;IAAAA,oDAAA,iCAAyB;IAAAA,0DAAA,EAAK;IAGtCA,4DAAA,cAAgD;IAC9CA,uDAAA,gCAAmH;IACrHA,0DAAA,EAAM;IAGRA,4DAAA,eAA4B;IAEDA,wDAAA,qBAAA4f,0EAAA;MAAA5f,2DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,2DAAA;MAAA,OAAWA,yDAAA,CAAAuK,MAAA,CAAA6G,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;;;;IAhDhCA,wDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAqBSrR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAqBjChR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;;;ADvB9F,IAAMoO,4BAA4B;EAAnC,MAAOA,4BAA4B;IAPzCld,YAAA;MAWE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,qDAAM,CAACyR,8DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,qDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,qDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,qDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACqP,eAAe,CAAC2N,sBAAsB,EAAE,CAAC9c,IAAI,CAAClE,8EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAChGC,IAAI,EAAG4c,mBAAmB,IAAI;UAC5B,IAAI,CAACrN,SAAS,CAACqN,mBAAmB,CAAC;QACrC,CAAC;QACDpN,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,yCAAyC;OAC5F,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAAC6N,yBAAyB,CAAC,IAAI,CAACF,sBAAsB,EAAE,CAAC,CAAC9c,IAAI,CAAClE,8EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAChIC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,6BAA6B,CAAC;YACrE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,0CAA0C;SAC7F,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQoB,SAASA,CAACqN,mBAAwC;MACxD,IAAI,CAACzO,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChC0M,eAAe,EAAE,CAACF,mBAAmB,CAACE,eAAe,IAAI,EAAE,EAAE,EAAE,CAAC;QAChEC,gBAAgB,EAAE,CAACH,mBAAmB,CAACG,gBAAgB,IAAI,EAAE,EAAE,EAAE;OAClE,CAAC;IACJ;IAEQJ,sBAAsBA,CAAA;MAC5B,MAAMpK,QAAQ,GAAG,IAAIkK,iEAAmB,EAAE;MAC1ClK,QAAQ,CAACuK,eAAe,GAAGlP,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACxGoE,QAAQ,CAACwK,gBAAgB,GAAGnP,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MAC1G,OAAOoE,QAAQ;IACjB;;EAhDW2J,4BAA4B;qBAA5BA,4BAA4B;EAAA;EAA5BA,4BAA4B;UAA5BA,4BAA4B;IAAApZ,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAyW,sCAAA/Z,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCrBzCnG,4DAAA,aAA0B;QAEtBA,wDAAA,IAAAmgB,4CAAA,mBAmDO;QACTngB,0DAAA,EAAU;;;QApDDA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDiBjB5S,kDAAI,EAAEK,uDAAW,EAAA+H,4DAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAE9H,+DAAmB,EAAA8H,8DAAA,EAAAA,2DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAEsJ,oGAAqB,EAAEX,4GAAuB;IAAAlI,MAAA;EAAA;EAAA,OAEhHwX,4BAA4B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBF;AAC+B;AACN;AACoD;AAEtE;AACE;AACA;AACJ;AACoC;AACkB;AACG;AACN;AACN;AAC3B;AACW;AACN;AACb;;;;;;;;;;ICflDpf,4DAAA,cAAmE;IAI7DA,uDAAA,mBAA8G;IAChHA,0DAAA,EAAM;IAGRA,4DAAA,aAA0B;IAEwBA,oDAAA,cAAO;IAAAA,0DAAA,EAAO;IAIhEA,4DAAA,aAA0B;IAEDA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAQ;IAC/CA,4DAAA,yBAAmB;IACbA,oDAAA,uEAA+D;IAAAA,0DAAA,EAAK;IAG5EA,4DAAA,eAAkE;IAChEA,uDAAA,4BAAsF;IAIxFA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEDA,oDAAA,2BAAmB;IAAAA,0DAAA,EAAQ;IAChDA,4DAAA,yBAAmB;IACbA,oDAAA,wEAAgE;IAAAA,0DAAA,EAAK;IAG7EA,4DAAA,eAAkE;IAChEA,uDAAA,4BAAuF;IAIzFA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEDA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACtCA,4DAAA,yBAAmB;IACbA,oDAAA,2FAAmF;IAAAA,0DAAA,EAAK;IAC5FA,4DAAA,UAAI;IAAAA,oDAAA,0DAAkD;IAAAA,0DAAA,EAAK;IAG/DA,4DAAA,eAA+D;IAC7DA,uDAAA,qBAA+G;IACjHA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE0BA,oDAAA,mCAA2B;IAAAA,0DAAA,EAAQ;IACnFA,4DAAA,yBAAmB;IACbA,oDAAA,oEAA4D;IAAAA,0DAAA,EAAK;IACrEA,4DAAA,UAAI;IAAAA,oDAAA,qEAA6D;IAAAA,0DAAA,EAAK;IAG1EA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAAiJ;IACnJA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEiBA,oDAAA,oBAAY;IAAAA,0DAAA,EAAQ;IAC3DA,4DAAA,yBAAmB;IACbA,oDAAA,qHAA6G;IAAAA,0DAAA,EAAK;IACtHA,4DAAA,UAAI;IAAAA,oDAAA,iGAAyF;IAAAA,0DAAA,EAAK;IAGtGA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAAwI;IAC1IA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEuBA,oDAAA,6BAAqB;IAAAA,0DAAA,EAAQ;IAC1EA,4DAAA,yBAAmB;IACbA,oDAAA,kGAA0F;IAAAA,0DAAA,EAAK;IACnGA,4DAAA,UAAI;IAAAA,oDAAA,4FAAoF;IAAAA,0DAAA,EAAK;IAC7FA,4DAAA,UAAI;IAAAA,oDAAA,+EAAuE;IAAAA,0DAAA,EAAK;IAGpFA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAA8I;IAChJA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAE2BA,oDAAA,oCAA4B;IAAAA,0DAAA,EAAQ;IACrFA,4DAAA,yBAAmB;IACbA,oDAAA,8FAAsF;IAAAA,0DAAA,EAAK;IAGnGA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAAkJ;IACpJA,0DAAA,EAAM;IAGRA,4DAAA,cAA0B;IAEwBA,oDAAA,oBAAY;IAAAA,0DAAA,EAAO;IAIrEA,4DAAA,cAA0B;IAEsBA,oDAAA,4BAAoB;IAAAA,0DAAA,EAAQ;IACxEA,4DAAA,yBAAmB;IACbA,oDAAA,iCAAyB;IAAAA,0DAAA,EAAK;IAGtCA,4DAAA,eAAgD;IAC9CA,uDAAA,8BAAgJ;IAClJA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAE0BA,oDAAA,gCAAuB;IAAAA,0DAAA,EAAQ;IAC/EA,4DAAA,0BAAmB;IACbA,oDAAA,qCAA4B;IAAAA,0DAAA,EAAK;IACrCA,4DAAA,WAAI;IAAAA,oDAAA,sCAA6B;IAAAA,0DAAA,EAAK;IACtCA,4DAAA,WAAI;IAAAA,oDAAA,8CAAqC;IAAAA,0DAAA,EAAK;IAGlDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAA2G;IAC7GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEwBA,oDAAA,0BAAiB;IAAAA,0DAAA,EAAO;IAI1EA,4DAAA,eAA0B;IAEsBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IAC5DA,4DAAA,0BAAmB;IACbA,oDAAA,gDAAuC;IAAAA,0DAAA,EAAK;IAGpDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAuG;IACzGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEsBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IAC5DA,4DAAA,0BAAmB;IACbA,oDAAA,gDAAuC;IAAAA,0DAAA,EAAK;IAGpDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAuH;IACzHA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEoBA,oDAAA,eAAM;IAAAA,0DAAA,EAAQ;IACxDA,4DAAA,0BAAmB;IACbA,oDAAA,+CAAsC;IAAAA,0DAAA,EAAK;IAC/CA,4DAAA,WAAI;IAACA,oDAAA,iHAAuG;IAAAA,0DAAA,EAAK;IAGrHA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAqG;IACvGA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEwBA,oDAAA,+BAAsB;IAAAA,0DAAA,EAAO;IAI/EA,4DAAA,eAA0B;IAE2BA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IACjEA,4DAAA,0BAAmB;IACbA,oDAAA,qDAA4C;IAAAA,0DAAA,EAAK;IAGzDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAA4G;IAC9GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAE2BA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IACjEA,4DAAA,0BAAmB;IACbA,oDAAA,qDAA4C;IAAAA,0DAAA,EAAK;IAGzDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAA4H;IAC9HA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEwBA,oDAAA,6BAAoB;IAAAA,0DAAA,EAAO;IAI7EA,4DAAA,eAA0B;IAEwBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IAC9DA,4DAAA,0BAAmB;IACbA,oDAAA,mDAA0C;IAAAA,0DAAA,EAAK;IAGvDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAyG;IAC3GA,0DAAA,EAAM;IAGRA,4DAAA,eAA0B;IAEwBA,oDAAA,iBAAQ;IAAAA,0DAAA,EAAQ;IAC9DA,4DAAA,0BAAmB;IACbA,oDAAA,mDAA0C;IAAAA,0DAAA,EAAK;IAGvDA,4DAAA,gBAAgD;IAC9CA,uDAAA,2BAAyH;IAC3HA,0DAAA,EAAM;IAGRA,4DAAA,gBAA4B;IAEDA,wDAAA,qBAAAugB,0EAAA;MAAAvgB,2DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,2DAAA;MAAA,OAAWA,yDAAA,CAAAuK,MAAA,CAAA6G,IAAA,EAAM;IAAA,EAAC;IAACpR,0DAAA,EAAW;;;;IAtPhCA,wDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAqDErR,uDAAA,IAA+B;IAA/BA,wDAAA,YAAAM,MAAA,CAAAkgB,mBAAA,CAA+B;IAarBxgB,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B,uBAAAjR,MAAA,CAAA0Q,WAAA;IAatChR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B,uBAAAjR,MAAA,CAAA0Q,WAAA;IAcvBhR,uDAAA,IAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B,uBAAAjR,MAAA,CAAA0Q,WAAA;IAYzBhR,uDAAA,GAA6B;IAA7BA,wDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B,uBAAAjR,MAAA,CAAA0Q,WAAA;IAkBlChR,uDAAA,IAAgC;IAAhCA,wDAAA,YAAAM,MAAA,CAAAmgB,oBAAA,CAAgC,uBAAAngB,MAAA,CAAA0Q,WAAA;IAchChR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAkBtChR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYlBhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAapDhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAkB3BhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYlBhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAkBrDhR,uDAAA,IAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYlBhR,uDAAA,GAAkC;IAAlCA,wDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;;;ADxN1G,IAAMqO,2BAA2B;EAAlC,MAAOA,2BAA2B;IAPxCnd,YAAA;MAeE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,qDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,qDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,qDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,qDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,qDAAM,CAACF,qDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACyP,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAACwO,qBAAqB,EAAE,CAAC3d,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAC/FC,IAAI,EAAGyd,kBAAkB,IAAI;UAC3B,IAAI,CAAClO,SAAS,CAACkO,kBAAkB,CAAC;QACpC,CAAC;QACDjO,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,wCAAwC;OAC3F,CAAC;IACJ;IAEAvB,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAAC0O,wBAAwB,CAAC,IAAI,CAACF,qBAAqB,EAAE,CAAC,CAAC3d,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAC9HC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,4BAA4B,CAAC;YACpE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,yCAAyC;SAC5F,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQiB,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,wDAAS,CAACoC,4BAA4B,EAAE;MACjE;MACA,IAAI,CAACsN,mBAAmB,GAAG,EAAE;MAC7B9gB,8DAAW,CAAC8gB,mBAAmB,CAACxb,OAAO,CAAE6b,QAAQ,IAAK,IAAI,CAACL,mBAAmB,CAACvb,IAAI,CAAC;QAAEkO,KAAK,EAAE0N,QAAQ;QAAE1c,KAAK,EAAE0c;MAAQ,CAAE,CAAC,CAAC;MAC1H;MACA,IAAI,CAACJ,oBAAoB,GAAG,EAAE;MAC9B,IAAI,CAACA,oBAAoB,CAACxb,IAAI,CAAC;QAAEkO,KAAK,EAAE,UAAU;QAAEhP,KAAK,EAAE;MAAE,CAAE,CAAC;MAChEzE,8DAAW,CAAC+gB,oBAAoB,CAACzb,OAAO,CAAE6b,QAAQ,IAAK,IAAI,CAACJ,oBAAoB,CAACxb,IAAI,CAAC;QAAEkO,KAAK,EAAE0N,QAAQ,CAACC,MAAM;QAAE3c,KAAK,EAAE0c,QAAQ,CAACE;MAAK,CAAE,CAAC,CAAC;IAC3I;IAEQtO,SAASA,CAACkO,kBAAsC;MACtD,IAAI,CAACtP,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChC0N,eAAe,EAAE,CAACL,kBAAkB,CAACK,eAAe,EAAE,CAAC1Q,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC5EyN,gBAAgB,EAAE,CAACN,kBAAkB,CAACM,gBAAgB,EAAE,CAAC3Q,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC9E0N,cAAc,EAAE,CAACP,kBAAkB,CAACO,cAAc,EAAE,CAAC5Q,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC1E2N,qBAAqB,EAAE,CAACR,kBAAkB,CAACQ,qBAAqB,EAAE,CAAC7Q,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACxF4N,gBAAgB,EAAE,CAACT,kBAAkB,CAACS,gBAAgB,EAAE,CAAC9Q,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC9E6N,iBAAiB,EAAE,CAACV,kBAAkB,CAACU,iBAAiB,EAAE,CAAC/Q,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAChF8N,eAAe,EAAE,CAACX,kBAAkB,CAACW,eAAe,EAAE,CAAChR,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC5E+N,sBAAsB,EAAE,CAACZ,kBAAkB,CAACY,sBAAsB,EAAE,CAACjR,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAC1FgN,mBAAmB,EAAE,CAACG,kBAAkB,CAACH,mBAAmB,IAAI,EAAE,EAAE,EAAE,CAAC;QACvEgB,oBAAoB,EAAE,CAACb,kBAAkB,CAACa,oBAAoB,EAAE,CAAClR,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACtFiO,WAAW,EAAE,CAACd,kBAAkB,CAACc,WAAW,EAAE,CAACnR,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACpEkO,iBAAiB,EAAE,CAACf,kBAAkB,CAACe,iBAAiB,EAAE,CAACpR,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QAChFmO,qBAAqB,EAAE,CAAChB,kBAAkB,CAACgB,qBAAqB,EAAE,CAACrR,uDAAU,CAACkD,QAAQ,CAAC,CAAC;QACxFoO,gBAAgB,EAAE,CAACjB,kBAAkB,CAACiB,gBAAgB,EAAE,EAAE,CAAC;QAC3DC,oBAAoB,EAAE,CAAClB,kBAAkB,CAACkB,oBAAoB,EAAE,EAAE,CAAC;QACnEC,gBAAgB,EAAE,CAACnB,kBAAkB,CAACmB,gBAAgB,EAAE,EAAE,CAAC;QAC3DC,gBAAgB,EAAE,CAACpB,kBAAkB,CAACoB,gBAAgB,EAAE,EAAE,CAAC;QAC3DC,cAAc,EAAE,CAACrB,kBAAkB,CAACqB,cAAc,EAAE,EAAE,CAAC;QACvDC,qBAAqB,EAAE,CAACtB,kBAAkB,CAACsB,qBAAqB,EAAE,EAAE,CAAC;QACrEC,qBAAqB,EAAE,CAACvB,kBAAkB,CAACuB,qBAAqB,EAAE,EAAE,CAAC;QACrEC,kBAAkB,EAAE,CAACxB,kBAAkB,CAACwB,kBAAkB,EAAE,EAAE,CAAC;QAC/DC,kBAAkB,EAAE,CAACzB,kBAAkB,CAACyB,kBAAkB,EAAE,EAAE;OAC/D,CAAC;IACJ;IAEQ1B,qBAAqBA,CAAA;MAC3B,MAAMjL,QAAQ,GAAG,IAAI6K,gEAAkB,EAAE;MACzC7K,QAAQ,CAACuL,eAAe,GAAGlQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACvGoE,QAAQ,CAACwL,gBAAgB,GAAGnQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACzGoE,QAAQ,CAACyL,cAAc,GAAGpQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACrGoE,QAAQ,CAAC0L,qBAAqB,GAAGrQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MACnHoE,QAAQ,CAAC2L,gBAAgB,GAAGtQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACzGoE,QAAQ,CAAC4L,iBAAiB,GAAGvQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,mBAAmB,CAAC;MAC3GoE,QAAQ,CAAC6L,eAAe,GAAGxQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,iBAAiB,CAAC;MACvGoE,QAAQ,CAAC8L,sBAAsB,GAAGzQ,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,wBAAwB,CAAC;MACrHoE,QAAQ,CAAC+K,mBAAmB,GAAG1P,wDAAS,CAACmC,mBAAmB,CAAW,IAAI,CAAC5B,YAAY,EAAE,qBAAqB,CAAC;MAChHoE,QAAQ,CAAC+L,oBAAoB,GAAG1Q,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,sBAAsB,CAAC;MACjHoE,QAAQ,CAACgM,WAAW,GAAG3Q,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC/FoE,QAAQ,CAACiM,iBAAiB,GAAG5Q,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,mBAAmB,CAAC;MAC3GoE,QAAQ,CAACkM,qBAAqB,GAAG7Q,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MACnHoE,QAAQ,CAACmM,gBAAgB,GAAG9Q,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAACoM,oBAAoB,GAAG/Q,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,sBAAsB,CAAC;MAChHoE,QAAQ,CAACqM,gBAAgB,GAAGhR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAACsM,gBAAgB,GAAGjR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,kBAAkB,CAAC;MACxGoE,QAAQ,CAACuM,cAAc,GAAGlR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,gBAAgB,CAAC;MACpGoE,QAAQ,CAACwM,qBAAqB,GAAGnR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MAClHoE,QAAQ,CAACyM,qBAAqB,GAAGpR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,uBAAuB,CAAC;MAClHoE,QAAQ,CAAC0M,kBAAkB,GAAGrR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,oBAAoB,CAAC;MAC5GoE,QAAQ,CAAC2M,kBAAkB,GAAGtR,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,oBAAoB,CAAC;MAC5G,OAAOoE,QAAQ;IACjB;;EAzGW4J,2BAA2B;qBAA3BA,2BAA2B;EAAA;EAA3BA,2BAA2B;UAA3BA,2BAA2B;IAAArZ,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,iEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA4Y,qCAAAlc,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC1BxCnG,4DAAA,aAA0B;QAEtBA,wDAAA,IAAAsiB,2CAAA,qBAyPO;QACTtiB,0DAAA,EAAU;;;QA1PDA,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDsBjB5S,kDAAI,EAAEK,wDAAW,EAAA+H,6DAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAE9H,gEAAmB,EAAA8H,+DAAA,EAAAA,4DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAEiR,2DAAa,EAAA/Q,uDAAA,EAAEjI,yDAAY,EAAAmI,mDAAA,EAAE+Y,2DAAa,EAAA5Y,qDAAA,EAAEiJ,oGAAqB,EAAE4P,iGAAoB,EAAEnY,uGAAsB,EAAE6O,2FAAkB;IAAAnP,MAAA;EAAA;EAAA,OAEvLyX,2BAA2B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1BD;AAC+B;AACN;AACoD;AAEtE;AACE;AACJ;AACuB;AAC+B;AACG;AACN;AACN;AAC5B;AACY;AACN;AACb;AACU;;;;;;;;;ICf5Drf,6DAAA,cAAmE;IAI7DA,wDAAA,mBAAsM;IACxMA,2DAAA,EAAM;IAGRA,6DAAA,aAA0B;IAEiBA,qDAAA,iBAAU;IAAAA,2DAAA,EAAQ;IACzDA,6DAAA,wBAAmB;IACbA,qDAAA,iCAAyB;IAAAA,2DAAA,EAAK;IAClCA,6DAAA,UAAI;IAAAA,qDAAA,mEAA2D;IAAAA,2DAAA,EAAK;IAGxEA,6DAAA,cAAgD;IAC9CA,wDAAA,0BAA4I;IAC9IA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEmBA,qDAAA,YAAI;IAAAA,2DAAA,EAAQ;IACrDA,6DAAA,yBAAmB;IACbA,qDAAA,2BAAmB;IAAAA,2DAAA,EAAK;IAGhCA,6DAAA,cAAgD;IAC9CA,wDAAA,4BAA8H;IAChIA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEaA,qDAAA,eAAO;IAAAA,2DAAA,EAAQ;IAClDA,6DAAA,yBAAmB;IACbA,qDAAA,mDAA2C;IAAAA,2DAAA,EAAK;IACpDA,6DAAA,UAAI;IAAAA,qDAAA,6GAAqG;IAAAA,2DAAA,EAAK;IAGlHA,6DAAA,cAAgD;IAC+BA,yDAAA,wBAAAyiB,iFAAA;MAAAziB,4DAAA,CAAAsK,GAAA;MAAA,MAAAC,MAAA,GAAAvK,4DAAA;MAAA,OAAcA,0DAAA,CAAAuK,MAAA,CAAAmY,aAAA,EAAe;IAAA,EAAC;IAAC1iB,2DAAA,EAAiB;IAIjIA,6DAAA,cAA0B;IAEcA,qDAAA,gBAAQ;IAAAA,2DAAA,EAAQ;IACpDA,6DAAA,yBAAmB;IACbA,qDAAA,sDAA8C;IAAAA,2DAAA,EAAK;IACvDA,6DAAA,UAAI;IAAAA,qDAAA,kFAA0E;IAAAA,2DAAA,EAAK;IACnFA,6DAAA,UAAI;IAAAA,qDAAA,uDAA+C;IAAAA,2DAAA,EAAK;IAG5DA,6DAAA,cAAgD;IAC9CA,wDAAA,0BAA+F;IACjGA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEcA,qDAAA,gBAAQ;IAAAA,2DAAA,EAAQ;IACpDA,6DAAA,yBAAmB;IACbA,qDAAA,sDAA8C;IAAAA,2DAAA,EAAK;IACvDA,6DAAA,UAAI;IAAAA,qDAAA,kFAA0E;IAAAA,2DAAA,EAAK;IACnFA,6DAAA,UAAI;IAAAA,qDAAA,uDAA+C;IAAAA,2DAAA,EAAK;IAG5DA,6DAAA,cAAgD;IAC9CA,wDAAA,0BAA+G;IACjHA,2DAAA,EAAM;IAGRA,6DAAA,cAA0B;IAEmBA,qDAAA,sBAAc;IAAAA,2DAAA,EAAQ;IAC/DA,6DAAA,yBAAmB;IACbA,qDAAA,+EAAuE;IAAAA,2DAAA,EAAK;IAGpFA,6DAAA,cAAgD;IAC9CA,wDAAA,8BAAuG;IACzGA,2DAAA,EAAM;IAGRA,6DAAA,eAA4B;IAEDA,yDAAA,qBAAA2iB,wEAAA;MAAA3iB,4DAAA,CAAAsK,GAAA;MAAA,MAAAI,MAAA,GAAA1K,4DAAA;MAAA,OAAWA,0DAAA,CAAA0K,MAAA,CAAA0G,IAAA,EAAM;IAAA,EAAC;IAACpR,2DAAA,EAAW;;;;IAxFhCA,yDAAA,cAAAM,MAAA,CAAA+Q,YAAA,CAA0B;IAiBSrR,wDAAA,IAA+B;IAA/BA,yDAAA,gCAA+B,uBAAAM,MAAA,CAAA0Q,WAAA;IAYrChR,wDAAA,GAAqB;IAArBA,yDAAA,sBAAqB,uBAAAM,MAAA,CAAA0Q,WAAA;IAa7BhR,wDAAA,IAAkC;IAAlCA,yDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAcjChR,wDAAA,IAAkC;IAAlCA,yDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAclBhR,wDAAA,IAAkC;IAAlCA,yDAAA,uBAAAM,MAAA,CAAA0Q,WAAA,CAAkC;IAYzChR,wDAAA,GAA6B;IAA7BA,yDAAA,YAAAM,MAAA,CAAAiR,iBAAA,CAA6B;;;AD1DpF,IAAM+N,0BAA0B;EAAjC,MAAOA,0BAA0B;IAPvCpd,YAAA;MAaE,KAAA8O,WAAW,GAAG,KAAK;MAEX,KAAAiB,EAAE,GAAGrT,sDAAM,CAACyR,+DAAkB,CAAC;MAC/B,KAAA6B,eAAe,GAAGtT,sDAAM,CAACgS,2EAAe,CAAC;MACzC,KAAAuB,kBAAkB,GAAGvT,sDAAM,CAAC4R,qEAAkB,CAAC;MAC/C,KAAA4B,cAAc,GAAGxT,sDAAM,CAACiS,qEAAc,CAAC;MACvC,KAAAjO,UAAU,GAAGhE,sDAAM,CAACF,sDAAU,CAAC;;IAEvCmE,QAAQA,CAAA;MACN,IAAI,CAACyP,gBAAgB,EAAE;MACvB,IAAI,CAACJ,eAAe,CAAC0Q,oBAAoB,EAAE,CAAC7f,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;QAC9FC,IAAI,EAAG2f,iBAAiB,IAAI;UAC1B,IAAI,CAACpQ,SAAS,CAACoQ,iBAAiB,CAAC;QACnC,CAAC;QACDnQ,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,uCAAuC;OAC1F,CAAC;IACJ;IAEA+P,aAAaA,CAAA;MACX,IAAII,OAAO,GAAGhS,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,SAAS,CAAC;MACjF,IAAIyR,OAAO,EAAE;QACX,IAAI,CAACA,OAAO,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;UAC5BD,OAAO,GAAG,IAAIA,OAAO,EAAE;;QAEzB,IAAIA,OAAO,CAAChd,QAAQ,CAAC,GAAG,CAAC,EAAE;UACzBgd,OAAO,GAAGA,OAAO,CAACE,OAAO,CAAC,IAAIC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;;;MAGpDnS,wDAAS,CAACiL,mBAAmB,CAAC,IAAI,CAAC1K,YAAY,EAAE,SAAS,EAAEyR,OAAO,CAAC;IACtE;IAEA1R,IAAIA,CAAA;MACF,IAAI,CAACJ,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACK,YAAY,CAACuB,KAAK,EAAE;QAC3B,IAAI,CAACV,eAAe,CAACgR,uBAAuB,CAAC,IAAI,CAACN,oBAAoB,EAAE,CAAC,CAAC7f,IAAI,CAAClE,+EAAkB,CAAC,IAAI,CAAC+D,UAAU,CAAC,CAAC,CAACK,SAAS,CAAC;UAC5HC,IAAI,EAAEA,CAAA,KAAK;YACT,IAAI,CAACkP,cAAc,CAACU,kBAAkB,CAAC,2BAA2B,CAAC;YACnE,IAAI,CAACX,kBAAkB,CAACY,MAAM,EAAE,CAAC,CAAC;UACpC,CAAC;;UACDL,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACN,cAAc,CAACO,gBAAgB,CAAC,wCAAwC;SAC3F,CAAC;OACH,MAAM;QACL7B,wDAAS,CAACkC,yBAAyB,CAAC,IAAI,CAAC3B,YAAY,CAAC;;IAE1D;IAEQiB,gBAAgBA,CAAA;MACtB;MACA,IAAI,CAACf,iBAAiB,GAAGT,wDAAS,CAACoC,4BAA4B,EAAE;IACnE;IAEQT,SAASA,CAACoQ,iBAAoC;MACpD,IAAI,CAACxR,YAAY,GAAG,IAAI,CAACY,EAAE,CAACqB,KAAK,CAAC;QAChC6P,WAAW,EAAE,CAACN,iBAAiB,CAACM,WAAW,EAAE,CAAC7S,uDAAU,CAACkD,QAAQ,EAAEzC,kEAAc,CAAC0C,QAAQ,CAAC,CAAC;QAC5F2P,aAAa,EAAE,CAACP,iBAAiB,CAACO,aAAa,EAAE,CAAC9S,uDAAU,CAACkD,QAAQ,EAAEzC,kEAAc,CAAC0C,QAAQ,CAAC,CAAC;QAChGqP,OAAO,EAAE,CAACD,iBAAiB,CAACC,OAAO,EAAE,EAAE,CAAC;QACxCO,QAAQ,EAAE,CAACR,iBAAiB,CAACQ,QAAQ,EAAE,EAAE,CAAC;QAC1CC,QAAQ,EAAE,CAACT,iBAAiB,CAACS,QAAQ,EAAE,EAAE,CAAC;QAC1CC,aAAa,EAAE,CAACV,iBAAiB,CAACU,aAAa,EAAE,CAACjT,uDAAU,CAACkD,QAAQ,CAAC;OACvE,CAAC;IACJ;IAEQoP,oBAAoBA,CAAA;MAC1B,MAAMnN,QAAQ,GAAG,IAAI+M,+DAAiB,EAAE;MACxC/M,QAAQ,CAAC0N,WAAW,GAAGrS,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,aAAa,CAAC;MAC9FoE,QAAQ,CAAC2N,aAAa,GAAGtS,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MAClGoE,QAAQ,CAACqN,OAAO,GAAGhS,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,SAAS,CAAC;MACtFoE,QAAQ,CAAC4N,QAAQ,GAAGvS,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,UAAU,CAAC;MACxFoE,QAAQ,CAAC6N,QAAQ,GAAGxS,wDAAS,CAACmC,mBAAmB,CAAS,IAAI,CAAC5B,YAAY,EAAE,UAAU,CAAC;MACxFoE,QAAQ,CAAC8N,aAAa,GAAGzS,wDAAS,CAACmC,mBAAmB,CAAU,IAAI,CAAC5B,YAAY,EAAE,eAAe,CAAC;MACnG,OAAOoE,QAAQ;IACjB;;EA7EW6J,0BAA0B;qBAA1BA,0BAA0B;EAAA;EAA1BA,0BAA0B;UAA1BA,0BAA0B;IAAAtZ,SAAA;IAAA8C,UAAA;IAAAC,QAAA,GAAA/I,kEAAA;IAAAsJ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA+Z,oCAAArd,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC1BvCnG,6DAAA,aAA0B;QAEtBA,yDAAA,IAAAyjB,0CAAA,mBA2FO;QACTzjB,2DAAA,EAAU;;;QA5FDA,wDAAA,GAAkB;QAAlBA,yDAAA,SAAAoG,GAAA,CAAAiL,YAAA,CAAkB;;;mBDsBjB5S,kDAAI,EAAEK,wDAAW,EAAA+H,6DAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAE9H,gEAAmB,EAAA8H,+DAAA,EAAAA,4DAAA,EAAE0J,uDAAW,EAAAtJ,iDAAA,EAAE/H,yDAAY,EAAAiI,mDAAA,EAAE+Q,2DAAa,EAAA7Q,uDAAA,EAAEoJ,oGAAqB,EAAEsG,2FAAkB,EAAErG,iGAAoB,EAAExI,uGAAsB;IAAAN,MAAA;EAAA;EAAA,OAExK0X,0BAA0B;AAAA;;;;;;;;;;;;;;;;;AExBkB;AAEG;;AAKrD,IAAMzf,iBAAkB;EAAzB,MAAOA,iBAAkB,SAAQ6jB,qEAAkB;IAHzDxhB,YAAA;;MAKmB,KAAAyhB,GAAG,GAAG,GAAGjkB,8DAAW,CAACojB,OAAO,iBAAiB;;IAE9D9f,MAAMA,CAACX,IAAI,GAAG,EAAE,EAAEI,YAAY,GAAG,IAAI,EAAEC,cAAc,GAAG,IAAI;MAC1D,MAAM2Y,GAAG,GAAG,GAAG,IAAI,CAACsI,GAAG,SAASthB,IAAI,iBAAiBI,YAAY,mBAAmBC,cAAc,EAAE;MACpG,OAAO,IAAI,CAACkhB,UAAU,CAACC,GAAG,CAAoBxI,GAAG,EAAE,IAAI,CAACxS,OAAO,CAAC;IAClE;;EAPWhJ,iBAAkB;;;sJAAlBA,iBAAiB,IAAA8I,CAAA,IAAjB9I,iBAAiB;IAAA;EAAA;EAAjBA,iBAAkB;WAAlBA,iBAAiB;IAAAikB,OAAA,EAAjBjkB,iBAAiB,CAAAkkB,IAAA;IAAAC,UAAA,EAFhB;EAAM;EAAA,OAEPnkB,iBAAkB;AAAA;;;;;;;;;;;;;;;;;ACTqB;AACb;AACyB;AACzD,SAASN,YAAYA,CAAC6kB,OAAO,EAAEC,SAAS,GAAGJ,4DAAc,EAAE;EAC9D,OAAOC,mDAAO,CAAC,CAACpD,MAAM,EAAEwD,UAAU,KAAK;IACnC,IAAIC,UAAU,GAAG,IAAI;IACrB,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,QAAQ,GAAG,IAAI;IACnB,MAAMvgB,IAAI,GAAGA,CAAA,KAAM;MACf,IAAIqgB,UAAU,EAAE;QACZA,UAAU,CAACG,WAAW,CAAC,CAAC;QACxBH,UAAU,GAAG,IAAI;QACjB,MAAMpgB,KAAK,GAAGqgB,SAAS;QACvBA,SAAS,GAAG,IAAI;QAChBF,UAAU,CAACphB,IAAI,CAACiB,KAAK,CAAC;MAC1B;IACJ,CAAC;IACD,SAASwgB,YAAYA,CAAA,EAAG;MACpB,MAAMC,UAAU,GAAGH,QAAQ,GAAGL,OAAO;MACrC,MAAMS,GAAG,GAAGR,SAAS,CAACQ,GAAG,CAAC,CAAC;MAC3B,IAAIA,GAAG,GAAGD,UAAU,EAAE;QAClBL,UAAU,GAAG,IAAI,CAACO,QAAQ,CAACC,SAAS,EAAEH,UAAU,GAAGC,GAAG,CAAC;QACvDP,UAAU,CAACU,GAAG,CAACT,UAAU,CAAC;QAC1B;MACJ;MACArgB,IAAI,CAAC,CAAC;IACV;IACA4c,MAAM,CAAC7d,SAAS,CAACkhB,6EAAwB,CAACG,UAAU,EAAGngB,KAAK,IAAK;MAC7DqgB,SAAS,GAAGrgB,KAAK;MACjBsgB,QAAQ,GAAGJ,SAAS,CAACQ,GAAG,CAAC,CAAC;MAC1B,IAAI,CAACN,UAAU,EAAE;QACbA,UAAU,GAAGF,SAAS,CAACS,QAAQ,CAACH,YAAY,EAAEP,OAAO,CAAC;QACtDE,UAAU,CAACU,GAAG,CAACT,UAAU,CAAC;MAC9B;IACJ,CAAC,EAAE,MAAM;MACLrgB,IAAI,CAAC,CAAC;MACNogB,UAAU,CAACW,QAAQ,CAAC,CAAC;IACzB,CAAC,EAAEF,SAAS,EAAE,MAAM;MAChBP,SAAS,GAAGD,UAAU,GAAG,IAAI;IACjC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCoC;AAC+I;AAC7I;AACS;AACb;AACyD;AAClD;AACG;AACO;AACd;AACS;AACI;AACF;AAAA,MAAA6B,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,sCAAAngB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAmpB6CnG,gEAAE,EAKhB,CAAC;EAAA;AAAA;AAAA,SAAAwmB,uBAAArgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IALanG,4DAAE,YAGhB,CAAC;IAHaA,0DAAE,EAIrC,CAAC;IAJkCA,wDAAE,IAAAsmB,qCAAA,yBAKhB,CAAC;IALatmB,0DAAE,CAM9E,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA7F,MAAA,GAN2EN,2DAAE;IAAFA,uDAAE,EAKjC,CAAC;IAL8BA,wDAAE,qBAAAM,MAAA,CAAAomB,cAKjC,CAAC;EAAA;AAAA;AAAA,SAAAC,wDAAAxgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAL8BnG,uDAAE,mBAcK,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAdRnG,wDAAE,gCAczB,CAAC;EAAA;AAAA;AAAA,SAAA4mB,mEAAAzgB,EAAA,EAAAC,GAAA;AAAA,SAAAygB,qDAAA1gB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAdsBnG,wDAAE,IAAA4mB,kEAAA,qBAgBC,CAAC;EAAA;AAAA;AAAA,SAAAE,mDAAA3gB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhBJnG,4DAAE,cAeZ,CAAC;IAfSA,wDAAE,IAAA6mB,oDAAA,eAgBC,CAAC;IAhBJ7mB,0DAAE,CAiB7D,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAkJ,OAAA,GAjB0DrP,2DAAE;IAAFA,uDAAE,EAgBf,CAAC;IAhBYA,wDAAE,qBAAAqP,OAAA,CAAA0X,iBAgBf,CAAC;EAAA;AAAA;AAAA,SAAAC,4CAAA7gB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhBYnG,qEAAE,EAavC,CAAC;IAboCA,wDAAE,IAAA2mB,uDAAA,uBAcK,CAAC;IAdR3mB,wDAAE,IAAA8mB,kDAAA,kBAiB7D,CAAC;IAjB0D9mB,mEAAE,CAkBzD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA+I,OAAA,GAlBsDlP,2DAAE;IAAFA,uDAAE,EAcC,CAAC;IAdJA,wDAAE,UAAAkP,OAAA,CAAA6X,iBAcC,CAAC;IAdJ/mB,uDAAE,EAetC,CAAC;IAfmCA,wDAAE,SAAAkP,OAAA,CAAA6X,iBAetC,CAAC;EAAA;AAAA;AAAA,MAAAI,GAAA,YAAAA,CAAAC,EAAA;EAAA;IAAA,uBAAAA;EAAA;AAAA;AAAA,MAAAC,GAAA,YAAAA,CAAAD,EAAA,EAAAE,EAAA,EAAAC,EAAA;EAAA;IAAA,eAAAH,EAAA;IAAA,WAAAE,EAAA;IAAA,cAAAC;EAAA;AAAA;AAAA,SAAAC,6BAAArhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAuJ,IAAA,GAfmC1P,8DAAE;IAAFA,4DAAE,aAQuE,CAAC,aAAD,CAAC,eAAD,CAAC;IAR1EA,wDAAE,mBAAA0nB,oDAAA;MAAF1nB,2DAAE,CAAA0P,IAAA;MAAA,MAAAC,OAAA,GAAF3P,2DAAE;MAAA,OAAFA,yDAAE,CAUI2P,OAAA,CAAAgY,qBAAA,CAAsB,EAAC;IAAA,EAAC,kBAAAC,mDAAA;MAV9B5nB,2DAAE,CAAA0P,IAAA;MAAA,MAAAG,OAAA,GAAF7P,2DAAE;MAAA,OAAFA,yDAAE,CAUqC6P,OAAA,CAAAgY,oBAAA,CAAqB,EAAC;IAAA,CAAhC,CAAC,2BAAAC,4DAAAxhB,MAAA;MAV9BtG,2DAAE,CAAA0P,IAAA;MAAA,MAAAqY,OAAA,GAAF/nB,2DAAE;MAAA,OAAFA,yDAAE,CAU8E+nB,OAAA,CAAAC,SAAA,CAAA1hB,MAAgB,EAAC;IAAA,CAApE,CAAC;IAV9BtG,0DAAE,CAU6I,CAAC,CAAD,CAAC;IAVhJA,4DAAE,iBAYiH,CAAC;IAZpHA,wDAAE,mBAAAioB,kDAAA3hB,MAAA;MAAFtG,2DAAE,CAAA0P,IAAA;MAAA,MAAAyL,OAAA,GAAFnb,2DAAE;MAAA,OAAFA,yDAAE,CAY+Fmb,OAAA,CAAA6M,SAAA,CAAA1hB,MAAgB,EAAC;IAAA,EAAC;IAZnHtG,wDAAE,IAAAgnB,2CAAA,yBAkBzD,CAAC;IAlBsDhnB,0DAAE,CAmBtE,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA4G,OAAA,GAnBmE/M,2DAAE;IAAFA,wDAAE,YAAFA,6DAAE,IAAAmnB,GAAA,EAAApa,OAAA,CAAAob,QAAA,IAAApb,OAAA,CAAAqb,iBAAA,CAQsE,CAAC;IARzEpoB,uDAAE,EAUP,CAAC;IAVIA,wDAAE,YAAA+M,OAAA,CAAAsb,UAUP,CAAC,aAAAtb,OAAA,CAAAob,QAAA,IAAApb,OAAA,CAAAqb,iBAAD,CAAC;IAVIpoB,uDAAE,EAYoF,CAAC;IAZvFA,wDAAE,YAAFA,6DAAE,IAAAqnB,GAAA,EAAAta,OAAA,CAAAsb,UAAA,EAAAtb,OAAA,CAAAwb,mBAAA,EAAAxb,OAAA,CAAAob,QAAA,IAAApb,OAAA,CAAAqb,iBAAA,CAYoF,CAAC;IAZvFpoB,uDAAE,EAazC,CAAC;IAbsCA,wDAAE,SAAA+M,OAAA,CAAAsb,UAazC,CAAC;EAAA;AAAA;AAAA,SAAAG,qDAAAriB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAbsCnG,gEAAE,EAsByB,CAAC;EAAA;AAAA;AAAA,MAAAyoB,GAAA,YAAAA,CAAArB,EAAA;EAAA;IAAAve,OAAA,EAAAue;EAAA;AAAA;AAAA,SAAAsB,sCAAAviB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtB5BnG,qEAAE,EAqBhB,CAAC;IArBaA,wDAAE,IAAAwoB,oDAAA,0BAsByB,CAAC;IAtB5BxoB,mEAAE,CAuBjE,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAApE,OAAA,GAvB8D/B,2DAAE;IAAFA,uDAAE,EAsB3B,CAAC;IAtBwBA,wDAAE,qBAAA+B,OAAA,CAAA4mB,cAsB3B,CAAC,4BAtBwB3oB,6DAAE,IAAAyoB,GAAA,EAAA1mB,OAAA,CAAA6mB,aAAA,CAsB3B,CAAC;EAAA;AAAA;AAAA,SAAAC,wDAAA1iB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtBwBnG,uDAAE,oBAoCS,CAAC;EAAA;EAAA,IAAAmG,EAAA;IApCZnG,wDAAE,sCAoCM,CAAC;EAAA;AAAA;AAAA,SAAA8oB,kEAAA3iB,EAAA,EAAAC,GAAA;AAAA,SAAA2iB,oDAAA5iB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApCTnG,wDAAE,IAAA8oB,iEAAA,qBAsCF,CAAC;EAAA;AAAA;AAAA,SAAAE,kDAAA7iB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtCDnG,4DAAE,cAqCT,CAAC;IArCMA,wDAAE,IAAA+oB,mDAAA,eAsCF,CAAC;IAtCD/oB,0DAAE,CAuCjE,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA8iB,OAAA,GAvC8DjpB,2DAAE;IAAFA,uDAAE,EAsClB,CAAC;IAtCeA,wDAAE,qBAAAipB,OAAA,CAAAC,kBAsClB,CAAC;EAAA;AAAA;AAAA,SAAAC,2CAAAhjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAijB,IAAA,GAtCeppB,8DAAE;IAAFA,4DAAE,aAyBrB,CAAC,mBAAD,CAAC;IAzBkBA,wDAAE,mBAAAqpB,kEAAA/iB,MAAA;MAAFtG,2DAAE,CAAAopB,IAAA;MAAA,MAAAE,OAAA,GAAFtpB,2DAAE;MAAA,OAAFA,yDAAE,CA8B1DspB,OAAA,CAAAC,QAAA,CAAAjjB,MAAe,EAAC;IAAA,EAAC;IA9BuCtG,0DAAE,CAmCtE,CAAC;IAnCmEA,wDAAE,IAAA6oB,uDAAA,wBAoCS,CAAC;IApCZ7oB,wDAAE,IAAAgpB,iDAAA,kBAuCjE,CAAC;IAvC8DhpB,0DAAE,CAwCtE,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAqjB,OAAA,GAxCmExpB,2DAAE;IAAFA,uDAAE,EA6BzC,CAAC;IA7BsCA,wDAAE,UAAAwpB,OAAA,CAAAC,WAAA,MA6BzC,CAAC,aAAAD,OAAA,CAAArB,QAAD,CAAC;IA7BsCnoB,yDAAE,gBAAAwpB,OAAA,CAAAE,iBAiC9B,CAAC,eAAAF,OAAA,CAAAG,eAAD,CAAC;IAjC2B3pB,uDAAE,EAoClC,CAAC;IApC+BA,wDAAE,UAAAwpB,OAAA,CAAAN,kBAoClC,CAAC;IApC+BlpB,uDAAE,EAqCzC,CAAC;IArCsCA,wDAAE,SAAAwpB,OAAA,CAAAN,kBAqCzC,CAAC;EAAA;AAAA;AAAA,SAAAU,qCAAAzjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArCsCnG,wDAAE,IAAAmpB,0CAAA,iBAwCtE,CAAC;EAAA;EAAA,IAAAhjB,EAAA;IAAA,MAAA6T,OAAA,GAxCmEha,2DAAE;IAAFA,wDAAE,SAAAga,OAAA,CAAArV,MAyBvB,CAAC;EAAA;AAAA;AAAA,SAAAklB,uBAAA1jB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzBoBnG,4DAAE,YAOI,CAAC;IAPPA,wDAAE,IAAAwnB,4BAAA,iBAoB1E,CAAC;IApBuExnB,wDAAE,IAAA0oB,qCAAA,0BAuBjE,CAAC;IAvB8D1oB,wDAAE,IAAA4pB,oCAAA,iCAAF5pB,oEAyChE,CAAC;IAzC+DA,0DAAE,CA0C9E,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA4jB,IAAA,GA1C2E/pB,yDAAE;IAAA,MAAAuK,MAAA,GAAFvK,2DAAE;IAAFA,uDAAE,EAQA,CAAC;IARHA,wDAAE,SAAAuK,MAAA,CAAA0f,QAAA,IAAA1f,MAAA,CAAA2f,QAAA,IAAA3f,MAAA,CAAA4f,aAQA,CAAC;IARHnqB,uDAAE,EAqB3C,CAAC;IArBwCA,wDAAE,SAAAuK,MAAA,CAAAoe,cAqB3C,CAAC,aAAAoB,IAAD,CAAC;EAAA;AAAA;AAAA,SAAAK,qDAAAjkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArBwCnG,4DAAE,UAgDnC,CAAC;IAhDgCA,oDAAE,EAgDW,CAAC;IAhDdA,0DAAE,CAgDkB,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAkkB,YAAA,GAhDrBrqB,2DAAE,GAAAiM,SAAA;IAAA,MAAAqe,OAAA,GAAFtqB,2DAAE;IAAFA,uDAAE,EAgDW,CAAC;IAhDdA,+DAAE,CAAAsqB,OAAA,CAAAC,mBAAA,CAAAF,YAAA,YAgDW,CAAC;EAAA;AAAA;AAAA,SAAAG,6DAAArkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhDdnG,gEAAE,EAiDiC,CAAC;EAAA;AAAA;AAAA,SAAAyqB,6DAAAtkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjDpCnG,gEAAE,EAmDiD,CAAC;EAAA;AAAA;AAAA,MAAA0qB,GAAA,YAAAA,CAAAtD,EAAA;EAAA;IAAAnb,SAAA,EAAAmb;EAAA;AAAA;AAAA,SAAAuD,8CAAAxkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnDpDnG,4DAAE,YA+CnC,CAAC;IA/CgCA,wDAAE,IAAAoqB,oDAAA,iBAgDkB,CAAC;IAhDrBpqB,wDAAE,IAAAwqB,4DAAA,0BAiDiC,CAAC;IAjDpCxqB,0DAAE,CAkD/D,CAAC;IAlD4DA,wDAAE,IAAAyqB,4DAAA,0BAmDiD,CAAC;EAAA;EAAA,IAAAtkB,EAAA;IAAA,MAAAkkB,YAAA,GAAAjkB,GAAA,CAAA6F,SAAA;IAAA,MAAA2e,OAAA,GAnDpD5qB,2DAAE;IAAA,MAAA6qB,GAAA,GAAF7qB,yDAAE;IAAFA,uDAAE,EAgDrC,CAAC;IAhDkCA,wDAAE,UAAA4qB,OAAA,CAAAE,aAgDrC,CAAC;IAhDkC9qB,uDAAE,EAiDhB,CAAC;IAjDaA,wDAAE,qBAAA4qB,OAAA,CAAAE,aAiDhB,CAAC,4BAjDa9qB,6DAAE,IAAA0qB,GAAA,EAAAL,YAAA,CAiDhB,CAAC;IAjDarqB,uDAAE,EAmDxB,CAAC;IAnDqBA,wDAAE,qBAAA6qB,GAmDxB,CAAC,4BAnDqB7qB,6DAAE,IAAA0qB,GAAA,EAAAE,OAAA,CAAAG,sBAAA,CAAAV,YAAA,EAmDxB,CAAC;EAAA;AAAA;AAAA,SAAAW,gCAAA7kB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnDqBnG,qEAAE,EA6ChD,CAAC;IA7C6CA,wDAAE,IAAA2qB,6CAAA,yBAoD1D,CAAC;IApDuD3qB,mEAAE,CAqD7D,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAnF,MAAA,GArD0DhB,2DAAE;IAAFA,uDAAE,EA8Cb,CAAC;IA9CUA,wDAAE,YAAAgB,MAAA,CAAAiqB,eA8Cb,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAA/kB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9CUnG,gEAAE,EAuD4B,CAAC;EAAA;AAAA;AAAA,SAAAmrB,gCAAAhlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvD/BnG,qEAAE,EAsD/C,CAAC;IAtD4CA,wDAAE,IAAAkrB,8CAAA,0BAuD4B,CAAC;IAvD/BlrB,mEAAE,CAwD7D,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAuE,MAAA,GAxD0D1K,2DAAE;IAAA,MAAA6qB,GAAA,GAAF7qB,yDAAE;IAAFA,uDAAE,EAuD5B,CAAC;IAvDyBA,wDAAE,qBAAA6qB,GAuD5B,CAAC,4BAvDyB7qB,6DAAE,IAAA0qB,GAAA,EAAAhgB,MAAA,CAAAugB,eAAA,CAuD5B,CAAC;EAAA;AAAA;AAAA,SAAAG,qEAAAjlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvDyBnG,uDAAE,mBA0EiB,CAAC;EAAA;EAAA,IAAAmG,EAAA;IA1EpBnG,wDAAE,gCA0Eb,CAAC;EAAA;AAAA;AAAA,SAAAqrB,gFAAAllB,EAAA,EAAAC,GAAA;AAAA,SAAAklB,kEAAAnlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1EUnG,wDAAE,IAAAqrB,+EAAA,qBA4Ea,CAAC;EAAA;AAAA;AAAA,SAAAE,gEAAAplB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5EhBnG,4DAAE,cA2EA,CAAC;IA3EHA,wDAAE,IAAAsrB,iEAAA,eA4Ea,CAAC;IA5EhBtrB,0DAAE,CA6EjD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAqlB,OAAA,GA7E8CxrB,2DAAE;IAAFA,uDAAE,EA4EH,CAAC;IA5EAA,wDAAE,qBAAAwrB,OAAA,CAAAzE,iBA4EH,CAAC;EAAA;AAAA;AAAA,SAAA0E,yDAAAtlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5EAnG,qEAAE,EAyEnB,CAAC;IAzEgBA,wDAAE,IAAAorB,oEAAA,uBA0EiB,CAAC;IA1EpBprB,wDAAE,IAAAurB,+DAAA,kBA6EjD,CAAC;IA7E8CvrB,mEAAE,CA8E7C,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAulB,OAAA,GA9E0C1rB,2DAAE;IAAFA,uDAAE,EA0Ea,CAAC;IA1EhBA,wDAAE,UAAA0rB,OAAA,CAAA3E,iBA0Ea,CAAC;IA1EhB/mB,uDAAE,EA2E1B,CAAC;IA3EuBA,wDAAE,SAAA0rB,OAAA,CAAA3E,iBA2E1B,CAAC;EAAA;AAAA;AAAA,MAAA4E,GAAA,YAAAA,CAAAvE,EAAA;EAAA;IAAA,eAAAA;EAAA;AAAA;AAAA,SAAAwE,0CAAAzlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3EuBnG,4DAAE,aAuEyE,CAAC,aAAD,CAAC;IAvE5EA,wDAAE,IAAAyrB,wDAAA,yBA8E7C,CAAC;IA9E0CzrB,0DAAE,CA+E1D,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA0lB,UAAA,GA/EuD7rB,2DAAE,GAAAiM,SAAA;IAAA,MAAA6f,OAAA,GAAF9rB,2DAAE;IAAFA,wDAAE,YAAFA,6DAAE,IAAAmnB,GAAA,EAAA2E,OAAA,CAAA3D,QAAA,IAAA2D,OAAA,CAAAC,gBAAA,CAAAF,UAAA,EAuEwE,CAAC;IAvE3E7rB,uDAAE,EAwEa,CAAC;IAxEhBA,wDAAE,YAAFA,6DAAE,IAAA2rB,GAAA,EAAAG,OAAA,CAAAE,UAAA,CAAAH,UAAA,EAwEa,CAAC;IAxEhB7rB,uDAAE,EAyErB,CAAC;IAzEkBA,wDAAE,SAAA8rB,OAAA,CAAAE,UAAA,CAAAH,UAAA,CAyErB,CAAC;EAAA;AAAA;AAAA,SAAAI,2CAAA9lB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzEkBnG,4DAAE,UAiFxC,CAAC;IAjFqCA,oDAAE,EAiFZ,CAAC;IAjFSA,0DAAE,CAiFL,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA0lB,UAAA,GAjFE7rB,2DAAE,GAAAiM,SAAA;IAAA,MAAAigB,OAAA,GAAFlsB,2DAAE;IAAFA,uDAAE,EAiFZ,CAAC;IAjFSA,+DAAE,CAAAksB,OAAA,CAAAC,cAAA,CAAAN,UAAA,CAiFZ,CAAC;EAAA;AAAA;AAAA,SAAAO,mDAAAjmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjFSnG,gEAAE,EAkFoC,CAAC;EAAA;AAAA;AAAA,MAAAqsB,GAAA,YAAAA,CAAA/E,EAAA,EAAAC,EAAA;EAAA;IAAA;IAAA,eAAAD,EAAA;IAAA,cAAAC;EAAA;AAAA;AAAA,MAAA+E,GAAA,YAAAA,CAAAlF,EAAA,EAAAE,EAAA;EAAA;IAAArb,SAAA,EAAAmb,EAAA;IAAA9a,KAAA,EAAAgb;EAAA;AAAA;AAAA,SAAAiF,oCAAApmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqmB,IAAA,GAlFvCxsB,8DAAE;IAAFA,4DAAE,YAsEvE,CAAC;IAtEoEA,wDAAE,mBAAAysB,wDAAAnmB,MAAA;MAAA,MAAAwF,WAAA,GAAF9L,2DAAE,CAAAwsB,IAAA;MAAA,MAAAX,UAAA,GAAA/f,WAAA,CAAAG,SAAA;MAAA,MAAAygB,OAAA,GAAF1sB,2DAAE;MAAA,OAAFA,yDAAE,CAkE1D0sB,OAAA,CAAAC,aAAA,CAAArmB,MAAA,EAAAulB,UAA4B,EAAC;IAAA,EAAC,sBAAAe,2DAAAtmB,MAAA;MAAA,MAAAwF,WAAA,GAlE0B9L,2DAAE,CAAAwsB,IAAA;MAAA,MAAAX,UAAA,GAAA/f,WAAA,CAAAG,SAAA;MAAA,MAAA4gB,OAAA,GAAF7sB,2DAAE;MAAA,OAAFA,yDAAE,CAmEvD6sB,OAAA,CAAAC,mBAAA,CAAAxmB,MAAA,EAAAulB,UAAkC,EAAC;IAAA,CADT,CAAC,sBAAAkB,2DAAA;MAAA,MAAAjhB,WAAA,GAlE0B9L,2DAAE,CAAAwsB,IAAA;MAAA,MAAAX,UAAA,GAAA/f,WAAA,CAAAG,SAAA;MAAA,MAAA+gB,OAAA,GAAFhtB,2DAAE;MAAA,OAAFA,yDAAE,CAoEvDgtB,OAAA,CAAAC,gBAAA,CAAApB,UAAuB,EAAC;IAAA,CAFE,CAAC,qBAAAqB,0DAAA5mB,MAAA;MAAA,MAAAwF,WAAA,GAlE0B9L,2DAAE,CAAAwsB,IAAA;MAAA,MAAAX,UAAA,GAAA/f,WAAA,CAAAG,SAAA;MAAA,MAAAkhB,OAAA,GAAFntB,2DAAE;MAAA,OAAFA,yDAAE,CAqExDmtB,OAAA,CAAAC,eAAA,CAAA9mB,MAAA,EAAAulB,UAA8B,EAAC;IAAA,CAHJ,CAAC;IAlE0B7rB,wDAAE,IAAA4rB,yCAAA,gBAgF9D,CAAC;IAhF2D5rB,wDAAE,IAAAisB,0CAAA,iBAiFL,CAAC;IAjFEjsB,wDAAE,IAAAosB,kDAAA,0BAkFoC,CAAC;IAlFvCpsB,0DAAE,CAmFnE,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA0lB,UAAA,GAAAzlB,GAAA,CAAA6F,SAAA;IAAA,MAAAohB,KAAA,GAAAjnB,GAAA,CAAAkG,KAAA;IAAA,MAAAghB,OAAA,GAnFgEttB,2DAAE;IAAFA,wDAAE,YAAFA,6DAAE,IAAAqsB,GAAA,EAAAiB,OAAA,CAAAtB,UAAA,CAAAH,UAAA,GAAAyB,OAAA,CAAAvB,gBAAA,CAAAF,UAAA,EA8DkD,CAAC;IA9DrD7rB,yDAAE,aAAAstB,OAAA,CAAAnF,QAAA,IAAAmF,OAAA,CAAAvB,gBAAA,CAAAF,UAAA,cA4DD,CAAC,eAAAyB,OAAA,CAAAnB,cAAA,CAAAN,UAAA,CAAD,CAAC,kBAAAyB,OAAA,CAAAtB,UAAA,CAAAH,UAAA,CAAD,CAAC;IA5DF7rB,uDAAE,EAuEL,CAAC;IAvEEA,wDAAE,SAAAstB,OAAA,CAAArD,QAAA,IAAAqD,OAAA,CAAApD,QAuEL,CAAC;IAvEElqB,uDAAE,EAiF1C,CAAC;IAjFuCA,wDAAE,UAAAstB,OAAA,CAAAE,YAiF1C,CAAC;IAjFuCxtB,uDAAE,EAkFrB,CAAC;IAlFkBA,wDAAE,qBAAAstB,OAAA,CAAAE,YAkFrB,CAAC,4BAlFkBxtB,6DAAE,KAAAssB,GAAA,EAAAT,UAAA,EAAAwB,KAAA,CAkFrB,CAAC;EAAA;AAAA;AAAA,SAAAI,+BAAAtnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlFkBnG,wDAAE,IAAAusB,mCAAA,iBAmFnE,CAAC;EAAA;EAAA,IAAApmB,EAAA;IAAA,MAAAunB,oBAAA,GAAAtnB,GAAA,CAAA6F,SAAA;IAnFgEjM,wDAAE,YAAA0tB,oBA2D5B,CAAC;EAAA;AAAA;AAAA,SAAAC,qCAAAxnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3DyBnG,qEAAE,EAsFO,CAAC;IAtFVA,oDAAE,EAwFxE,CAAC;IAxFqEA,mEAAE,CAwFzD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAynB,OAAA,GAxFsD5tB,2DAAE;IAAFA,uDAAE,EAwFxE,CAAC;IAxFqEA,gEAAE,MAAA4tB,OAAA,CAAAC,uBAAA,KAwFxE,CAAC;EAAA;AAAA;AAAA,SAAAC,qCAAA3nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxFqEnG,gEAAE,YAyF2B,CAAC;EAAA;AAAA;AAAA,SAAA+tB,sBAAA5nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzF9BnG,4DAAE,YAqFP,CAAC;IArFIA,wDAAE,IAAA2tB,oCAAA,0BAwFzD,CAAC;IAxFsD3tB,wDAAE,IAAA8tB,oCAAA,yBAyF2B,CAAC;IAzF9B9tB,0DAAE,CA0FvE,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAoG,MAAA,GA1FoEvM,2DAAE;IAAFA,uDAAE,EAsFX,CAAC;IAtFQA,wDAAE,UAAAuM,MAAA,CAAAyhB,mBAAA,KAAAzhB,MAAA,CAAA0hB,aAsFX,CAAC,aAAA1hB,MAAA,CAAA2hB,WAAD,CAAC;IAtFQluB,uDAAE,EAyFU,CAAC;IAzFbA,wDAAE,qBAAAuM,MAAA,CAAAyhB,mBAAA,IAAAzhB,MAAA,CAAA0hB,aAyFU,CAAC;EAAA;AAAA;AAAA,SAAAE,sCAAAhoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzFbnG,qEAAE,EA4FvB,CAAC;IA5FoBA,oDAAE,EA8FxE,CAAC;IA9FqEA,mEAAE,CA8FzD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAioB,OAAA,GA9FsDpuB,2DAAE;IAAFA,uDAAE,EA8FxE,CAAC;IA9FqEA,gEAAE,MAAAouB,OAAA,CAAAC,iBAAA,KA8FxE,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAAnoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9FqEnG,gEAAE,YA+FF,CAAC;EAAA;AAAA;AAAA,SAAAuuB,uBAAApoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/FDnG,4DAAE,YA2FN,CAAC;IA3FGA,wDAAE,IAAAmuB,qCAAA,0BA8FzD,CAAC;IA9FsDnuB,wDAAE,IAAAsuB,qCAAA,yBA+FF,CAAC;IA/FDtuB,0DAAE,CAgGvE,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAsG,MAAA,GAhGoEzM,2DAAE;IAAFA,uDAAE,EA4FnC,CAAC;IA5FgCA,wDAAE,UAAAyM,MAAA,CAAAwhB,aA4FnC,CAAC,aAAAxhB,MAAA,CAAA+hB,KAAD,CAAC;IA5FgCxuB,uDAAE,EA+FnB,CAAC;IA/FgBA,wDAAE,qBAAAyM,MAAA,CAAAwhB,aA+FnB,CAAC;EAAA;AAAA;AAAA,SAAAQ,uCAAAtoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/FgBnG,gEAAE,EAqGhB,CAAC;EAAA;AAAA;AAAA,SAAA0uB,wBAAAvoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArGanG,4DAAE,aAmGhB,CAAC;IAnGaA,0DAAE,KAoGrC,CAAC;IApGkCA,wDAAE,IAAAyuB,sCAAA,yBAqGhB,CAAC;IArGazuB,0DAAE,CAsG9E,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA0G,MAAA,GAtG2E7M,2DAAE;IAAFA,uDAAE,EAqGjC,CAAC;IArG8BA,wDAAE,qBAAA6M,MAAA,CAAA8hB,cAqGjC,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,IAAA,YAAAA,CAAAvH,EAAA;EAAA;IAAA;IAAA,cAAAA;EAAA;AAAA;AAAA,MAAAwH,IAAA;AAtvB/D,MAAMC,sBAAsB,GAAG;EAC3B9lB,OAAO,EAAElB,6DAAiB;EAC1BmB,WAAW,EAAEpB,yDAAU,CAAC,MAAMya,OAAO,CAAC;EACtCpZ,KAAK,EAAE;AACX,CAAC;AACD;AACA;AACA;AACA;AAHA,IAIMoZ,OAAO;EAAb,MAAMA,OAAO,CAAC;IAkIV;AACJ;AACA;AACA;IACI,IAAI1Z,OAAOA,CAAA,EAAG;MACV,OAAO,IAAI,CAACmmB,QAAQ;IACxB;IACA,IAAInmB,OAAOA,CAAC6E,GAAG,EAAE;MACb,IAAI,CAACshB,QAAQ,GAAGthB,GAAG;MACnB,IAAI,IAAI,CAACuhB,SAAS,CAAC,CAAC,EAChB,IAAI,CAACC,cAAc,CAAC,CAAC;IAC7B;IACA;AACJ;AACA;AACA;IACI,IAAIzF,WAAWA,CAAA,EAAG;MACd,OAAO,IAAI,CAAC0F,YAAY;IAC5B;IACA,IAAI1F,WAAWA,CAAC/b,GAAG,EAAE;MACjB,IAAI,CAACyhB,YAAY,GAAGzhB,GAAG;MACvB,IAAI,CAACwhB,cAAc,CAAC,CAAC;IACzB;IACA;AACJ;AACA;AACA;AACA;;IAwCIhtB,WAAWA,CAACktB,EAAE,EAAEC,EAAE,EAAEC,aAAa,EAAEC,MAAM,EAAE;MAAAC,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAhM3C;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA,mBAIW,KAAK;MAChB;AACJ;AACA;AACA;MAHIA,2JAAA,iBAIS,KAAK;MACd;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA,0BAIkB,UAAU;MAC5B;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA,2BAImB,IAAI;MACvB;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA,wBAIgB,IAAI;MACpB;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA,8BAIsB,OAAO;MAC7B;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAAAA,2JAAA,mBAiCW,IAAI7wB,uDAAY,CAAC,CAAC;MAC7B;AACJ;AACA;AACA;AACA;MAJI6wB,2JAAA,kBAKU,IAAI7wB,uDAAY,CAAC,CAAC;MAC5B;AACJ;AACA;AACA;AACA;MAJI6wB,2JAAA,qBAKa,IAAI7wB,uDAAY,CAAC,CAAC;MAAA6wB,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA,wBAqBf,MAAM,CAAE,CAAC;MAAAA,2JAAA,yBACR,MAAM,CAAE,CAAC;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAAAA,2JAAA;MAMtB,IAAI,CAACJ,EAAE,GAAGA,EAAE;MACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;MACZ,IAAI,CAACC,aAAa,GAAGA,aAAa;MAClC,IAAI,CAACC,MAAM,GAAGA,MAAM;IACxB;IACA1sB,QAAQA,CAAA,EAAG;MACP,IAAI,CAAC4sB,uBAAuB,GAAG,IAAI,CAACF,MAAM,CAACG,mBAAmB,CAACzsB,SAAS,CAAC,MAAM;QAC3E,IAAI,CAACosB,EAAE,CAACM,YAAY,CAAC,CAAC;MAC1B,CAAC,CAAC;MACF,IAAI,IAAI,CAACC,QAAQ,EAAE;QACf,IAAI,CAAChH,aAAa,GAAG;UACjBjkB,MAAM,EAAGR,KAAK,IAAK,IAAI,CAAColB,QAAQ,CAACplB,KAAK,CAAC;UACvC0rB,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACC,WAAW,CAAC;QAClC,CAAC;MACL;IACJ;IACAC,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACC,SAAS,CAAChrB,OAAO,CAAEirB,IAAI,IAAK;QAC7B,QAAQA,IAAI,CAACC,OAAO,CAAC,CAAC;UAClB,KAAK,MAAM;YACP,IAAI,CAAC1C,YAAY,GAAGyC,IAAI,CAACxmB,QAAQ;YACjC;UACJ,KAAK,OAAO;YACR,IAAI,CAACqhB,aAAa,GAAGmF,IAAI,CAACxmB,QAAQ;YAClC;UACJ,KAAK,QAAQ;YACT,IAAI,CAACid,cAAc,GAAGuJ,IAAI,CAACxmB,QAAQ;YACnC;UACJ,KAAK,QAAQ;YACT,IAAI,CAACkf,cAAc,GAAGsH,IAAI,CAACxmB,QAAQ;YACnC;UACJ,KAAK,QAAQ;YACT,IAAI,CAACklB,cAAc,GAAGsB,IAAI,CAACxmB,QAAQ;YACnC;UACJ,KAAK,OAAO;YACR,IAAI,CAACwkB,aAAa,GAAGgC,IAAI,CAACxmB,QAAQ;YAClC;UACJ,KAAK,aAAa;YACd,IAAI,CAACukB,mBAAmB,GAAGiC,IAAI,CAACxmB,QAAQ;YACxC;UACJ,KAAK,YAAY;YACb,IAAI,CAACyf,kBAAkB,GAAG+G,IAAI,CAACxmB,QAAQ;YACvC;UACJ,KAAK,WAAW;YACZ,IAAI,CAACsd,iBAAiB,GAAGkJ,IAAI,CAACxmB,QAAQ;YACtC;UACJ;YACI,IAAI,CAAC+jB,YAAY,GAAGyC,IAAI,CAACxmB,QAAQ;YACjC;QACR;MACJ,CAAC,CAAC;IACN;IACA0iB,cAAcA,CAACgE,MAAM,EAAE;MACnB,OAAO,IAAI,CAACC,WAAW,GAAGpK,sDAAW,CAACqK,gBAAgB,CAACF,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC,GAAGD,MAAM,CAAChd,KAAK,IAAI4R,SAAS,GAAGoL,MAAM,CAAChd,KAAK,GAAGgd,MAAM;IACxI;IACApF,sBAAsBA,CAACuF,WAAW,EAAE;MAChC,OAAO,IAAI,CAACC,mBAAmB,GAAGvK,sDAAW,CAACqK,gBAAgB,CAACC,WAAW,EAAE,IAAI,CAACC,mBAAmB,CAAC,GAAGD,WAAW,CAACE,KAAK;IAC7H;IACAjG,mBAAmBA,CAAC+F,WAAW,EAAE;MAC7B,OAAO,IAAI,CAACG,gBAAgB,GAAGzK,sDAAW,CAACqK,gBAAgB,CAACC,WAAW,EAAE,IAAI,CAACG,gBAAgB,CAAC,GAAGH,WAAW,CAACnd,KAAK,IAAI4R,SAAS,GAAGuL,WAAW,CAACnd,KAAK,GAAGmd,WAAW;IACtK;IACAI,cAAcA,CAACP,MAAM,EAAE;MACnB,OAAO,IAAI,CAACQ,WAAW,GAAG3K,sDAAW,CAACqK,gBAAgB,CAACF,MAAM,EAAE,IAAI,CAACQ,WAAW,CAAC,GAAG,IAAI,CAACP,WAAW,IAAID,MAAM,CAAChsB,KAAK,KAAK4gB,SAAS,GAAGoL,MAAM,GAAGA,MAAM,CAAChsB,KAAK;IAC7J;IACA4nB,gBAAgBA,CAACoE,MAAM,EAAE;MACrB,OAAO,IAAI,CAACS,cAAc,GAAG5K,sDAAW,CAACqK,gBAAgB,CAACF,MAAM,EAAE,IAAI,CAACS,cAAc,CAAC,GAAGT,MAAM,CAAChI,QAAQ,KAAKpD,SAAS,GAAGoL,MAAM,CAAChI,QAAQ,GAAG,KAAK;IACpJ;IACAhgB,UAAUA,CAAChE,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACkrB,EAAE,CAACM,YAAY,CAAC,CAAC;IAC1B;IACAkB,gBAAgBA,CAACC,EAAE,EAAE;MACjB,IAAI,CAACC,aAAa,GAAGD,EAAE;IAC3B;IACAE,iBAAiBA,CAACF,EAAE,EAAE;MAClB,IAAI,CAACG,cAAc,GAAGH,EAAE;IAC5B;IACAI,gBAAgBA,CAACxjB,GAAG,EAAE;MAClB,IAAI,CAACya,QAAQ,GAAGza,GAAG;MACnB,IAAI,CAAC2hB,EAAE,CAACM,YAAY,CAAC,CAAC;IAC1B;IACAhD,aAAaA,CAACnkB,KAAK,EAAE2nB,MAAM,EAAE;MACzB,IAAI,IAAI,CAAChI,QAAQ,IAAI,IAAI,CAAC4D,gBAAgB,CAACoE,MAAM,CAAC,IAAI,IAAI,CAACgB,QAAQ,EAAE;QACjE;MACJ;MACA,IAAI,IAAI,CAACjH,QAAQ,EAAE;QACf,IAAI,IAAI,CAACD,QAAQ,EACb,IAAI,CAACmH,qBAAqB,CAAC5oB,KAAK,EAAE2nB,MAAM,CAAC,CAAC,KAE1C,IAAI,CAACkB,qBAAqB,CAAC7oB,KAAK,EAAE2nB,MAAM,CAAC;MACjD,CAAC,MACI;QACD,IAAI,CAACmB,mBAAmB,CAAC9oB,KAAK,EAAE2nB,MAAM,CAAC;MAC3C;MACA,IAAI,CAACoB,OAAO,CAACrtB,IAAI,CAAC;QACdwE,aAAa,EAAEF,KAAK;QACpB2nB,MAAM,EAAEA,MAAM;QACdhsB,KAAK,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;MACF,IAAI,CAACqtB,aAAa,GAAG,KAAK;IAC9B;IACAvE,gBAAgBA,CAACkD,MAAM,EAAE;MACrB,IAAI,IAAI,CAAChI,QAAQ,IAAI,IAAI,CAAC4D,gBAAgB,CAACoE,MAAM,CAAC,IAAI,IAAI,CAACgB,QAAQ,EAAE;QACjE;MACJ;MACA,IAAI,CAACK,aAAa,GAAG,IAAI;IAC7B;IACA1E,mBAAmBA,CAACtkB,KAAK,EAAE2nB,MAAM,EAAE;MAC/B,IAAI,IAAI,CAAChI,QAAQ,IAAI,IAAI,CAAC4D,gBAAgB,CAACoE,MAAM,CAAC,IAAI,IAAI,CAACgB,QAAQ,EAAE;QACjE;MACJ;MACA,IAAI,CAACM,UAAU,CAACvtB,IAAI,CAAC;QACjBwE,aAAa,EAAEF,KAAK;QACpB2nB,MAAM,EAAEA,MAAM;QACdhsB,KAAK,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;IACN;IACAmtB,mBAAmBA,CAAC9oB,KAAK,EAAE2nB,MAAM,EAAE;MAC/B,IAAIuB,QAAQ,GAAG,IAAI,CAAC1F,UAAU,CAACmE,MAAM,CAAC;MACtC,IAAIwB,YAAY,GAAG,KAAK;MACxB,IAAIC,aAAa,GAAG,IAAI,CAACJ,aAAa,GAAG,KAAK,GAAG,IAAI,CAACK,gBAAgB;MACtE,IAAID,aAAa,EAAE;QACf,IAAIE,OAAO,GAAGtpB,KAAK,CAACspB,OAAO,IAAItpB,KAAK,CAACupB,OAAO;QAC5C,IAAIL,QAAQ,EAAE;UACV,IAAII,OAAO,EAAE;YACT,IAAI,CAAC3tB,KAAK,GAAG,IAAI;YACjBwtB,YAAY,GAAG,IAAI;UACvB;QACJ,CAAC,MACI;UACD,IAAI,CAACxtB,KAAK,GAAG,IAAI,CAACusB,cAAc,CAACP,MAAM,CAAC;UACxCwB,YAAY,GAAG,IAAI;QACvB;MACJ,CAAC,MACI;QACD,IAAI,CAACxtB,KAAK,GAAGutB,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAChB,cAAc,CAACP,MAAM,CAAC;QAC1DwB,YAAY,GAAG,IAAI;MACvB;MACA,IAAIA,YAAY,EAAE;QACd,IAAI,CAACZ,aAAa,CAAC,IAAI,CAAC5sB,KAAK,CAAC;QAC9B,IAAI,CAACqH,QAAQ,CAACtH,IAAI,CAAC;UACfwE,aAAa,EAAEF,KAAK;UACpBrE,KAAK,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;MACN;IACJ;IACAktB,qBAAqBA,CAAC7oB,KAAK,EAAE2nB,MAAM,EAAE;MACjC,IAAIuB,QAAQ,GAAG,IAAI,CAAC1F,UAAU,CAACmE,MAAM,CAAC;MACtC,IAAIwB,YAAY,GAAG,KAAK;MACxB,IAAIC,aAAa,GAAG,IAAI,CAACJ,aAAa,GAAG,KAAK,GAAG,IAAI,CAACK,gBAAgB;MACtE,IAAID,aAAa,EAAE;QACf,IAAIE,OAAO,GAAGtpB,KAAK,CAACspB,OAAO,IAAItpB,KAAK,CAACupB,OAAO;QAC5C,IAAIL,QAAQ,EAAE;UACV,IAAII,OAAO,EAAE;YACT,IAAI,CAACE,YAAY,CAAC7B,MAAM,CAAC;UAC7B,CAAC,MACI;YACD,IAAI,CAAChsB,KAAK,GAAG,CAAC,IAAI,CAACusB,cAAc,CAACP,MAAM,CAAC,CAAC;UAC9C;UACAwB,YAAY,GAAG,IAAI;QACvB,CAAC,MACI;UACD,IAAI,CAACxtB,KAAK,GAAG2tB,OAAO,GAAG,IAAI,CAAC3tB,KAAK,IAAI,EAAE,GAAG,EAAE;UAC5C,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,EAAE,IAAI,CAACusB,cAAc,CAACP,MAAM,CAAC,CAAC;UACzDwB,YAAY,GAAG,IAAI;QACvB;MACJ,CAAC,MACI;QACD,IAAID,QAAQ,EAAE;UACV,IAAI,CAACM,YAAY,CAAC7B,MAAM,CAAC;QAC7B,CAAC,MACI;UACD,IAAI,CAAChsB,KAAK,GAAG,CAAC,IAAI,IAAI,CAACA,KAAK,IAAI,EAAE,CAAC,EAAE,IAAI,CAACusB,cAAc,CAACP,MAAM,CAAC,CAAC;QACrE;QACAwB,YAAY,GAAG,IAAI;MACvB;MACA,IAAIA,YAAY,EAAE;QACd,IAAI,CAACZ,aAAa,CAAC,IAAI,CAAC5sB,KAAK,CAAC;QAC9B,IAAI,CAACqH,QAAQ,CAACtH,IAAI,CAAC;UACfwE,aAAa,EAAEF,KAAK;UACpBrE,KAAK,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;MACN;IACJ;IACAitB,qBAAqBA,CAAC5oB,KAAK,EAAE2nB,MAAM,EAAE;MACjC,IAAI,IAAI,CAAChI,QAAQ,IAAI,IAAI,CAACgJ,QAAQ,EAAE;QAChC;MACJ;MACA,IAAIO,QAAQ,GAAG,IAAI,CAAC1F,UAAU,CAACmE,MAAM,CAAC;MACtC,IAAIuB,QAAQ,EAAE;QACV,IAAI,CAACM,YAAY,CAAC7B,MAAM,CAAC;MAC7B,CAAC,MACI;QACD,IAAI,CAAChsB,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,EAAE;QACzC,IAAI,CAACA,KAAK,GAAG,CAAC,GAAG,IAAI,CAACA,KAAK,EAAE,IAAI,CAACusB,cAAc,CAACP,MAAM,CAAC,CAAC;MAC7D;MACA,IAAI,CAACY,aAAa,CAAC,IAAI,CAAC5sB,KAAK,CAAC;MAC9B,IAAI,CAACqH,QAAQ,CAACtH,IAAI,CAAC;QACfwE,aAAa,EAAEF,KAAK;QACpBrE,KAAK,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;IACN;IACA6tB,YAAYA,CAAC7B,MAAM,EAAE;MACjB,IAAI,CAAChsB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACQ,MAAM,CAAE+I,GAAG,IAAK,CAACsY,sDAAW,CAACiM,MAAM,CAACvkB,GAAG,EAAE,IAAI,CAACgjB,cAAc,CAACP,MAAM,CAAC,EAAE,IAAI,CAAC+B,OAAO,CAAC,CAAC;IAChH;IACAlG,UAAUA,CAACmE,MAAM,EAAE;MACf,IAAIuB,QAAQ,GAAG,KAAK;MACpB,IAAIf,WAAW,GAAG,IAAI,CAACD,cAAc,CAACP,MAAM,CAAC;MAC7C,IAAI,IAAI,CAACjG,QAAQ,EAAE;QACf,IAAI,IAAI,CAAC/lB,KAAK,EAAE;UACZ,KAAK,IAAIuJ,GAAG,IAAI,IAAI,CAACvJ,KAAK,EAAE;YACxB,IAAI6hB,sDAAW,CAACiM,MAAM,CAACvkB,GAAG,EAAEijB,WAAW,EAAE,IAAI,CAACuB,OAAO,CAAC,EAAE;cACpDR,QAAQ,GAAG,IAAI;cACf;YACJ;UACJ;QACJ;MACJ,CAAC,MACI;QACDA,QAAQ,GAAG1L,sDAAW,CAACiM,MAAM,CAAC,IAAI,CAAC9tB,KAAK,EAAEwsB,WAAW,EAAE,IAAI,CAACuB,OAAO,CAAC;MACxE;MACA,OAAOR,QAAQ;IACnB;IACA,IAAIrJ,UAAUA,CAAA,EAAG;MACb,IAAI4C,eAAe,GAAG,IAAI,CAACA,eAAe;MAC1C,IAAI,CAACA,eAAe,IAAIA,eAAe,CAACpnB,MAAM,KAAK,CAAC,EAAE;QAClD,OAAO,KAAK;MAChB,CAAC,MACI;QACD,IAAIsuB,2BAA2B,GAAG,CAAC;QACnC,IAAIC,6BAA6B,GAAG,CAAC;QACrC,IAAIC,0BAA0B,GAAG,CAAC;QAClC,IAAIC,oBAAoB,GAAG,IAAI,CAAChf,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC2X,eAAe,CAACpnB,MAAM;QACvE,KAAK,IAAIssB,MAAM,IAAIlF,eAAe,EAAE;UAChC,IAAI,CAAC,IAAI,CAAC3X,KAAK,EAAE;YACb,IAAI6U,QAAQ,GAAG,IAAI,CAAC4D,gBAAgB,CAACoE,MAAM,CAAC;YAC5C,IAAIuB,QAAQ,GAAG,IAAI,CAAC1F,UAAU,CAACmE,MAAM,CAAC;YACtC,IAAIhI,QAAQ,EAAE;cACV,IAAIuJ,QAAQ,EACRS,2BAA2B,EAAE,CAAC,KAE9BC,6BAA6B,EAAE;YACvC,CAAC,MACI;cACD,IAAIV,QAAQ,EACRW,0BAA0B,EAAE,CAAC,KAE7B,OAAO,KAAK;YACpB;UACJ,CAAC,MACI;YACD,KAAK,IAAIE,GAAG,IAAI,IAAI,CAACxH,sBAAsB,CAACoF,MAAM,CAAC,EAAE;cACjD,IAAIhI,QAAQ,GAAG,IAAI,CAAC4D,gBAAgB,CAACwG,GAAG,CAAC;cACzC,IAAIb,QAAQ,GAAG,IAAI,CAAC1F,UAAU,CAACuG,GAAG,CAAC;cACnC,IAAIpK,QAAQ,EAAE;gBACV,IAAIuJ,QAAQ,EACRS,2BAA2B,EAAE,CAAC,KAE9BC,6BAA6B,EAAE;cACvC,CAAC,MACI;gBACD,IAAIV,QAAQ,EACRW,0BAA0B,EAAE,CAAC,KAC5B;kBACD,OAAO,KAAK;gBAChB;cACJ;cACAC,oBAAoB,EAAE;YAC1B;UACJ;QACJ;QACA,OAAQA,oBAAoB,KAAKH,2BAA2B,IACxDG,oBAAoB,KAAKD,0BAA0B,IAClDA,0BAA0B,IAAIC,oBAAoB,KAAKD,0BAA0B,GAAGD,6BAA6B,GAAGD,2BAA4B;MACzJ;IACJ;IACA,IAAIlH,eAAeA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACuH,gBAAgB,IAAI,IAAI,CAAC3pB,OAAO;IAChD;IACA,IAAIwlB,iBAAiBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACoE,YAAY,IAAI,IAAI,CAAClD,MAAM,CAACmD,cAAc,CAAC9M,wDAAe,CAAC+M,aAAa,CAAC;IACzF;IACA,IAAI9E,uBAAuBA,CAAA,EAAG;MAC1B,OAAO,IAAI,CAAC+E,kBAAkB,IAAI,IAAI,CAACrD,MAAM,CAACmD,cAAc,CAAC9M,wDAAe,CAACiN,oBAAoB,CAAC;IACtG;IACA5D,SAASA,CAAA,EAAG;MACR,OAAO,IAAI,CAACE,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC3hB,IAAI,CAAC,CAAC,CAAC3J,MAAM,GAAG,CAAC;IACnE;IACAivB,OAAOA,CAAA,EAAG;MACN,OAAO,CAAC,IAAI,CAAC7H,eAAe,IAAK,IAAI,CAACA,eAAe,IAAI,IAAI,CAACA,eAAe,CAACpnB,MAAM,KAAK,CAAE;IAC/F;IACA0lB,QAAQA,CAAC/gB,KAAK,EAAE;MACZ,IAAI,CAAC2mB,YAAY,GAAG3mB,KAAK,CAAC+E,MAAM,CAACpJ,KAAK;MACtC,IAAI,CAAC+qB,cAAc,CAAC,CAAC;IACzB;IACAA,cAAcA,CAAA,EAAG;MACb,IAAI,IAAI,CAACD,SAAS,CAAC,CAAC,IAAI,IAAI,CAACD,QAAQ,EAAE;QACnC,IAAI,IAAI,CAAC1b,KAAK,EAAE;UACZ,IAAIyf,YAAY,GAAG,CAAC,IAAI,CAACnD,QAAQ,IAAI,IAAI,CAACQ,WAAW,IAAI,OAAO,EAAE4C,KAAK,CAAC,GAAG,CAAC;UAC5E,IAAIC,cAAc,GAAG,EAAE;UACvB,KAAK,IAAIC,QAAQ,IAAI,IAAI,CAACrqB,OAAO,EAAE;YAC/B,IAAIsqB,kBAAkB,GAAG,IAAI,CAAC7D,aAAa,CAAC3qB,MAAM,CAAC,IAAI,CAAComB,sBAAsB,CAACmI,QAAQ,CAAC,EAAEH,YAAY,EAAE,IAAI,CAACtJ,WAAW,EAAE,IAAI,CAAC2J,eAAe,EAAE,IAAI,CAACC,YAAY,CAAC;YAClK,IAAIF,kBAAkB,IAAIA,kBAAkB,CAACtvB,MAAM,EAAE;cACjDovB,cAAc,CAAChuB,IAAI,CAAC;gBAAE,GAAGiuB,QAAQ;gBAAE,GAAG;kBAAE,CAAC,IAAI,CAAC3C,mBAAmB,GAAG4C;gBAAmB;cAAE,CAAC,CAAC;YAC/F;UACJ;UACA,IAAI,CAACX,gBAAgB,GAAGS,cAAc;QAC1C,CAAC,MACI;UACD,IAAI,CAACT,gBAAgB,GAAG,IAAI,CAACxD,QAAQ,CAACrqB,MAAM,CAAEwrB,MAAM,IAAK,IAAI,CAACb,aAAa,CAACgE,OAAO,CAAC,IAAI,CAACF,eAAe,CAAC,CAAC,IAAI,CAACjH,cAAc,CAACgE,MAAM,CAAC,EAAE,IAAI,CAAChB,YAAY,EAAE,IAAI,CAACkE,YAAY,CAAC,CAAC;QACjL;MACJ,CAAC,MACI;QACD,IAAI,CAACb,gBAAgB,GAAG,IAAI;MAChC;IACJ;IACA1C,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAACyD,eAAe,IAAI,IAAI,CAACA,eAAe,CAAC9tB,aAAa,EAAE;QAC5D,IAAI,CAAC8tB,eAAe,CAAC9tB,aAAa,CAACtB,KAAK,GAAG,EAAE;MACjD;MACA,IAAI,CAACgrB,YAAY,GAAG,IAAI;MACxB,IAAI,CAACqD,gBAAgB,GAAG,IAAI;IAChC;IACA,IAAIpK,iBAAiBA,CAAA,EAAG;MACpB,IAAI6C,eAAe,GAAG,IAAI,CAACA,eAAe;MAC1C,IAAI,CAACA,eAAe,IAAIA,eAAe,CAACpnB,MAAM,KAAK,CAAC,EAAE;QAClD,OAAO,IAAI;MACf,CAAC,MACI;QACD,KAAK,IAAIssB,MAAM,IAAIlF,eAAe,EAAE;UAChC,IAAI,CAAC,IAAI,CAACc,gBAAgB,CAACoE,MAAM,CAAC,EAC9B,OAAO,KAAK;QACpB;QACA,OAAO,IAAI;MACf;IACJ;IACAnI,SAASA,CAACxf,KAAK,EAAE;MACb,IAAI,IAAI,CAAC2f,QAAQ,IAAI,IAAI,CAACC,iBAAiB,IAAI,IAAI,CAAC+I,QAAQ,EAAE;QAC1D;MACJ;MACA,IAAI9I,UAAU,GAAG,IAAI,CAACA,UAAU;MAChC,IAAIA,UAAU,EACV,IAAI,CAACmL,UAAU,CAAC,CAAC,CAAC,KAElB,IAAI,CAACC,QAAQ,CAAC,CAAC;MACnB,IAAI,CAAC1C,aAAa,CAAC,IAAI,CAAC5sB,KAAK,CAAC;MAC9B,IAAI,CAACqH,QAAQ,CAACtH,IAAI,CAAC;QAAEwE,aAAa,EAAEF,KAAK;QAAErE,KAAK,EAAE,IAAI,CAACA;MAAM,CAAC,CAAC;MAC/DqE,KAAK,CAACkrB,cAAc,CAAC,CAAC;IAC1B;IACAD,QAAQA,CAAA,EAAG;MACP,IAAIxI,eAAe,GAAG,IAAI,CAACA,eAAe;MAC1C,IAAIvd,GAAG,GAAG,EAAE;MACZud,eAAe,CAACjmB,OAAO,CAAEutB,GAAG,IAAK;QAC7B,IAAI,CAAC,IAAI,CAACjf,KAAK,EAAE;UACb,IAAIsd,cAAc,GAAG,IAAI,CAAC7E,gBAAgB,CAACwG,GAAG,CAAC;UAC/C,IAAI,CAAC3B,cAAc,IAAKA,cAAc,IAAI,IAAI,CAAC5E,UAAU,CAACuG,GAAG,CAAE,EAAE;YAC7D7kB,GAAG,CAACzI,IAAI,CAAC,IAAI,CAACyrB,cAAc,CAAC6B,GAAG,CAAC,CAAC;UACtC;QACJ,CAAC,MACI;UACD,IAAIoB,UAAU,GAAG,IAAI,CAAC5I,sBAAsB,CAACwH,GAAG,CAAC;UACjD,IAAIoB,UAAU,EAAE;YACZA,UAAU,CAAC3uB,OAAO,CAAEmrB,MAAM,IAAK;cAC3B,IAAIS,cAAc,GAAG,IAAI,CAAC7E,gBAAgB,CAACoE,MAAM,CAAC;cAClD,IAAI,CAACS,cAAc,IAAKA,cAAc,IAAI,IAAI,CAAC5E,UAAU,CAACmE,MAAM,CAAE,EAAE;gBAChEziB,GAAG,CAACzI,IAAI,CAAC,IAAI,CAACyrB,cAAc,CAACP,MAAM,CAAC,CAAC;cACzC;YACJ,CAAC,CAAC;UACN;QACJ;MACJ,CAAC,CAAC;MACF,IAAI,CAAChsB,KAAK,GAAGuJ,GAAG;IACpB;IACA8lB,UAAUA,CAAA,EAAG;MACT,IAAIvI,eAAe,GAAG,IAAI,CAACA,eAAe;MAC1C,IAAIvd,GAAG,GAAG,EAAE;MACZud,eAAe,CAACjmB,OAAO,CAAEutB,GAAG,IAAK;QAC7B,IAAI,CAAC,IAAI,CAACjf,KAAK,EAAE;UACb,IAAIsd,cAAc,GAAG,IAAI,CAAC7E,gBAAgB,CAACwG,GAAG,CAAC;UAC/C,IAAI3B,cAAc,IAAI,IAAI,CAAC5E,UAAU,CAACuG,GAAG,CAAC,EAAE;YACxC7kB,GAAG,CAACzI,IAAI,CAAC,IAAI,CAACyrB,cAAc,CAAC6B,GAAG,CAAC,CAAC;UACtC;QACJ,CAAC,MACI;UACD,IAAIA,GAAG,CAAC/B,KAAK,EAAE;YACX+B,GAAG,CAAC/B,KAAK,CAACxrB,OAAO,CAAEmrB,MAAM,IAAK;cAC1B,IAAIS,cAAc,GAAG,IAAI,CAAC7E,gBAAgB,CAACoE,MAAM,CAAC;cAClD,IAAIS,cAAc,IAAI,IAAI,CAAC5E,UAAU,CAACmE,MAAM,CAAC,EAAE;gBAC3CziB,GAAG,CAACzI,IAAI,CAAC,IAAI,CAACyrB,cAAc,CAACP,MAAM,CAAC,CAAC;cACzC;YACJ,CAAC,CAAC;UACN;QACJ;MACJ,CAAC,CAAC;MACF,IAAI,CAAChsB,KAAK,GAAGuJ,GAAG;IACpB;IACA0f,eAAeA,CAAC5kB,KAAK,EAAE2nB,MAAM,EAAE;MAC3B,IAAI,IAAI,CAACgB,QAAQ,EAAE;QACf;MACJ;MACA,IAAIlB,IAAI,GAAGznB,KAAK,CAACorB,aAAa;MAC9B,QAAQprB,KAAK,CAACqrB,KAAK;QACf;QACA,KAAK,EAAE;UACH,IAAIC,QAAQ,GAAG,IAAI,CAACC,YAAY,CAAC9D,IAAI,CAAC;UACtC,IAAI6D,QAAQ,EAAE;YACVA,QAAQ,CAACE,KAAK,CAAC,CAAC;UACpB;UACAxrB,KAAK,CAACkrB,cAAc,CAAC,CAAC;UACtB;QACJ;QACA,KAAK,EAAE;UACH,IAAIO,QAAQ,GAAG,IAAI,CAACC,YAAY,CAACjE,IAAI,CAAC;UACtC,IAAIgE,QAAQ,EAAE;YACVA,QAAQ,CAACD,KAAK,CAAC,CAAC;UACpB;UACAxrB,KAAK,CAACkrB,cAAc,CAAC,CAAC;UACtB;QACJ;QACA,KAAK,EAAE;UACH,IAAI,CAAC/G,aAAa,CAACnkB,KAAK,EAAE2nB,MAAM,CAAC;UACjC3nB,KAAK,CAACkrB,cAAc,CAAC,CAAC;UACtB;MACR;IACJ;IACAK,YAAYA,CAAC9D,IAAI,EAAE;MACf,IAAI6D,QAAQ,GAAG7D,IAAI,CAACkE,kBAAkB;MACtC,IAAIL,QAAQ,EACR,OAAO/N,mDAAU,CAACqO,QAAQ,CAACN,QAAQ,EAAE,YAAY,CAAC,IAAI/N,mDAAU,CAACsO,QAAQ,CAACP,QAAQ,CAAC,IAAI/N,mDAAU,CAACqO,QAAQ,CAACN,QAAQ,EAAE,sBAAsB,CAAC,GAAG,IAAI,CAACC,YAAY,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAAC,KAEtL,OAAO,IAAI;IACnB;IACAI,YAAYA,CAACjE,IAAI,EAAE;MACf,IAAIgE,QAAQ,GAAGhE,IAAI,CAACqE,sBAAsB;MAC1C,IAAIL,QAAQ,EACR,OAAOlO,mDAAU,CAACqO,QAAQ,CAACH,QAAQ,EAAE,YAAY,CAAC,IAAIlO,mDAAU,CAACsO,QAAQ,CAACJ,QAAQ,CAAC,IAAIlO,mDAAU,CAACqO,QAAQ,CAACH,QAAQ,EAAE,sBAAsB,CAAC,GAAG,IAAI,CAACC,YAAY,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAAC,KAEtL,OAAO,IAAI;IACnB;IACAtM,qBAAqBA,CAAA,EAAG;MACpB,IAAI,CAACY,mBAAmB,GAAG,IAAI;IACnC;IACAV,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACU,mBAAmB,GAAG,KAAK;IACpC;IACAgM,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAAC9E,uBAAuB,EAAE;QAC9B,IAAI,CAACA,uBAAuB,CAAC/K,WAAW,CAAC,CAAC;MAC9C;IACJ;EA0GJ;EAAC8K,2JAAA,CAjvBKjN,OAAO,wBAAAiS,gBAAA7rB,CAAA;IAAA,YAAAA,CAAA,IAwoB0F4Z,OAAO,EAAjBviB,+DAAE,CAAiCA,qDAAa,GAAhDA,+DAAE,CAA2DA,4DAAoB,GAAjFA,+DAAE,CAA4F6G,sDAAgB,GAA9G7G,+DAAE,CAAyH6G,sDAAgB;EAAA;EAAA2oB,2JAAA,CAxoBlOjN,OAAO,8BAwoBgFviB,+DAAE;IAAAkB,IAAA,EACJqhB,OAAO;IAAAvc,SAAA;IAAA+uB,cAAA,WAAAC,uBAAA7uB,EAAA,EAAAC,GAAA,EAAA6uB,QAAA;MAAA,IAAA9uB,EAAA;QADLnG,4DAAE,CAAAi1B,QAAA,EACsgCpP,+CAAM;QAD9gC7lB,4DAAE,CAAAi1B,QAAA,EAC0lCnP,+CAAM;QADlmC9lB,4DAAE,CAAAi1B,QAAA,EAC+pC7tB,sDAAa;MAAA;MAAA,IAAAjB,EAAA;QAAA,IAAAgvB,EAAA;QAD9qCn1B,4DAAE,CAAAm1B,EAAA,GAAFn1B,yDAAE,QAAAoG,GAAA,CAAAkvB,WAAA,GAAAH,EAAA,CAAAI,KAAA;QAAFv1B,4DAAE,CAAAm1B,EAAA,GAAFn1B,yDAAE,QAAAoG,GAAA,CAAAovB,WAAA,GAAAL,EAAA,CAAAI,KAAA;QAAFv1B,4DAAE,CAAAm1B,EAAA,GAAFn1B,yDAAE,QAAAoG,GAAA,CAAA4pB,SAAA,GAAAmF,EAAA;MAAA;IAAA;IAAAlvB,SAAA,WAAAwvB,cAAAtvB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAAFnG,yDAAE,CAAAomB,GAAA;QAAFpmB,yDAAE,CAAAqmB,GAAA;MAAA;MAAA,IAAAlgB,EAAA;QAAA,IAAAgvB,EAAA;QAAFn1B,4DAAE,CAAAm1B,EAAA,GAAFn1B,yDAAE,QAAAoG,GAAA,CAAAuvB,uBAAA,GAAAR,EAAA,CAAAI,KAAA;QAAFv1B,4DAAE,CAAAm1B,EAAA,GAAFn1B,yDAAE,QAAAoG,GAAA,CAAAmtB,eAAA,GAAA4B,EAAA,CAAAI,KAAA;MAAA;IAAA;IAAAK,SAAA;IAAAhtB,MAAA;MAAAshB,QAAA;MAAA2L,KAAA;MAAAC,UAAA;MAAAC,SAAA;MAAAC,cAAA;MAAA7E,QAAA;MAAAhJ,QAAA;MAAA8B,QAAA;MAAAtlB,MAAA;MAAAirB,QAAA;MAAAwD,eAAA;MAAAC,YAAA;MAAAxB,gBAAA;MAAAK,OAAA;MAAA/H,aAAA;MAAAiG,WAAA;MAAAO,WAAA;MAAAJ,mBAAA;MAAAE,gBAAA;MAAAG,cAAA;MAAAjH,eAAA;MAAAD,iBAAA;MAAAkJ,kBAAA;MAAAH,YAAA;MAAAnf,KAAA;MAAAzK,OAAA;MAAA4gB,WAAA;IAAA;IAAAwM,OAAA;MAAAzqB,QAAA;MAAA+lB,OAAA;MAAAE,UAAA;IAAA;IAAA1oB,QAAA,GAAF/I,gEAAE,CAC26B,CAAC+uB,sBAAsB,CAAC;IAAAmH,kBAAA,EAAApH,IAAA;IAAAxlB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA0sB,iBAAAhwB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QADr8BnG,6DAAE,CAAA4uB,GAAA;QAAF5uB,4DAAE,YAE0B,CAAC;QAF7BA,wDAAE,IAAAwmB,sBAAA,gBAM9E,CAAC;QAN2ExmB,wDAAE,IAAA6pB,sBAAA,gBA0C9E,CAAC;QA1C2E7pB,4DAAE,YA2CK,CAAC,WAAD,CAAC;QA3CRA,wDAAE,IAAAgrB,+BAAA,yBAqD7D,CAAC;QArD0DhrB,wDAAE,IAAAmrB,+BAAA,yBAwD7D,CAAC;QAxD0DnrB,wDAAE,IAAAytB,8BAAA,gCAAFztB,oEAoF5D,CAAC;QApF2DA,wDAAE,IAAA+tB,qBAAA,eA0FvE,CAAC;QA1FoE/tB,wDAAE,KAAAuuB,sBAAA,eAgGvE,CAAC;QAhGoEvuB,0DAAE,CAiG3E,CAAC,CAAD,CAAC;QAjGwEA,wDAAE,KAAA0uB,uBAAA,gBAsG9E,CAAC;QAtG2E1uB,0DAAE,CAuGlF,CAAC;MAAA;MAAA,IAAAmG,EAAA;QAvG+EnG,wDAAE,CAAAoG,GAAA,CAAA0vB,UAEyB,CAAC;QAF5B91B,wDAAE,YAAFA,6DAAE,KAAA6uB,IAAA,EAAAzoB,GAAA,CAAA+hB,QAAA,CAEd,CAAC,YAAA/hB,GAAA,CAAAyvB,KAAD,CAAC;QAFW71B,uDAAE,EAGlB,CAAC;QAHeA,wDAAE,SAAAoG,GAAA,CAAAkvB,WAAA,IAAAlvB,GAAA,CAAAsgB,cAGlB,CAAC;QAHe1mB,uDAAE,EAOE,CAAC;QAPLA,wDAAE,SAAAoG,GAAA,CAAA6jB,QAAA,IAAA7jB,GAAA,CAAA8jB,QAAA,IAAA9jB,GAAA,CAAA+jB,aAAA,IAAA/jB,GAAA,CAAAzB,MAOE,CAAC;QAPL3E,uDAAE,EA2CI,CAAC;QA3CPA,wDAAE,CAAAoG,GAAA,CAAA4vB,cA2CI,CAAC;QA3CPh2B,wDAAE,oCA2C3C,CAAC,YAAAoG,GAAA,CAAA2vB,SAAD,CAAC;QA3CwC/1B,uDAAE,EA4CA,CAAC;QA5CHA,yDAAE,yBAAAoG,GAAA,CAAA8jB,QA4CA,CAAC;QA5CHlqB,uDAAE,EA6ClD,CAAC;QA7C+CA,wDAAE,SAAAoG,GAAA,CAAAkN,KA6ClD,CAAC;QA7C+CtT,uDAAE,EAsDjD,CAAC;QAtD8CA,wDAAE,UAAAoG,GAAA,CAAAkN,KAsDjD,CAAC;QAtD8CtT,uDAAE,EAqFzC,CAAC;QArFsCA,wDAAE,SAAAoG,GAAA,CAAA6oB,SAAA,MAAA7oB,GAAA,CAAA0sB,OAAA,EAqFzC,CAAC;QArFsC9yB,uDAAE,EA2FxC,CAAC;QA3FqCA,wDAAE,UAAAoG,GAAA,CAAA6oB,SAAA,MAAA7oB,GAAA,CAAA0sB,OAAA,EA2FxC,CAAC;QA3FqC9yB,uDAAE,EAmGlB,CAAC;QAnGeA,wDAAE,SAAAoG,GAAA,CAAAovB,WAAA,IAAApvB,GAAA,CAAAuoB,cAmGlB,CAAC;MAAA;IAAA;IAAA2H,YAAA,WAAAA,CAAA;MAAA,QAK6drvB,oDAAU,EAA2HA,oDAAU,EAA0JA,iDAAO,EAAoIA,6DAAmB,EAA2LA,oDAAU,EAAkHE,kDAAS,EAA6F+e,4DAAU,EAA8FC,0DAAS;IAAA;IAAAve,MAAA;IAAA+uB,aAAA;IAAAC,eAAA;EAAA;EAAA,OAhvB1/CrU,OAAO;AAAA;AAkvBb;EAAA,QAAAsU,SAAA,oBAAAA,SAAA;AAAA;AAuLoB,IACdzW,aAAa;EAAnB,MAAMA,aAAa,CAAC;EAInBoP,2JAAA,CAJKpP,aAAa,wBAAA0W,sBAAAnuB,CAAA;IAAA,YAAAA,CAAA,IACoFyX,aAAa;EAAA;EAAAoP,2JAAA,CAD9GpP,aAAa,8BAlS0EpgB,8DAAE;IAAAkB,IAAA,EAoSSkf;EAAa;EAAAoP,2JAAA,CAF/GpP,aAAa,8BAlS0EpgB,8DAAE;IAAAi3B,OAAA,GAqSkCtR,yDAAY,EAAE1mB,qDAAY,EAAEgnB,wDAAY,EAAEC,4DAAU,EAAEC,0DAAS,EAAElnB,qDAAY;EAAA;EAAA,OAHxMmhB,aAAa;AAAA;AAKnB;EAAA,QAAAyW,SAAA,oBAAAA,SAAA;AAAA;;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACj9BsC;AACS;AACX;AACmE;AACvD;AAC4B;AAClB;AACE;;AAE5D;AACA;AACA;AACA;AAHA,SAAAQ,+BAAAlxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAsC6FnG,uDAAE,kBAeL,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAfEnG,wDAAE,sCAeR,CAAC;EAAA;AAAA;AAAA,SAAAs3B,oCAAAnxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAfKnG,uDAAE,uBAgBH,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAhBAnG,wDAAE,sCAgBN,CAAC;EAAA;AAAA;AAAA,SAAAu3B,qCAAApxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhBGnG,uDAAE,wBAiBD,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAjBFnG,wDAAE,sCAiBJ,CAAC;EAAA;AAAA;AAAA,SAAAw3B,6CAAArxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjBCnG,uDAAE,gCAkBM,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAlBTnG,wDAAE,sCAkBG,CAAC;EAAA;AAAA;AAAA,SAAAy3B,gCAAAtxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlBNnG,uDAAE,aAoBF,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAAsG,MAAA,GApBDzM,2DAAE;IAAFA,wDAAE,cAAAyM,MAAA,CAAAirB,IAAA,EAAF13B,4DAoBR,CAAC;EAAA;AAAA;AAAA,SAAA43B,yBAAAzxB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApBOnG,4DAAE,SAmB/C,CAAC;IAnB4CA,wDAAE,IAAAy3B,+BAAA,iBAoBF,CAAC;IApBDz3B,0DAAE,CAqB9E,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA+F,MAAA,GArB2ElM,2DAAE;IAAFA,uDAAE,EAoB5D,CAAC;IApByDA,wDAAE,UAAAkM,MAAA,CAAA2rB,MAoB5D,CAAC;EAAA;AAAA;AAAA,SAAAC,wCAAA3xB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApByDnG,4DAAE,aAuB7B,CAAC;IAvB0BA,oDAAE,EAuBnB,CAAC;IAvBgBA,0DAAE,CAuBZ,CAAC;EAAA;EAAA,IAAAmG,EAAA;IAAA,MAAA0G,MAAA,GAvBS7M,2DAAE;IAAFA,uDAAE,EAuBnB,CAAC;IAvBgBA,+DAAE,CAAA6M,MAAA,CAAA6qB,IAuBnB,CAAC;EAAA;AAAA;AAAA,SAAAK,iCAAA5xB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvBgBnG,wDAAE,IAAA83B,uCAAA,iBAuBZ,CAAC;EAAA;EAAA,IAAA3xB,EAAA;IAAA,MAAAoG,MAAA,GAvBSvM,2DAAE;IAAFA,wDAAE,SAAAuM,MAAA,CAAAsrB,MAuB7D,CAAC;EAAA;AAAA;AAAA,MAAAzR,GAAA,YAAAA,CAAAgB,EAAA,EAAAE,EAAA,EAAAC,EAAA,EAAAyQ,EAAA,EAAAC,EAAA;EAAA;IAAA,yBAAA7Q,EAAA;IAAA,yBAAAE,EAAA;IAAA,0BAAAC,EAAA;IAAA,4BAAAyQ,EAAA;IAAA,8BAAAC;EAAA;AAAA;AAAA,IAzD7Bjf,SAAS;EAAf,MAAMA,SAAS,CAAC;IAAA9W,YAAA;MACZ;AACJ;AACA;AACA;MAHIstB,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA,iBAIS,IAAI;MACb;AACJ;AACA;AACA;MAHIA,2JAAA;MAKA;AACJ;AACA;AACA;MAHIA,2JAAA;IAAA;IAKA,IAAI0I,IAAIA,CAAA,EAAG;MACP,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC3qB,IAAI,CAAC,CAAC,EAAE;QACvC,OAAO,IAAI,CAAC2qB,QAAQ;MACxB,CAAC,MACI;QACD,OAAO,MAAM;MACjB;IACJ;EA4BJ;EAAC3I,2JAAA,CA7DKxW,SAAS,wBAAAof,kBAAAzvB,CAAA;IAAA,YAAAA,CAAA,IAkCwFqQ,SAAS;EAAA;EAAAwW,2JAAA,CAlC1GxW,SAAS,8BAkC8EhZ,+DAAE;IAAAkB,IAAA,EACJ8X,SAAS;IAAAhT,SAAA;IAAA4vB,SAAA;IAAAhtB,MAAA;MAAAuvB,QAAA;MAAAT,IAAA;MAAAG,MAAA;MAAAhC,KAAA;MAAAC,UAAA;IAAA;IAAAxsB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA4uB,mBAAAlyB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QADPnG,4DAAE,YAcvF,CAAC;QAdoFA,wDAAE,IAAAq3B,8BAAA,sBAeL,CAAC;QAfEr3B,wDAAE,IAAAs3B,mCAAA,2BAgBH,CAAC;QAhBAt3B,wDAAE,IAAAu3B,oCAAA,4BAiBD,CAAC;QAjBFv3B,wDAAE,IAAAw3B,4CAAA,oCAkBM,CAAC;QAlBTx3B,wDAAE,IAAA43B,wBAAA,gBAqB9E,CAAC;QArB2E53B,wDAAE,IAAA+3B,gCAAA,gCAAF/3B,oEAwBpE,CAAC;QAxBmEA,0DAAE,CAyBlF,CAAC;MAAA;MAAA,IAAAmG,EAAA;QAAA,MAAA4F,GAAA,GAzB+E/L,yDAAE;QAAFA,wDAAE,CAAAoG,GAAA,CAAA0vB,UAMhE,CAAC;QAN6D91B,wDAAE,YAAAoG,GAAA,CAAAyvB,KAKnE,CAAC,YALgE71B,6DAAE,KAAAomB,GAAA,EAAAhgB,GAAA,CAAA+xB,QAAA,aAAA/xB,GAAA,CAAA+xB,QAAA,aAAA/xB,GAAA,CAAA+xB,QAAA,cAAA/xB,GAAA,CAAA+xB,QAAA,gBAAA/xB,GAAA,CAAAsxB,IAAA,SAKnE,CAAC;QALgE13B,uDAAE,EAehD,CAAC;QAf6CA,wDAAE,SAAAoG,GAAA,CAAA8xB,IAAA,cAehD,CAAC;QAf6Cl4B,uDAAE,EAgB9C,CAAC;QAhB2CA,wDAAE,SAAAoG,GAAA,CAAA8xB,IAAA,WAgB9C,CAAC;QAhB2Cl4B,uDAAE,EAiB5C,CAAC;QAjByCA,wDAAE,SAAAoG,GAAA,CAAA8xB,IAAA,YAiB5C,CAAC;QAjByCl4B,uDAAE,EAkBrC,CAAC;QAlBkCA,wDAAE,SAAAoG,GAAA,CAAA8xB,IAAA,WAkBrC,CAAC;QAlBkCl4B,uDAAE,EAmB/D,CAAC;QAnB4DA,wDAAE,UAAAoG,GAAA,CAAAyxB,MAmB/D,CAAC,aAAA9rB,GAAD,CAAC;MAAA;IAAA;IAAAuqB,YAAA,WAAAA,CAAA;MAAA,QAO2SzvB,oDAAU,EAA2HA,iDAAO,EAAoIA,oDAAU,EAAkHsf,0DAAS,EAA6FgR,oEAAc,EAAkGC,sEAAe,EAAmGF,sFAAuB;IAAA;IAAAtvB,MAAA;IAAA+uB,aAAA;IAAAC,eAAA;EAAA;EAAA,OA5DjjC5d,SAAS;AAAA;AA8Df;EAAA,QAAA6d,SAAA,oBAAAA,SAAA;AAAA;AAwCoB,IACd3e,aAAa;EAAnB,MAAMA,aAAa,CAAC;EAInBsX,2JAAA,CAJKtX,aAAa,wBAAAqgB,sBAAA5vB,CAAA;IAAA,YAAAA,CAAA,IACoFuP,aAAa;EAAA;EAAAsX,2JAAA,CAD9GtX,aAAa,8BArE0ElY,8DAAE;IAAAkB,IAAA,EAuESgX;EAAa;EAAAsX,2JAAA,CAF/GtX,aAAa,8BArE0ElY,8DAAE;IAAAi3B,OAAA,GAwEkCtR,yDAAY,EAAEQ,0DAAS,EAAEgR,oEAAc,EAAEC,sEAAe,EAAEF,sFAAuB;EAAA;EAAA,OAH5Mhf,aAAa;AAAA;AAKnB;EAAA,QAAA2e,SAAA,oBAAAA,SAAA;AAAA;;AASA;AACA;AACA","sources":["./src/app/components/file-browser/file-browser.component.ts","./src/app/components/file-browser/file-browser.component.html","./src/app/components/input/dropdown/input-dropdown.component.ts","./src/app/components/input/dropdown/input-dropdown.component.html","./src/app/components/input/file-browser/input-file-browser.component.ts","./src/app/components/input/file-browser/input-file-browser.component.html","./src/app/components/input/multi-file-browser/input-multi-file-browser.component.ts","./src/app/components/input/multi-file-browser/input-multi-file-browser.component.html","./src/app/components/input/multi-text/input-multi-text.component.ts","./src/app/components/input/multi-text/input-multi-text.component.html","./src/app/models/filebrowser.ts","./src/app/pages/settings/general/settings-general.component.ts","./src/app/pages/settings/general/settings-general.component.html","./src/app/pages/settings/library/settings-library.component.ts","./src/app/pages/settings/library/settings-library.component.html","./src/app/pages/settings/logging/settings-logging.component.ts","./src/app/pages/settings/logging/settings-logging.component.html","./src/app/pages/settings/namemapping/settings-namemapping.component.ts","./src/app/pages/settings/namemapping/settings-namemapping.component.html","./src/app/pages/settings/notification/settings-notification.component.ts","./src/app/pages/settings/notification/settings-notification.component.html","./src/app/pages/settings/postprocessing/settings-postprocessing.component.ts","./src/app/pages/settings/postprocessing/settings-postprocessing.component.html","./src/app/pages/settings/settings.routes.ts","./src/app/pages/settings/skipmapping/settings-skipmapping.component.ts","./src/app/pages/settings/skipmapping/settings-skipmapping.component.html","./src/app/pages/settings/subliminal/settings-subliminal.component.ts","./src/app/pages/settings/subliminal/settings-subliminal.component.html","./src/app/pages/settings/webserver/settings-webserver.component.ts","./src/app/pages/settings/webserver/settings-webserver.component.html","./src/app/services/api/filesystem.service.ts","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/primeng/fesm2022/primeng-listbox.mjs","./node_modules/primeng/fesm2022/primeng-message.mjs"],"sourcesContent":["import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, ElementRef, EventEmitter, inject, Input, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\r\nimport { SharedModule } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { TableModule } from 'primeng/table';\r\nimport { catchError, debounceTime, mergeMap, of } from 'rxjs';\r\nimport { appSettings } from '../../app-settings.service';\r\nimport { FileBrowserFile, FileBrowserFileType, FileBrowserResult } from '../../models/filebrowser';\r\nimport { FileSystemService } from '../../services/api/filesystem.service';\r\nimport { joinPaths, splitPathInChunks } from '../../utils/path-utils';\r\n\r\n@Component({\r\n  selector: 'app-file-browser',\r\n  templateUrl: './file-browser.component.html',\r\n  styleUrls: ['./file-browser.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, DialogModule, TableModule, ButtonModule, SharedModule, InputTextModule]\r\n})\r\nexport class FileBrowserComponent implements OnInit {\r\n\r\n  @ViewChildren('rowElement')\r\n  rowElements: QueryList<ElementRef<HTMLTableRowElement>>;\r\n\r\n  @Input()\r\n  visible = false;\r\n\r\n  @Output()\r\n  visibleChange = new EventEmitter<boolean>(); // Setup 2-way binding [(visible)]=\"...\"\r\n\r\n  @Input()\r\n  path = ''; // no path by default, if specified, the file browser will start to browse on this path\r\n\r\n  @Output()\r\n  pathChange = new EventEmitter<string>(); // Setup 2-way binding [(path)]=\"...\"\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  fileBrowserFiles: FileBrowserFile[];\r\n  selectedFile: FileBrowserFile;\r\n  //selectedFilePath: string;\r\n  selectedFilePath: UntypedFormControl;\r\n\r\n  private readonly FOLDER_UP = '...';\r\n\r\n  private fileBrowserResult: FileBrowserResult;\r\n  private fileBrowserPath: string;\r\n  private includeFiles = true;\r\n  private includeFolders = true;\r\n\r\n  private fileSystemService = inject(FileSystemService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    // In folder mode we don't want to select files, so do not include them\r\n    if (this.folderMode) {\r\n      this.includeFiles = false;\r\n    }\r\n    // Create and subscribe for selected file path changes\r\n    // Use debounceTime to prevent too much calls to backend while typing\r\n    // Use mergeMap to handle fast changes by typing in text field\r\n    // Proper error catching to make sure the subscribe does not break on error (f.e. when invalid path is typed)\r\n    this.selectedFilePath = new UntypedFormControl(this.path);\r\n    this.selectedFilePath.valueChanges.pipe(\r\n      debounceTime(500),\r\n      mergeMap((path) => this.fileSystemService.browse(path, this.includeFiles, this.includeFolders)),\r\n      catchError(() => of(null)),\r\n      takeUntilDestroyed(this.destroyRef)\r\n    ).subscribe({\r\n      next: (result) => this.loadFileBrowserResult(result)\r\n    });\r\n    // Trigger initial browse\r\n    this.fileSystemService.browse(this.path, this.includeFiles, this.includeFolders).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (result) => this.loadFileBrowserResult(result)\r\n    });\r\n  }\r\n\r\n  select(): void {\r\n    // Handle selection of file or folder\r\n    if (this.selectedFile.type === FileBrowserFileType.FOLDER) {\r\n      let folder = this.selectedFile.name;\r\n      if (folder === this.FOLDER_UP) {\r\n        const pathInChunks = splitPathInChunks(this.fileBrowserPath);\r\n        const parentFolderchunks = pathInChunks.slice(0, -1); // get parent folder path in chunks\r\n        // On Windows, if parent chunk is a drive letter (without \\) we clear the path to get the root path\r\n        if (parentFolderchunks.length === 1 && parentFolderchunks[0].match(/[A-Z]+:/)) {\r\n          folder = '';\r\n        } else {\r\n          // All other cases, join chunks together for parent path\r\n          folder = joinPaths(...parentFolderchunks);\r\n        }\r\n      } else {\r\n        folder = this.getFilePath(folder); // get complete path of the folder\r\n      }\r\n      this.selectedFilePath.setValue(folder);\r\n    } else {\r\n      this.selectedFilePath.setValue(this.getFilePath(this.selectedFile.name));\r\n    }\r\n  }\r\n\r\n  isFile(type: FileBrowserFileType): boolean {\r\n    return FileBrowserFileType.FILE === type;\r\n  }\r\n\r\n  isFolder(type: FileBrowserFileType): boolean {\r\n    return FileBrowserFileType.FOLDER === type;\r\n  }\r\n\r\n  isFolderUp(name: string): boolean {\r\n    return name === this.FOLDER_UP;\r\n  }\r\n\r\n  selectFile(): void {\r\n    this.pathChange.emit(this.selectedFilePath.value);\r\n    this.close();\r\n  }\r\n\r\n  close(): void {\r\n    this.visibleChange.emit(false);\r\n  }\r\n\r\n  private loadFileBrowserResult(fileBrowserResult: FileBrowserResult): void {\r\n    // Check if present as the result can be null after an catch of an error in the api call\r\n    if (fileBrowserResult) {\r\n      // Set browser result\r\n      this.fileBrowserResult = fileBrowserResult;\r\n      // Set filebrowser path\r\n      this.fileBrowserPath = this.fileBrowserResult.path;\r\n      // Determine previously selected file name\r\n      const selectedFileName = this.getSelectedFileName(this.selectedFilePath.value, this.fileBrowserPath);\r\n      // Build browser files\r\n      this.fileBrowserFiles = this.getFileBrowserFiles(this.fileBrowserResult, selectedFileName);\r\n      // Insert folder up at beginning when not at root level (empty on Windows, / on unix)\r\n      if (this.fileBrowserPath !== '' && this.fileBrowserPath !== '/') {\r\n        this.fileBrowserFiles.unshift(new FileBrowserFile(FileBrowserFileType.FOLDER, this.FOLDER_UP));\r\n      }\r\n      // scroll to previously selected file name\r\n      this.scrollToSelectedFileName(selectedFileName);\r\n    }\r\n  }\r\n\r\n  private getSelectedFileName(selectedFilePath: string, fileBrowserPath: string): string {\r\n    let selectedFileName = null;\r\n    if (selectedFilePath && fileBrowserPath) {\r\n      // The selected filename is the extra part after stripping the file browser path (which is always a folder) from the selected file path\r\n      selectedFileName = joinPaths(...splitPathInChunks(selectedFilePath).filter((part) => !splitPathInChunks(fileBrowserPath).includes(part)));\r\n    } else if (selectedFilePath) {\r\n      // If file browser path is empty, the selecte file path is the selected filename\r\n      selectedFileName = selectedFilePath;\r\n    }\r\n    return selectedFileName;\r\n  }\r\n\r\n  private getFileBrowserFiles(fileBrowserResult: FileBrowserResult, selectedFileName: string): FileBrowserFile[] {\r\n    const files: FileBrowserFile[] = [];\r\n    this.selectedFile = null;\r\n    // Add folders\r\n    fileBrowserResult.folders.forEach((folder) => files.push(new FileBrowserFile(FileBrowserFileType.FOLDER, folder)));\r\n    // Add files\r\n    fileBrowserResult.files.forEach((file) => {\r\n      const fileBrowserFile = new FileBrowserFile(FileBrowserFileType.FILE, file);\r\n      files.push(fileBrowserFile);\r\n      // If the file is the selected file, mark it as selected\r\n      if (file === selectedFileName) {\r\n        this.selectedFile = fileBrowserFile;\r\n      }\r\n    });\r\n    return files;\r\n  }\r\n\r\n  private scrollToSelectedFileName(selectedFileName: string): void {\r\n    // Find the selected file name (if available) in the rows and scroll to it\r\n    if (selectedFileName) {\r\n      setTimeout(() => {\r\n        // Find element based on data-id attribute\r\n        const row = this.rowElements.find((r) => r.nativeElement.getAttribute('data-id') === selectedFileName);\r\n        if (row) {\r\n          row.nativeElement.scrollIntoView({ inline: 'start', block: 'start' });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private getFilePath(path: string): string {\r\n    let fileBrowserPath = this.fileBrowserPath;\r\n    if (fileBrowserPath.endsWith(appSettings.pathSeparator)) {\r\n      // Make sure not to end up with double path separators, so remove trailing path separator if available\r\n      fileBrowserPath = fileBrowserPath.slice(0, -1);\r\n    }\r\n    return fileBrowserPath ? joinPaths(fileBrowserPath, path) : path;\r\n  }\r\n}\r\n","<!-- File browser dialog -->\r\n<p-dialog [(visible)]=\"visible\"\r\n          [modal]=\"true\"\r\n          [closable]=\"false\"\r\n          [resizable]=\"false\"\r\n          header=\"File browser\"\r\n          styleClass=\"dialog-file-browser\">\r\n  <!-- Selection -->\r\n  <p-table [value]=\"fileBrowserFiles\"\r\n           [(selection)]=\"selectedFile\"\r\n           [scrollable]=\"true\"\r\n           (onRowSelect)=\"select()\"\r\n           selectionMode=\"single\"\r\n           scrollHeight=\"50vh\"\r\n           styleClass=\"p-datatable-sm p-datatable-striped\">\r\n    <ng-template pTemplate=\"caption\">\r\n      <div class=\"caption w-100\">\r\n        <input type=\"text\" pInputText [formControl]=\"selectedFilePath\" class=\"p-inputtext-sm w-100\" placeholder=\"Select or type path\">\r\n      </div>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <th class=\"col-type\">Type</th>\r\n        <th class=\"col-name\">Name</th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-file>\r\n      <tr #rowElement [attr.data-id]=\"file.name\" [pSelectableRow]=\"file\">\r\n        <td class=\"col-type\">\r\n          <i *ngIf=\"isFolder(file.type) && isFolderUp(file.name)\" class=\"fa fa-level-up\" aria-hidden=\"true\" title=\"File\"></i>\r\n          <i *ngIf=\"isFolder(file.type) && !isFolderUp(file.name)\" class=\"fa fa-folder-o\" aria-hidden=\"true\" title=\"Folder\"></i>\r\n          <i *ngIf=\"isFile(file.type)\" class=\"fa fa-file-o\" aria-hidden=\"true\" title=\"File\"></i>\r\n        </td>\r\n        <td class=\"col-name\">{{file.name}}</td>\r\n      </tr>\r\n    </ng-template>\r\n  </p-table>\r\n  <!-- Buttons -->\r\n  <ng-template pTemplate=\"footer\">\r\n    <p-button icon=\"pi pi-times\" label=\"Cancel\" styleClass=\"p-button p-button-secondary\" (click)=\"close()\"></p-button>\r\n    <p-button icon=\"pi pi-check\" label=\"Ok\" styleClass=\"p-button mr-0\" (click)=\"selectFile()\"></p-button>\r\n  </ng-template>\r\n</p-dialog>\r\n","import { NgClass } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-dropdown',\r\n  templateUrl: './input-dropdown.component.html',\r\n  styleUrls: ['./input-dropdown.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputDropdownComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgClass, FormsModule, ReactiveFormsModule, DropdownModule]\r\n})\r\nexport class InputDropdownComponent extends InputComponent {\r\n\r\n  @Input()\r\n  options: SelectItem[];\r\n\r\n  override writeValue(obj: any): void {\r\n    super.writeValue(obj);\r\n    this.changeDetectorRef.detectChanges(); // p-dropdown makes changes to the input, so detect changes again to prevent ExpressionChangedAfterItHasBeenCheckedError\r\n  }\r\n\r\n  onDropDownChange(event: DropdownChangeEvent): void {\r\n    this.changeEvent.emit(event.originalEvent);\r\n  }\r\n}\r\n","<!-- Dropdown -->\r\n<p-dropdown [inputId]=\"id || formControlName\"\r\n            [formControl]=\"control\"\r\n            [options]=\"options\"\r\n            [ngClass]=\"validationClass\"\r\n            (onFocus)=\"onFocus($event)\"\r\n            (onChange)=\"onDropDownChange($event)\"\r\n            (onBlur)=\"onBlur($event)\"\r\n            styleClass=\"w-100\">\r\n</p-dropdown>\r\n","import { NgClass, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileBrowserComponent } from '../../file-browser/file-browser.component';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-file-browser',\r\n  templateUrl: './input-file-browser.component.html',\r\n  styleUrls: ['./input-file-browser.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputFileBrowserComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, ButtonModule, FileBrowserComponent]\r\n})\r\nexport class InputFileBrowserComponent extends InputComponent {\r\n\r\n  @Input()\r\n  path = ''; // no path by default, if specified, the file browser will always start to browse on this path\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  @Input()\r\n  placeholder = '';\r\n\r\n  showFileBrowser = false;\r\n  browserPath = '';\r\n\r\n  openFileBrowser(): void {\r\n    this.browserPath = this.path || this.control.value || ''; // use fixed path, path from input field or empty if not specified\r\n    this.showFileBrowser = true;\r\n  }\r\n\r\n  setFilePath(filePath: string): void {\r\n    this.control.setValue(filePath);\r\n  }\r\n}\r\n","<!-- Input text -->\r\n<div class=\"p-inputgroup\">\r\n  <input pInputText\r\n         type=\"text\"\r\n         [id]=\"id || formControlName\"\r\n         [formControl]=\"control\"\r\n         [placeholder]=\"placeholder\"\r\n         [ngClass]=\"validationClass\"\r\n         (focus)=\"onFocus($event)\"\r\n         (keydown)=\"onKeyDown($event)\"\r\n         (keyup)=\"onKeyUp($event)\"\r\n         (change)=\"onChange($event)\"\r\n         (blur)=\"onBlur($event)\"\r\n         class=\"w-100\">\r\n  <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser()\"></p-button>\r\n</div>\r\n<!-- File browser -->\r\n<app-file-browser *ngIf=\"showFileBrowser\"\r\n                  [(visible)]=\"showFileBrowser\"\r\n                  [path]=\"browserPath\"\r\n                  [folderMode]=\"folderMode\"\r\n                  (pathChange)=\"setFilePath($event)\">\r\n</app-file-browser>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileBrowserComponent } from '../../file-browser/file-browser.component';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-multi-file-browser',\r\n  templateUrl: './input-multi-file-browser.component.html',\r\n  styleUrls: ['./input-multi-file-browser.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputMultiFileBrowserComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, ButtonModule, FileBrowserComponent]\r\n})\r\nexport class InputMultiFileBrowserComponent extends InputComponent {\r\n\r\n  @Input()\r\n  folderMode = false; // default no folder mode (folder mode means selecting folders instead of files)\r\n\r\n  showFileBrowser = false;\r\n  addButtonDisabled = true;\r\n  browserPath = '';\r\n  browserIndex = -1;\r\n  newValue: string;\r\n\r\n  get values(): string[] {\r\n    return this.control ? this.control.value : [];\r\n  }\r\n\r\n  // Required to only update single value inside array (https://angular.io/api/core/TrackByFunction) and do not refresh complete array\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  trackValueByIndex(index: number, value: string): number {\r\n    return index;\r\n  }\r\n\r\n  onValueKeyup(event: KeyboardEvent, originalValue: string): void {\r\n    // Replace original value with change value\r\n    const changedValue = (event.target as HTMLInputElement).value;\r\n    if (changedValue && changedValue.trim()) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  removeValue(value: string): void {\r\n    // Remove value\r\n    this.control.setValue(this.values.filter((val) => val !== value));\r\n  }\r\n\r\n  onNewValueKeyup(event: KeyboardEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    if (value && value.trim()) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  addNewValue(): void {\r\n    // Add new value\r\n    if (this.newValue) {\r\n      if (!this.values.includes(this.newValue.trim())) {\r\n        this.control.setValue(this.values.concat(this.newValue.trim()));\r\n      }\r\n      this.newValue = ''; // clear new value\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  openFileBrowser(path: string, index: number): void {\r\n    this.browserPath = path || '';\r\n    this.browserIndex = index;\r\n    this.showFileBrowser = true;\r\n  }\r\n\r\n  setFilePath(filePath: string): void {\r\n    if (this.browserIndex >= 0) {\r\n      this.values[this.browserIndex] = filePath.trim();\r\n    } else {\r\n      this.values.push(filePath.trim());\r\n    }\r\n    this.control.setValue(this.values);\r\n  }\r\n}\r\n","<!-- Input multi text -->\r\n<div class=\"input-multi-text\">\r\n  <!-- Existing fields -->\r\n  <div class=\"p-inputgroup\" *ngFor=\"let value of values; let i=index; trackBy:trackValueByIndex\">\r\n    <div class=\"p-inputgroup\">\r\n      <input type=\"text\" pInputText [id]=\"(id || formControlName) + i\" [value]=\"value\" (keyup)=\"onValueKeyup($event, value)\">\r\n      <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser(value, i)\"></p-button>\r\n      <p-button icon=\"pi pi-times\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"removeValue(value)\"></p-button>\r\n    </div>\r\n  </div>\r\n  <!-- New field -->\r\n  <div class=\"p-inputgroup\">\r\n    <div class=\"p-inputgroup\">\r\n      <input type=\"text\" pInputText [id]=\"(id || formControlName) + 'New'\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (keyup)=\"onNewValueKeyup($event)\" placeholder=\"New value\">\r\n      <p-button icon=\"pi pi-folder-open\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"openFileBrowser(newValue, -1)\"></p-button>\r\n      <p-button icon=\"pi pi-plus\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"addNewValue()\" [disabled]=\"addButtonDisabled\"></p-button>\r\n    </div>\r\n  </div>\r\n  <!-- File browser -->\r\n  <app-file-browser *ngIf=\"showFileBrowser\"\r\n                    [(visible)]=\"showFileBrowser\"\r\n                    [path]=\"browserPath\"\r\n                    [folderMode]=\"folderMode\"\r\n                    (pathChange)=\"setFilePath($event)\">\r\n  </app-file-browser>\r\n  <!-- Hidden input -->\r\n  <input type=\"hidden\" [id]=\"id || formControlName\" [formControl]=\"control\">\r\n</div>\r\n","import { NgClass, NgFor, NgIf } from '@angular/common';\r\nimport { Component, forwardRef, Input } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownChangeEvent, DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputComponent } from '../input.component';\r\n\r\n@Component({\r\n  selector: 'app-input-multi-text',\r\n  templateUrl: './input-multi-text.component.html',\r\n  styleUrls: ['./input-multi-text.component.scss'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputMultiTextComponent),\r\n    multi: true\r\n  }],\r\n  standalone: true,\r\n  imports: [NgIf, NgFor, NgClass, FormsModule, ReactiveFormsModule, InputTextModule, DropdownModule, ButtonModule]\r\n})\r\nexport class InputMultiTextComponent extends InputComponent {\r\n\r\n  @Input()\r\n  options: SelectItem[]; // optional list of options to select from\r\n\r\n  newValue: string;\r\n\r\n  addButtonDisabled = true;\r\n\r\n  get values(): string[] {\r\n    return this.control ? this.control.value : [];\r\n  }\r\n\r\n  // Required to only update single value inside array (https://angular.io/api/core/TrackByFunction) and do not refresh complete array\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  trackValueByIndex(index: number, value: string): number {\r\n    return index;\r\n  }\r\n\r\n  onValueChange(event: DropdownChangeEvent, originalValue: string): void { // event model exposed by p-dropdown onchange\r\n    // Replace original value with change value\r\n    const changedValue = event.value;\r\n    if (changedValue) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  onValueKeyup(event: KeyboardEvent, originalValue: string): void {\r\n    // Replace original value with change value\r\n    const changedValue = (event.target as HTMLInputElement).value;\r\n    if (changedValue && changedValue.trim()) {\r\n      this.control.setValue(this.values.map((val) => val === originalValue ? changedValue.trim() : val));\r\n    }\r\n  }\r\n\r\n  removeValue(value: string): void {\r\n    // Remove value\r\n    this.control.setValue(this.values.filter((val) => val !== value));\r\n  }\r\n\r\n  onNewValueChange(event: DropdownChangeEvent): void { // event model exposed by p-dropdown onchange\r\n    if (event.value) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  onNewValueKeyup(event: KeyboardEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    if (value && value.trim()) {\r\n      this.addButtonDisabled = false;\r\n    } else {\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n\r\n  addNewValue(): void {\r\n    // Add new value\r\n    if (this.newValue) {\r\n      if (!this.values.includes(this.newValue.trim())) {\r\n        this.control.setValue(this.values.concat(this.newValue.trim()));\r\n      }\r\n      this.newValue = ''; // clear new value\r\n      this.addButtonDisabled = true;\r\n    }\r\n  }\r\n}\r\n","<!-- Input multi text -->\r\n<div class=\"input-multi-text\">\r\n  <!-- Existing fields -->\r\n  <div class=\"p-inputgroup\" *ngFor=\"let value of values; let i=index; trackBy:trackValueByIndex\">\r\n    <p-dropdown *ngIf=\"options\" [inputId]=\"(id || formControlName) + i\" [options]=\"options\" [ngModel]=\"value\" (onChange)=\"onValueChange($event, value)\" styleClass=\"w-100\"></p-dropdown>\r\n    <input *ngIf=\"!options\" type=\"text\" pInputText [id]=\"(id || formControlName) + i\" [value]=\"value\" (keyup)=\"onValueKeyup($event, value)\">\r\n    <p-button icon=\"pi pi-times\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"removeValue(value)\"></p-button>\r\n  </div>\r\n  <!-- New field -->\r\n  <div class=\"p-inputgroup\">\r\n    <p-dropdown *ngIf=\"options\" [inputId]=\"(id || formControlName) + 'New'\" [options]=\"options\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (onChange)=\"onNewValueChange($event)\" styleClass=\"w-100\"></p-dropdown>\r\n    <input *ngIf=\"!options\" type=\"text\" pInputText [id]=\"(id || formControlName) + 'New'\" [(ngModel)]=\"newValue\" [ngClass]=\"validationClass\" (keyup)=\"onNewValueKeyup($event)\" placeholder=\"New value\">\r\n    <p-button icon=\"pi pi-plus\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"addNewValue()\" [disabled]=\"addButtonDisabled\"></p-button>\r\n  </div>\r\n  <!-- Hidden input -->\r\n  <input type=\"hidden\" [id]=\"id || formControlName\" [formControl]=\"control\">\r\n</div>\r\n","export class FileBrowserResult {\r\n  files: string[];\r\n  folders: string[];\r\n  path: string;\r\n}\r\n\r\nexport enum FileBrowserFileType {\r\n  FILE = 'file',\r\n  FOLDER = 'folder'\r\n}\r\n\r\nexport class FileBrowserFile {\r\n  type: FileBrowserFileType;\r\n  name: string;\r\n\r\n  constructor(type: FileBrowserFileType, name: string) {\r\n    this.type = type;\r\n    this.name = name;\r\n  }\r\n}\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputFileBrowserComponent } from '../../../components/input/file-browser/input-file-browser.component';\r\nimport { InputMultiFileBrowserComponent } from '../../../components/input/multi-file-browser/input-multi-file-browser.component';\r\nimport { InputMultiTextComponent } from '../../../components/input/multi-text/input-multi-text.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { GeneralSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\nimport { FormValidators } from '../../../utils/form-validators';\r\n\r\n@Component({\r\n  selector: 'app-settings-general',\r\n  templateUrl: './settings-general.component.html',\r\n  styleUrls: ['./settings-general.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, PanelModule, FormsModule, ReactiveFormsModule, ButtonModule, IconDropdownComponent, InputMultiFileBrowserComponent, InputDropdownComponent, InputMultiTextComponent, InputNumberComponent, InputFileBrowserComponent]\r\n})\r\nexport class SettingsGeneralComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  scanDiskIntervalDefault: number;\r\n  checkSubIntervalDefault: number;\r\n  checkSubDeadlineDefault: number;\r\n  checkSubDeltaDefault: number;\r\n  checkVersionIntervalDefault: number;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  languages: SelectItem[];\r\n  timestampFormats: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.initDefaults();\r\n    this.buildSelectItems();\r\n    this.settingsService.getGeneralSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (generalSettings) => {\r\n        this.buildForm(generalSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the general settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateGeneralSettings(this.getGeneralSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('General settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the general settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  showFfmpegPath(): boolean {\r\n    // FFMPEG is required for manualSubSync\r\n    return FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSubSync');\r\n  }\r\n\r\n  private initDefaults(): void {\r\n    this.scanDiskIntervalDefault = appSettings.scanDiskIntervalDefault;\r\n    this.checkSubIntervalDefault = appSettings.checkSubIntervalDefault;\r\n    this.checkSubDeadlineDefault = appSettings.checkSubDeadlineDefault;\r\n    this.checkSubDeltaDefault = appSettings.checkSubDeltaDefault;\r\n    this.checkVersionIntervalDefault = appSettings.checkVersionIntervalDefault;\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Languages\r\n    this.languages = [];\r\n    this.languages.push({ label: 'Select a language', value: '' });\r\n    appSettings.languages.forEach((language) => this.languages.push({ label: language.name, value: language.code }));\r\n    // Timestamp formats (python strftime() formats)\r\n    this.timestampFormats = [];\r\n    this.timestampFormats.push({ label: 'YYYY-MM-DD HH:MM:SS', value: '%Y-%m-%d %H:%M:%S' });\r\n    this.timestampFormats.push({ label: 'MM-DD-YYYY HH:MM:SS', value: '%m-%d-%Y %H:%M:%S' });\r\n    this.timestampFormats.push({ label: 'DD-MM-YYYY HH:MM:SS', value: '%d-%m-%Y %H:%M:%S' });\r\n  }\r\n\r\n  private buildForm(generalSettings: GeneralSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      videoPaths: [generalSettings.videoPaths || [], [Validators.required, FormValidators.notEmpty]],\r\n      defaultLanguage: [generalSettings.defaultLanguage, [Validators.required]],\r\n      defaultLanguageSuffix: [generalSettings.defaultLanguageSuffix, [Validators.required]],\r\n      additionalLanguages: [generalSettings.additionalLanguages || [], []],\r\n      manualSearchWithScoring: [generalSettings.manualSearchWithScoring, [Validators.required]],\r\n      scanDiskInterval: [generalSettings.scanDiskInterval, [Validators.required]],\r\n      scanDiskAtStartup: [generalSettings.scanDiskAtStartup, [Validators.required]],\r\n      checkSubInterval: [generalSettings.checkSubInterval, [Validators.required]],\r\n      checkSubAtStartup: [generalSettings.checkSubAtStartup, [Validators.required]],\r\n      checkSubDeadline: [generalSettings.checkSubDeadline, [Validators.required]],\r\n      checkSubDelta: [generalSettings.checkSubDelta, [Validators.required]],\r\n      checkVersionInterval: [generalSettings.checkVersionInterval, [Validators.required]],\r\n      checkVersionAtStartup: [generalSettings.checkVersionAtStartup, [Validators.required]],\r\n      checkVersionAutoUpdate: [generalSettings.checkVersionAutoUpdate, [Validators.required]],\r\n      scanEmbeddedSubs: [generalSettings.scanEmbeddedSubs, [Validators.required]],\r\n      scanHardcodedSubs: [generalSettings.scanHardcodedSubs, [Validators.required]],\r\n      skipHiddenDirs: [generalSettings.skipHiddenDirs, [Validators.required]],\r\n      detectInvalidSubLanguage: [generalSettings.detectInvalidSubLanguage, [Validators.required]],\r\n      detectedLanguageProbability: [generalSettings.detectedLanguageProbability * 100, [Validators.required]], // as percentage\r\n      manualSubSync: [generalSettings.manualSubSync, [Validators.required]],\r\n      ffmpegPath: [generalSettings.ffmpegPath, []],\r\n      minVideoFileSize: [generalSettings.minVideoFileSize, [Validators.required]],\r\n      maxDbResults: [generalSettings.maxDbResults, [Validators.required]],\r\n      timestampFormat: [generalSettings.timestampFormat, [Validators.required]]\r\n    }, { validator: this.globalFormValidator });\r\n  }\r\n\r\n  private globalFormValidator(formGroup: UntypedFormGroup): ValidationErrors | null {\r\n    // Return error ffmpegPath is not filled in when manualSubSync is enabled\r\n    const error: ValidationErrors = { ffmpegPathRequired: true };\r\n    const ffmpegPath = FormUtils.getFormControlValue<string>(formGroup, 'ffmpegPath');\r\n    if (FormUtils.getFormControlValue<boolean>(formGroup, 'manualSubSync') && (!ffmpegPath || !ffmpegPath.trim())) {\r\n      FormUtils.addFormControlValidationErrors(formGroup.controls['ffmpegPath'], error);\r\n      FormUtils.markFormControlFieldsAsDirty(formGroup);\r\n      return error;\r\n    }\r\n    FormUtils.clearFormControlValidationErrors(formGroup.controls['ffmpegPath'], error);\r\n    return null;\r\n  }\r\n\r\n  private getGeneralSettings(): GeneralSettings {\r\n    const settings = new GeneralSettings();\r\n    settings.videoPaths = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'videoPaths');\r\n    settings.defaultLanguage = FormUtils.getFormControlValue<string>(this.settingsForm, 'defaultLanguage');\r\n    settings.defaultLanguageSuffix = FormUtils.getFormControlValue<string>(this.settingsForm, 'defaultLanguageSuffix');\r\n    settings.additionalLanguages = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'additionalLanguages');\r\n    settings.manualSearchWithScoring = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSearchWithScoring');\r\n    settings.scanDiskInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'scanDiskInterval');\r\n    settings.scanDiskAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanDiskAtStartup');\r\n    settings.checkSubInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubInterval');\r\n    settings.checkSubAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkSubAtStartup');\r\n    settings.checkSubDeadline = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubDeadline');\r\n    settings.checkSubDelta = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkSubDelta');\r\n    settings.checkVersionInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'checkVersionInterval');\r\n    settings.checkVersionAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkVersionAtStartup');\r\n    settings.checkVersionAutoUpdate = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'checkVersionAutoUpdate');\r\n    settings.scanEmbeddedSubs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanEmbeddedSubs');\r\n    settings.scanHardcodedSubs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanHardcodedSubs');\r\n    settings.skipHiddenDirs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'skipHiddenDirs');\r\n    settings.detectInvalidSubLanguage = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'detectInvalidSubLanguage');\r\n    settings.detectedLanguageProbability = FormUtils.getFormControlValue<number>(this.settingsForm, 'detectedLanguageProbability') / 100; // percentage as decimal number\r\n    settings.manualSubSync = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualSubSync');\r\n    settings.ffmpegPath = FormUtils.getFormControlValue<string>(this.settingsForm, 'ffmpegPath');\r\n    settings.minVideoFileSize = FormUtils.getFormControlValue<number>(this.settingsForm, 'minVideoFileSize');\r\n    settings.maxDbResults = FormUtils.getFormControlValue<number>(this.settingsForm, 'maxDbResults');\r\n    settings.timestampFormat = FormUtils.getFormControlValue<string>(this.settingsForm, 'timestampFormat');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"General settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Video paths -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"videoPaths\" class=\"label\">Video paths</label>\r\n          <app-icon-dropdown>\r\n            <li>The folders where your videos are located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-file-browser formControlName=\"videoPaths\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-multi-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Default language -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"defaultLanguage\" class=\"label\">Default language</label>\r\n          <app-icon-dropdown>\r\n            <li>The default subtitle language.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"defaultLanguage\" [options]=\"languages\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Default language suffix -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"defaultLanguageSuffix\" class=\"label\">Default language suffix</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the default subtitle will be extended with the language code (f.e. showname.en.srt).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"defaultLanguageSuffix\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Additional languages -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"additionalLanguages\" class=\"label\">Additional languages</label>\r\n          <app-icon-dropdown>\r\n            <li>The addditional subtitle languages in alpha2 or ietf format.</li>\r\n            <li>If additional languages are provided, subtitles will be extended with the language code (f.e. showname.en.srt).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"additionalLanguages\" [options]=\"languages\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Manual search with scoring -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualSearchWithScoring\" class=\"label\">Manual search with scoring</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, only subtitles matching the minimum default score will be returned.</li>\r\n            <li>When disabled, all found subtitles will be returned.</li>\r\n            <li>REMARK: Disable it at your own risk because it might return even unrelated subtitles!</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualSearchWithScoring\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan disk interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanDiskInterval\" class=\"label\">Disk scan interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Disk scan interval of the ScanDisk thread. It scans the disk for missing subtitle files.</li>\r\n            <li>Cannot be set lower then {{scanDiskIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"scanDiskInterval\" [min]=\"scanDiskIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Scan disk at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanDiskAtStartup\" class=\"label\">Disk scan at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the ScanDisk thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the disk scan interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanDiskAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubInterval\" class=\"label\">Subtitle check interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check interval of the CheckSub thread. It checks if there is a match on the configured subliminal providers.</li>\r\n            <li>Cannot be set lower then {{checkSubIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubInterval\" [min]=\"checkSubIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubAtStartup\" class=\"label\">Subtitle check at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the CheckSub thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the subtitle check interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkSubAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub deadline -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubDeadline\" class=\"label\">Subtitle check deadline</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check deadline in weeks for checking subtitles on daily basis.</li>\r\n            <li>After this deadline, the daily search is replaced by a search every X week(s), defined by the parameter below.</li>\r\n            <li>Cannot be set lower than {{checkSubDeadlineDefault}} week(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubDeadline\" [min]=\"checkSubDeadlineDefault\" suffix=\" week(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check sub delta -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkSubDelta\" class=\"label\">Subtitle check delta</label>\r\n          <app-icon-dropdown>\r\n            <li>Subtitle check delta in days for checking subtitles after deadline.</li>\r\n            <li>After the deadline (parameter above) is passed, a subtitle is search every X day(s), defined by this parameter.</li>\r\n            <li>Cannot be set lower than {{checkSubDeltaDefault}} day(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkSubDelta\" [min]=\"checkSubDeltaDefault\" suffix=\" day(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check version interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionInterval\" class=\"label\">Version check interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Version check interval of the CheckVersion thread. It checks if there is a new version available.</li>\r\n            <li> Cannot be set lower then {{checkVersionIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"checkVersionInterval\" [min]=\"checkVersionIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Check version at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionAtStartup\" class=\"label\">Version check at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the CheckVersion thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the version check interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkVersionAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Check version auto update -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"checkVersionAutoUpdate\" class=\"label\">Version check auto update</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the version check will also try to auto update the system.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"checkVersionAutoUpdate\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan embedded subs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanEmbeddedSubs\" class=\"label\">Scan for embedded subtitles</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the video files will be scanned for embedded subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanEmbeddedSubs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Scan hardcoded subs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanHardcodedSubs\" class=\"label\">Scan for hardcoded subtitles</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the video files will be scanned for hardcoded subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanHardcodedSubs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Skip hidden dirs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipHiddenDirs\" class=\"label\">Skip hidden directories</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also hidden directories (directories that start with a dot, f.e. .config) are scanned.</li>\r\n            <li>REMARK: Doesn't work for Windows style hidden directories.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"skipHiddenDirs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Detect invalid sub language -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"detectInvalidSubLanguage\" class=\"label\">Detect invalid subtitle</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the language of a subtitle, without a language suffix, will be detected.</li>\r\n            <li>If the language does not match the default language, the subtitle will be deleted from the system in order to search a new one.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"detectInvalidSubLanguage\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Detected language probabibility -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"detectedLanguageProbability\" class=\"label\">Language detection probability</label>\r\n          <app-icon-dropdown>\r\n            <li>The minimum required probability for the invalid language detection functionality.</li>\r\n            <li>The probability must be at least this value before the language is accepted as the detected language of the subtitle.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"detectedLanguageProbability\" [min]=\"1\" [max]=\"100\" suffix=\" %\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Manual sub sync -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualSubSync\" class=\"label\">Manual subtitle synchronization</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the manual search will have the option to synchronize a subtitle.</li>\r\n            <li>REMARK: This requires ffmpeg (https://www.ffmpeg.org/download.html) to be installed on your system.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualSubSync\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- FFMPEG path -->\r\n      <div class=\"row form-row\" *ngIf=\"showFfmpegPath()\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"ffmpegPath\" class=\"label\">FFMPEG path</label>\r\n          <app-icon-dropdown>\r\n            <li>The directory where the FFMPEG executable is located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"ffmpegPath\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!--Min video file size -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"minVideoFileSize\" class=\"label\">Min video file size</label>\r\n          <app-icon-dropdown>\r\n            <li>The mininum file size in MB that a video must be before it's including in the scanning.</li>\r\n            <li>Files with a size lower than this value will be ignored in the scanning.</li>\r\n            <li>Use 0 to disable this limit.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"minVideoFileSize\" [min]=\"0\" suffix=\" MB\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!--Max db results -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"maxDbResults\" class=\"label\">Max db results</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum number of results returned from the database.</li>\r\n            <li>Use 0 to return all the results.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"maxDbResults\" mode=\"decimal\" [min]=\"0\" suffix=\" results\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Timestamp format -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"timestampFormat\" class=\"label\">Timestamp format</label>\r\n          <app-icon-dropdown>\r\n            <li>The format in which timestamps are displayed.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"timestampFormat\" [options]=\"timestampFormats\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputMultiFileBrowserComponent } from '../../../components/input/multi-file-browser/input-multi-file-browser.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { LibrarySettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-library',\r\n  templateUrl: './settings-library.component.html',\r\n  styleUrls: ['./settings-library.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputDropdownComponent, InputMultiFileBrowserComponent, InputNumberComponent]\r\n})\r\nexport class SettingsLibraryComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  scanLibraryIntervalDefault: number;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.initDefaults();\r\n    this.buildSelectItems();\r\n    this.settingsService.getLibrarySettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (librarySettings) => {\r\n        this.buildForm(librarySettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the library settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateLibrarySettings(this.getLibrarySettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Library settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the library settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private initDefaults(): void {\r\n    this.scanLibraryIntervalDefault = appSettings.scanLibraryIntervalDefault;\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(librarySettings: LibrarySettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      libraryMode: [librarySettings.libraryMode, [Validators.required]],\r\n      libraryPaths: [librarySettings.libraryPaths || [], []],\r\n      scanLibraryInterval: [librarySettings.scanLibraryInterval, [Validators.required]],\r\n      scanLibraryAtStartup: [librarySettings.scanLibraryAtStartup, [Validators.required]],\r\n      libraryEditMode: [librarySettings.libraryEditMode, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getLibrarySettings(): LibrarySettings {\r\n    const settings = new LibrarySettings();\r\n    settings.libraryMode = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'libraryMode');\r\n    settings.libraryPaths = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'libraryPaths');\r\n    settings.scanLibraryInterval = FormUtils.getFormControlValue<number>(this.settingsForm, 'scanLibraryInterval');\r\n    settings.scanLibraryAtStartup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'scanLibraryAtStartup');\r\n    settings.libraryEditMode = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'libraryEditMode');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Log settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Library mode -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryMode\" class=\"label\">Library mode</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a libraryscanner thread will be enabled to scan your complete library.</li>\r\n            <li>This will enable a new menu link 'Library' from which you can view your complete library.</li>\r\n            <li>ATTENTION: this may cause a very long disk scan if your library is very big!</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"libraryMode\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Library paths -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryPaths\" class=\"label\">Library paths</label>\r\n          <app-icon-dropdown>\r\n            <li>The folders where your show/movie libraries are located.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-file-browser formControlName=\"libraryPaths\" [folderMode]=\"true\" [validationFeedback]=\"saveAttempt\"></app-input-multi-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Scan library interval -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanLibraryInterval\" class=\"label\">Library scan interval</label>\r\n          <app-icon-dropdown>\r\n            <li>Library scan interval of the ScanLibrary thread. It scans the complete library for generating an overview.</li>\r\n            <li>Cannot not be set lower then {{scanLibraryIntervalDefault}} hour(s).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"scanLibraryInterval\" [min]=\"scanLibraryIntervalDefault\" suffix=\" hour(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Scan library at startup -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"scanLibraryAtStartup\" class=\"label\">Scan library at startup</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the ScanLibrary thread will run immediately at startup.</li>\r\n            <li>If not, it will run the first time after the library scan interval.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"scanLibraryAtStartup\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Library edit mode -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"libraryEditMode\" class=\"label\">Library edit mode</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, edit functionality is enabled in the libraries.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"libraryEditMode\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { LogSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\nimport { FormValidators } from '../../../utils/form-validators';\r\n\r\n@Component({\r\n  selector: 'app-settings-logging',\r\n  templateUrl: './settings-logging.component.html',\r\n  styleUrls: ['./settings-logging.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputTextComponent, InputDropdownComponent, InputNumberComponent]\r\n})\r\nexport class SettingsLoggingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  logLevels: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getLogSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (logSettings) => {\r\n        this.buildForm(logSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the log settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateLogSettings(this.getLogSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Log settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the log settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Log levels (value corresponds to python log level)\r\n    this.logLevels = [];\r\n    this.logLevels.push({ label: 'Debug', value: 10 });\r\n    this.logLevels.push({ label: 'Info', value: 20 });\r\n    this.logLevels.push({ label: 'Warning', value: 30 });\r\n    this.logLevels.push({ label: 'Error', value: 40 });\r\n    this.logLevels.push({ label: 'Critical', value: 50 });\r\n  }\r\n\r\n  private buildForm(logSettings: LogSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      logFile: [logSettings.logFile, [Validators.required, FormValidators.notEmpty]],\r\n      logLevel: [logSettings.logLevel, [Validators.required]],\r\n      logNum: [logSettings.logNum, [Validators.required]],\r\n      logSize: [logSettings.logSize, [Validators.required]],\r\n      logHttpAccess: [logSettings.logHttpAccess, [Validators.required]],\r\n      logExternalLibs: [logSettings.logExternalLibs, [Validators.required]],\r\n      logDetailedFormat: [logSettings.logDetailedFormat, [Validators.required]],\r\n      logReversed: [logSettings.logReversed, [Validators.required]],\r\n      logLevelConsole: [logSettings.logLevelConsole, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getLogSettings(): LogSettings {\r\n    const settings = new LogSettings();\r\n    settings.logFile = FormUtils.getFormControlValue<string>(this.settingsForm, 'logFile');\r\n    settings.logLevel = FormUtils.getFormControlValue<number>(this.settingsForm, 'logLevel');\r\n    settings.logNum = FormUtils.getFormControlValue<number>(this.settingsForm, 'logNum');\r\n    settings.logSize = FormUtils.getFormControlValue<number>(this.settingsForm, 'logSize');\r\n    settings.logHttpAccess = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logHttpAccess');\r\n    settings.logExternalLibs = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logExternalLibs');\r\n    settings.logDetailedFormat = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logDetailedFormat');\r\n    settings.logReversed = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'logReversed');\r\n    settings.logLevelConsole = FormUtils.getFormControlValue<number>(this.settingsForm, 'logLevelConsole');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Log settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Log file -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logFile\" class=\"label\">Logfile name</label>\r\n          <app-icon-dropdown>\r\n            <li>The location and the name of the logfile.</li>\r\n            <li>When not set, AutoSubliminal.log will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"logFile\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Log level -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logLevel\" class=\"label\">Log level</label>\r\n          <app-icon-dropdown>\r\n            <li>The level of logging in the logfile.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logLevel\" [options]=\"logLevels\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log num -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logNum\" class=\"label\">Number of backup log files</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum number of backup log files.</li>\r\n            <li>Use 0 for no backup log files.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"logNum\" [min]=\"0\" suffix=\" file(s)\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Log size -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logSize\" class=\"label\">Log size</label>\r\n          <app-icon-dropdown>\r\n            <li>The maximum size of the log file(s) in MB.</li>\r\n            <li>Use 0 for unlimited size.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"logSize\" [min]=\"0\" suffix=\" MB\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Log http access -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logHttpAccess\" class=\"label\">Log HTTP access</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also http access calls will be logged.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logHttpAccess\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log external libs -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logExternalLibs\" class=\"label\">Log external libs</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, also external libs will be logged.</li>\r\n            <li>This only works in combination with the 'Log detailed format' option.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logExternalLibs\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log detailed format -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logDetailedFormat\" class=\"label\">Log detailed format</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the detailed log format will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logDetailedFormat\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log reversed -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logReversed\" class=\"label\">Log reversed</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the log output will be shown in reversed order (newest at the top) in the application.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logReversed\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Log level console -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"logLevelConsole\" class=\"label\">Console log level</label>\r\n          <app-icon-dropdown>\r\n            <li>The level of logging in the console output.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"logLevelConsole\" [options]=\"logLevels\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputMultiTextComponent } from '../../../components/input/multi-text/input-multi-text.component';\r\nimport { NameMappingSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-namemapping',\r\n  templateUrl: './settings-namemapping.component.html',\r\n  styleUrls: ['./settings-namemapping.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, MessageModule, IconDropdownComponent, InputMultiTextComponent]\r\n})\r\nexport class SettingsNamemappingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.getNameMappingSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (nameMappingSettings) => {\r\n        this.buildForm(nameMappingSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the namemapping settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateNameMappingSettings(this.getNameMappingSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Namemapping settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the namemapping settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildForm(nameMappingSettings: NameMappingSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      showNameMapping: [nameMappingSettings.showNameMapping || [], []],\r\n      addic7edShowNameMapping: [nameMappingSettings.addic7edShowNameMapping || [], []],\r\n      alternativeShowNameMapping: [nameMappingSettings.alternativeShowNameMapping || [], []],\r\n      movieNameMapping: [nameMappingSettings.movieNameMapping || [], []],\r\n      alternativeMovieNameMapping: [nameMappingSettings.alternativeMovieNameMapping || [], []]\r\n    });\r\n  }\r\n\r\n  private getNameMappingSettings(): NameMappingSettings {\r\n    const settings = new NameMappingSettings();\r\n    settings.showNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'showNameMapping');\r\n    settings.addic7edShowNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'addic7edShowNameMapping');\r\n    settings.alternativeShowNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'alternativeShowNameMapping');\r\n    settings.movieNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'movieNameMapping');\r\n    settings.alternativeMovieNameMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'alternativeMovieNameMapping');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Namemapping settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Use the namemapping at own risk! Incorrect use of the namemapping may result in subtitles not being found!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showNameMapping\" class=\"label\">Name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local show name mapping to the TVDB ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = 12345</li>\r\n            <li>Show name 2 = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"showNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edShowNameMapping\" class=\"label\">Addic7ed name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local show name mapping to the Addic7ed ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = 12345</li>\r\n            <li>Show name 2 = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"addic7edShowNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Alternative show name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"alternativeShowNameMapping\" class=\"label\">Alternative name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>List the alternative names of a show to increase subtitle matching.</li>\r\n            <li>Examples:</li>\r\n            <li>Show name = Show name alternative 1a,Show name alternative 1b</li>\r\n            <li>Show name 2 = Show name 2a</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"alternativeShowNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Movie name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"movieNameMapping\" class=\"label\">Name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The local movie name mapping to the IMDB ID.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title (year) = 12345</li>\r\n            <li>Movie title 2 (year) = 123456</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"movieNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Alternative movie name mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"alternativeMovieNameMapping\" class=\"label\">Alternative name mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>List the alternative titles of a movie to increase subtitle matching.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title = Movie title alternative 1a,Movie title alternative 1b</li>\r\n            <li>Movie title 2 = Movie title 2a</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"alternativeMovieNameMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { NotificationSettings, TwitterRegistration } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-notification',\r\n  templateUrl: './settings-notification.component.html',\r\n  styleUrls: ['./settings-notification.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, DialogModule, InputTextModule, MessageModule, IconDropdownComponent, InputDropdownComponent, InputTextComponent, InputNumberComponent]\r\n})\r\nexport class SettingsNotificationComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  growlProwlPriorities: SelectItem[];\r\n\r\n  twitterRegistration: TwitterRegistration;\r\n  twitterRegistrationDialog = false;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getNotificationSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (notificationSettings) => {\r\n        this.buildForm(notificationSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the notification settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateNotificationSettings(this.getNotificationSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Notification settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the notification settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  test(notifierName: string): void {\r\n    this.settingsService.testNotifier(notifierName).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: () => this.messageService.showSuccessMessage(`Test ${notifierName} notification sent.`),\r\n      error: () => this.messageService.showErrorMessage(`Test ${notifierName} notification failed!`)\r\n    });\r\n  }\r\n\r\n  registerTwitter(): void {\r\n    this.settingsService.registerTwitter().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (twitterRegistration) => {\r\n        // Show dialog to finish the registration\r\n        this.twitterRegistration = twitterRegistration;\r\n        this.twitterRegistrationDialog = true;\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Twitter registration failed!')\r\n    });\r\n  }\r\n\r\n  authorizeTwitter(): void {\r\n    this.settingsService.authorizeTwitter(this.twitterRegistration).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (twitterAuthorization) => {\r\n        // Update form with twitter key and secret\r\n        FormUtils.setFormControlValue(this.settingsForm, 'twitterKey', twitterAuthorization.twitterKey);\r\n        FormUtils.setFormControlValue(this.settingsForm, 'twitterSecret', twitterAuthorization.twitterSecret);\r\n        this.messageService.showSuccessMessage('Twitter registration successful. Please save and test Twitter.');\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Twitter authorization failed!')\r\n    });\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Growl/Prowl priorities\r\n    this.growlProwlPriorities = [];\r\n    this.growlProwlPriorities.push({ label: 'Very low', value: -2 });\r\n    this.growlProwlPriorities.push({ label: 'Moderate', value: -1 });\r\n    this.growlProwlPriorities.push({ label: 'Normal', value: 0 });\r\n    this.growlProwlPriorities.push({ label: 'High', value: 1 });\r\n    this.growlProwlPriorities.push({ label: 'Emergency', value: 2 });\r\n  }\r\n\r\n  private buildForm(notificationSettings: NotificationSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      notify: [notificationSettings.notify, [Validators.required]],\r\n      notifyMail: [notificationSettings.notifyMail, []],\r\n      mailServer: [notificationSettings.mailServer, []],\r\n      mailFromName: [notificationSettings.mailFromName, []],\r\n      mailFrom: [notificationSettings.mailFrom, []],\r\n      mailTo: [notificationSettings.mailTo, []],\r\n      mailUserName: [notificationSettings.mailUserName, []],\r\n      mailPassword: [notificationSettings.mailPassword, []],\r\n      mailSubject: [notificationSettings.mailSubject, []],\r\n      mailEncryption: [notificationSettings.mailEncryption, []],\r\n      mailAuthentication: [notificationSettings.mailAuthentication, []],\r\n      notifyTwitter: [notificationSettings.notifyTwitter, []],\r\n      twitterKey: [notificationSettings.twitterKey, []],\r\n      twitterSecret: [notificationSettings.twitterSecret, []],\r\n      notifyPushalot: [notificationSettings.notifyPushalot, []],\r\n      pushalotApi: [notificationSettings.pushalotApi, []],\r\n      notifyPushover: [notificationSettings.notifyPushover, []],\r\n      pushoverKey: [notificationSettings.pushoverKey, []],\r\n      pushoverApi: [notificationSettings.pushoverApi, []],\r\n      pushoverDevices: [notificationSettings.pushoverDevices, []],\r\n      notifyGrowl: [notificationSettings.notifyGrowl, []],\r\n      growlHost: [notificationSettings.growlHost, []],\r\n      growlPort: [notificationSettings.growlPort, []],\r\n      growlPassword: [notificationSettings.growlPassword, []],\r\n      growlPriority: [notificationSettings.growlPriority || 0, []],\r\n      notifyProwl: [notificationSettings.notifyProwl, []],\r\n      prowlApi: [notificationSettings.prowlApi, []],\r\n      prowlPriority: [notificationSettings.prowlPriority || 0, []],\r\n      notifyPushbullet: [notificationSettings.notifyPushbullet, []],\r\n      pushbulletApi: [notificationSettings.pushbulletApi, []],\r\n      notifyTelegram: [notificationSettings.notifyTelegram, []],\r\n      telegramBotApi: [notificationSettings.telegramBotApi, []],\r\n      telegramChatId: [notificationSettings.telegramChatId, []]\r\n    });\r\n  }\r\n\r\n  private getNotificationSettings(): NotificationSettings {\r\n    const settings = new NotificationSettings();\r\n    settings.notify = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notify');\r\n    settings.notifyMail = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyMail');\r\n    settings.mailServer = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailServer');\r\n    settings.mailFromName = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailFromName');\r\n    settings.mailFrom = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailFrom');\r\n    settings.mailTo = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailTo');\r\n    settings.mailUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailUserName');\r\n    settings.mailPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailPassword');\r\n    settings.mailSubject = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailSubject');\r\n    settings.mailEncryption = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailEncryption');\r\n    settings.mailAuthentication = FormUtils.getFormControlValue<string>(this.settingsForm, 'mailAuthentication');\r\n    settings.notifyTwitter = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyTwitter');\r\n    settings.twitterKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'twitterKey');\r\n    settings.twitterSecret = FormUtils.getFormControlValue<string>(this.settingsForm, 'twitterSecret');\r\n    settings.notifyPushalot = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushalot');\r\n    settings.pushalotApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushalotApi');\r\n    settings.notifyPushover = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushover');\r\n    settings.pushoverKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverKey');\r\n    settings.pushoverApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverApi');\r\n    settings.pushoverDevices = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushoverDevices');\r\n    settings.notifyGrowl = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyGrowl');\r\n    settings.growlHost = FormUtils.getFormControlValue<string>(this.settingsForm, 'growlHost');\r\n    settings.growlPort = FormUtils.getFormControlValue<number>(this.settingsForm, 'growlPort');\r\n    settings.growlPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'growlPassword');\r\n    settings.growlPriority = FormUtils.getFormControlValue<number>(this.settingsForm, 'growlPriority');\r\n    settings.notifyProwl = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyProwl');\r\n    settings.prowlApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'prowlApi');\r\n    settings.prowlPriority = FormUtils.getFormControlValue<number>(this.settingsForm, 'prowlPriority');\r\n    settings.notifyPushbullet = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyPushbullet');\r\n    settings.pushbulletApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'pushbulletApi');\r\n    settings.notifyTelegram = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'notifyTelegram');\r\n    settings.telegramBotApi = FormUtils.getFormControlValue<string>(this.settingsForm, 'telegramBotApi');\r\n    settings.telegramChatId = FormUtils.getFormControlValue<string>(this.settingsForm, 'telegramChatId');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Notification settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Passwords and keys are stored in plaintext!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Information notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"info\" text=\"You first need to save before you can test a notification.\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Notify -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notify\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, notification(s) will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notify\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\"></div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Mail settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Mail</span>\r\n          <img src=\"assets/notifiers/email.png\" class=\"notifier-icon\" alt=\"Mail\" title=\"Mail\">\r\n        </div>\r\n      </div>\r\n      <!-- Notify Mail -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyMail\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, an email notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyMail\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Mail server -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailServer\" class=\"label\">Server</label>\r\n          <app-icon-dropdown>\r\n            <li>The mail server address (and port if needed).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailServer\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail from Name -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailFromName\" class=\"label\">Sender name</label>\r\n          <app-icon-dropdown>\r\n            <li>The name from which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailFromName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail from -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailFrom\" class=\"label\">Sender</label>\r\n          <app-icon-dropdown>\r\n            <li>The email address from which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailFrom\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail to -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailTo\" class=\"label\">Receiver</label>\r\n          <app-icon-dropdown>\r\n            <li>The email address(es) to which the notification will be sent.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailTo\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username on the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for the username on the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail subject -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailSubject\" class=\"label\">Subject</label>\r\n          <app-icon-dropdown>\r\n            <li>The email subject.</li>\r\n            <li>If not provided, the default subject will be used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailSubject\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail encryption -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailEncryption\" class=\"label\">Encryption</label>\r\n          <app-icon-dropdown>\r\n            <li>The encryption method used by the mail server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailEncryption\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Mail authentication -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"mailAuthentication\" class=\"label\">Authentication</label>\r\n          <app-icon-dropdown>\r\n            <li>The authentication mechanism used by the mail server.</li>\r\n            <li>Don't change this if you don't know what you are doing.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"mailAuthentication\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('mail')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Twitter</span>\r\n          <a href=\"https://twitter.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/twitter.png\" class=\"notifier-icon\" alt=\"Twitter\" title=\"Twitter\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Twitter -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyTwitter\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Twitter notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyTwitter\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"twitterKey\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Twitter.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"twitterKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Twitter secret -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"twitterSecret\" class=\"label\">Secret code</label>\r\n          <app-icon-dropdown>\r\n            <li>The secret code for Twitter.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"twitterSecret\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Register\" styleClass=\"p-button-secondary\" (onClick)=\"registerTwitter()\"></p-button>\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('twitter')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushalot settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushalot</span>\r\n          <a href=\"https://pushalot.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushalot.png\" class=\"notifier-icon\" alt=\"Pushalot\" title=\"Pushalot\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushalot -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushalot\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushalot notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushalot\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushalot api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushalotApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushalot.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushalotApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushalot')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushover</span>\r\n          <a href=\"https://pushover.net/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushover.png\" class=\"notifier-icon\" alt=\"Pushover\" title=\"Pushover\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushover -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushover\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushover notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushover\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverKey\" class=\"label\">User key</label>\r\n          <app-icon-dropdown>\r\n            <li>The user key for Pushover.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushover.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Pushover devices -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushoverDevices\" class=\"label\">Devices</label>\r\n          <app-icon-dropdown>\r\n            <li>The devices (comma separated list) used for Pushover notifications.</li>\r\n            <li>If not provided, notifications will be sent to all your Pushover devices.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushoverDevices\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushover')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Growl settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Growl</span>\r\n          <a href=\"http://www.growl.info/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/growl.png\" class=\"notifier-icon\" alt=\"Growl\" title=\"Growl\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Growl -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyGrowl\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Growl notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyGrowl\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Growl host -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlHost\" class=\"label\">Server</label>\r\n          <app-icon-dropdown>\r\n            <li>The Growl host server address.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"growlHost\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Growl port -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPort\" class=\"label\">Port</label>\r\n          <app-icon-dropdown>\r\n            <li>The port of the Growl host server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"growlPort\" [showButtons]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Growl password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password on the growl host server.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"growlPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Growl priority -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"growlPriority\" class=\"label\">Priority</label>\r\n          <app-icon-dropdown>\r\n            <li>The priority for the Growl notification.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"growlPriority\" [options]=\"growlProwlPriorities\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('growl')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Prowl</span>\r\n          <a href=\"https://www.prowlapp.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/prowl.png\" class=\"notifier-icon\" alt=\"Prowl\" title=\"Prowl\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Prowl -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyProwl\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Prowl notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyProwl\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"prowlApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Prowl.</li>\r\n            <li>Your API key can be found by visiting: <a href=\"https://prowlapp.com/api_settings.php\" target=\"_blank\">https://prowlapp.com/api_settings.php</a></li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"prowlApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Prowl priority -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"prowlPriority\" class=\"label\">Priority</label>\r\n          <app-icon-dropdown>\r\n            <li>The priority for the Prowl notification.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"prowlPriority\" [options]=\"growlProwlPriorities\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('prowl')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Pushbullet settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Pushbullet</span>\r\n          <a href=\"https://www.pushbullet.com/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/pushbullet.png\" class=\"notifier-icon\" alt=\"Pushbullet\" title=\"Pushbullet\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Pushbullet -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyPushbullet\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Pushbullet notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyPushbullet\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Pushbullet api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"pushbulletApi\" class=\"label\">API key</label>\r\n          <app-icon-dropdown>\r\n            <li>The API key for Pushbullet.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"pushbulletApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('pushbullet')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Telegram</span>\r\n          <a href=\"https://telegram.org/\" target=\"_blank\">\r\n            <img src=\"assets/notifiers/telegram.png\" class=\"notifier-icon\" alt=\"Telegram\" title=\"Telegram\">\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <!-- Notify Telegram -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"notifyTelegram\" class=\"label\">Notify</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, a Telegram notification will be sent when a subtitle has been downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"notifyTelegram\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram api -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"telegramBotApi\" class=\"label\">Bot API key (token)</label>\r\n          <app-icon-dropdown>\r\n            <li>The bot API key (token) for Telegram.</li>\r\n            <li>Contact @BotFather on Telegram to set up one.</li>\r\n            <li>See <a href=\"https://core.telegram.org/bots\" target=\"_blank\">https://core.telegram.org/bots</a></li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"telegramBotApi\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Telegram chat id -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"telegramChatId\" class=\"label\">Chat ID</label>\r\n          <app-icon-dropdown>\r\n            <li>Unique identifier for the target chat or username of the target channel (in the format @channelusername).</li>\r\n            <li>Contact @myidbot on Telegram to get an ID.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"telegramChatId\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 offset-0 offset-sm-0 offset-md-4 offset-lg-4 form-row-buttons\">\r\n          <p-button label=\"Test\" styleClass=\"p-button-secondary\" (onClick)=\"test('telegram')\"></p-button>\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n\r\n<p-dialog [(visible)]=\"twitterRegistrationDialog\"\r\n          [modal]=\"true\"\r\n          [closable]=\"true\"\r\n          [resizable]=\"false\"\r\n          [showHeader]=\"true\"\r\n          header=\"Twitter registration\">\r\n  <div *ngIf=\"twitterRegistration\">\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <label>In order to use twitter, you need to give permission to 'Auto-Subliminal' to send tweets with your account.</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <label>Execute the following steps:</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-12\">\r\n        <ul>\r\n          <li><label>Go to <a [href]=\"twitterRegistration.url\" target=\"_blank\">twitter</a></label></li>\r\n          <li><label>Login</label></li>\r\n          <li><label>Authorize 'Auto-Subliminal'</label></li>\r\n          <li><label>Enter pin below and click 'OK'</label></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"row form-row\">\r\n      <div class=\"col-6 col-6 col-sm-6 col-md-4 col-lg-4\">\r\n        <div class=\"p-inputgroup\">\r\n          <input type=\"text\" pInputText [(ngModel)]=\"twitterRegistration.tokenPin\" placeholder=\"Pin\">\r\n          <p-button label=\"Ok\" styleClass=\"p-button-outlined input-addon\" (onClick)=\"authorizeTwitter()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</p-dialog>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputFileBrowserComponent } from '../../../components/input/file-browser/input-file-browser.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { PostProcessSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-postprocessing',\r\n  templateUrl: './settings-postprocessing.component.html',\r\n  styleUrls: ['./settings-postprocessing.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputDropdownComponent, InputFileBrowserComponent, InputTextComponent]\r\n})\r\nexport class SettingsPostprocessingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getPostProcessSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (postProcessSettings) => {\r\n        this.buildForm(postProcessSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the postprocessing settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updatePostProcessSettings(this.getPostProcessSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Postprocessing settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the postprocessing settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(postProcessSettings: PostProcessSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      postProcess: [postProcessSettings.postProcess, [Validators.required]],\r\n      postProcessIndividual: [postProcessSettings.postProcessIndividual, [Validators.required]],\r\n      postProcessUtf8Encoding: [postProcessSettings.postProcessUtf8Encoding, [Validators.required]],\r\n      showPostProcessCmd: [postProcessSettings.showPostProcessCmd, []],\r\n      showPostProcessArgs: [postProcessSettings.showPostProcessArgs, []],\r\n      moviePostProcessCmd: [postProcessSettings.moviePostProcessCmd, []],\r\n      moviePostProcessArgs: [postProcessSettings.moviePostProcessArgs, []]\r\n    });\r\n  }\r\n\r\n  private getPostProcessSettings(): PostProcessSettings {\r\n    const settings = new PostProcessSettings();\r\n    settings.postProcess = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcess');\r\n    settings.postProcessIndividual = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcessIndividual');\r\n    settings.postProcessUtf8Encoding = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'postProcessUtf8Encoding');\r\n    settings.showPostProcessCmd = FormUtils.getFormControlValue<string>(this.settingsForm, 'showPostProcessCmd');\r\n    settings.showPostProcessArgs = FormUtils.getFormControlValue<string>(this.settingsForm, 'showPostProcessArgs');\r\n    settings.moviePostProcessCmd = FormUtils.getFormControlValue<string>(this.settingsForm, 'moviePostProcessCmd');\r\n    settings.moviePostProcessArgs = FormUtils.getFormControlValue<string>(this.settingsForm, 'moviePostProcessArgs');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Postprocessing settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Post process -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcess\" class=\"label\">Post-process</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing command(s) will be executed.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcess\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Post process individual -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcessIndividual\" class=\"label\">Individual</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing will be executed after each subtitle download for a video.</li>\r\n            <li>If disabled, the post processing will only be executed when all wanted subtitles are downloaded for a video.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcessIndividual\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Post process utf8 encoding -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"postProcessUtf8Encoding\" class=\"label\">UTF-8 encoding</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the post processing command(s) and argument(s) will be encoded in UTF-8.</li>\r\n            <li>This means that the post processing script will need to decode the argument(s) from UTF-8.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"postProcessUtf8Encoding\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show post process cmd -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showPostProcessCmd\" class=\"label\">Post-process command</label>\r\n          <app-icon-dropdown>\r\n            <li>The command to run after downloading a subtitle for a show.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"showPostProcessCmd\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Show post process args -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"showPostProcessArgs\" class=\"label\">Post-process argument(s)</label>\r\n          <app-icon-dropdown>\r\n            <li>The argument(s) (separated by |) to pass to the command above after downloading a subtitle for a show.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"showPostProcessArgs\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Movie post process cmd -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"moviePostProcessCmd\" class=\"label\">Post-process command</label>\r\n          <app-icon-dropdown>\r\n            <li>The command to run after downloading a subtitle for a movie.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-file-browser formControlName=\"moviePostProcessCmd\" [validationFeedback]=\"saveAttempt\"></app-input-file-browser>\r\n        </div>\r\n      </div>\r\n      <!-- Movie post process args -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"moviePostProcessArgs\" class=\"label\">Post-process argument(s)</label>\r\n          <app-icon-dropdown>\r\n            <li>The argument(s) (separated by |) to pass to the command above after downloading a subtitle for a movie.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"moviePostProcessArgs\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { SettingsGeneralComponent } from './general/settings-general.component';\r\nimport { SettingsLibraryComponent } from './library/settings-library.component';\r\nimport { SettingsLoggingComponent } from './logging/settings-logging.component';\r\nimport { SettingsNamemappingComponent } from './namemapping/settings-namemapping.component';\r\nimport { SettingsNotificationComponent } from './notification/settings-notification.component';\r\nimport { SettingsPostprocessingComponent } from './postprocessing/settings-postprocessing.component';\r\nimport { SettingsSkipmappingComponent } from './skipmapping/settings-skipmapping.component';\r\nimport { SettingsSubliminalComponent } from './subliminal/settings-subliminal.component';\r\nimport { SettingsWebserverComponent } from './webserver/settings-webserver.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'general',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'general',\r\n    component: SettingsGeneralComponent\r\n  },\r\n  {\r\n    path: 'library',\r\n    component: SettingsLibraryComponent\r\n  },\r\n  {\r\n    path: 'logging',\r\n    component: SettingsLoggingComponent\r\n  },\r\n  {\r\n    path: 'webserver',\r\n    component: SettingsWebserverComponent\r\n  },\r\n  {\r\n    path: 'subliminal',\r\n    component: SettingsSubliminalComponent\r\n  },\r\n  {\r\n    path: 'namemapping',\r\n    component: SettingsNamemappingComponent\r\n  },\r\n  {\r\n    path: 'skipmapping',\r\n    component: SettingsSkipmappingComponent\r\n  },\r\n  {\r\n    path: 'notification',\r\n    component: SettingsNotificationComponent\r\n  },\r\n  {\r\n    path: 'postprocessing',\r\n    component: SettingsPostprocessingComponent\r\n  },\r\n  {\r\n    path: '**', // wildcard to match any non matching routes\r\n    redirectTo: 'general'\r\n  }\r\n];\r\n\r\n// Use default export for simplified lazy loading (https://angular.io/guide/standalone-components#lazy-loading-and-default-exports)\r\nexport default routes;\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputMultiTextComponent } from '../../../components/input/multi-text/input-multi-text.component';\r\nimport { SkipMappingSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-skipmapping',\r\n  templateUrl: './settings-skipmapping.component.html',\r\n  styleUrls: ['./settings-skipmapping.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, IconDropdownComponent, InputMultiTextComponent]\r\n})\r\nexport class SettingsSkipmappingComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.getSkipMappingSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (skipMappingSettings) => {\r\n        this.buildForm(skipMappingSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the skipmapping settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateSkipMappingSettings(this.getSkipMappingSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Skipmapping settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the skipmapping settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildForm(skipMappingSettings: SkipMappingSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      skipShowMapping: [skipMappingSettings.skipShowMapping || [], []],\r\n      skipMovieMapping: [skipMappingSettings.skipMovieMapping || [], []]\r\n    });\r\n  }\r\n\r\n  private getSkipMappingSettings(): SkipMappingSettings {\r\n    const settings = new SkipMappingSettings();\r\n    settings.skipShowMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'skipShowMapping');\r\n    settings.skipMovieMapping = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'skipMovieMapping');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Skipmapping settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Show settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Show</span>\r\n        </div>\r\n      </div>\r\n      <!-- Skip show mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipShowMapping\" class=\"label\">Skip show mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The mapping to skip a show.</li>\r\n            <li>Examples:</li>\r\n            <li>Serie Name = 00 (this will skip the show 'Serie Name' completely</li>\r\n            <li>Another Serie name = 1,5,6 (this will skip the show 'Another Serie Name' season 1, 5 and 6</li>\r\n            <li>Show Name = 0,6,7 (this will skip the show 'Show Name' season 0 (specials), 6 and 7.</li>\r\n            <li>00 is different then 0, 00 skips a show, 0 skips specials (season 0)</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"skipShowMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Movie settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Movie</span>\r\n        </div>\r\n      </div>\r\n      <!-- Skip movie mapping -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"skipMovieMapping\" class=\"label\">Skip movie mapping</label>\r\n          <app-icon-dropdown>\r\n            <li>The mapping to skip a movie.</li>\r\n            <li>Examples:</li>\r\n            <li>Movie title (year) = 00</li>\r\n            <li>Movie title 2 (year) = 00</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-multi-text formControlName=\"skipMovieMapping\" [validationFeedback]=\"saveAttempt\"></app-input-multi-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { appSettings, AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputSwitchComponent } from '../../../components/input/switch/input-switch.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { SubliminalSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\n\r\n@Component({\r\n  selector: 'app-settings-subliminal',\r\n  templateUrl: './settings-subliminal.component.html',\r\n  styleUrls: ['./settings-subliminal.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, MessageModule, ButtonModule, ListboxModule, IconDropdownComponent, InputSwitchComponent, InputDropdownComponent, InputTextComponent]\r\n})\r\nexport class SettingsSubliminalComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n  subliminalProviders: SelectItem[];\r\n  antiCaptchaProviders: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getSubliminalSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (subliminalSettings) => {\r\n        this.buildForm(subliminalSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the subliminal settings!')\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateSubliminalSettings(this.getSubliminalSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Subliminal settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the subliminal settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n    // Subliminal providers\r\n    this.subliminalProviders = [];\r\n    appSettings.subliminalProviders.forEach((provider) => this.subliminalProviders.push({ label: provider, value: provider }));\r\n    // Anti-Captcha providers\r\n    this.antiCaptchaProviders = [];\r\n    this.antiCaptchaProviders.push({ label: 'Disabled', value: '' });\r\n    appSettings.antiCaptchaProviders.forEach((provider) => this.antiCaptchaProviders.push({ label: provider.source, value: provider.class }));\r\n  }\r\n\r\n  private buildForm(subliminalSettings: SubliminalSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      showMatchSource: [subliminalSettings.showMatchSource, [Validators.required]],\r\n      showMatchQuality: [subliminalSettings.showMatchQuality, [Validators.required]],\r\n      showMatchCodec: [subliminalSettings.showMatchCodec, [Validators.required]],\r\n      showMatchReleaseGroup: [subliminalSettings.showMatchReleaseGroup, [Validators.required]],\r\n      movieMatchSource: [subliminalSettings.movieMatchSource, [Validators.required]],\r\n      movieMatchQuality: [subliminalSettings.movieMatchQuality, [Validators.required]],\r\n      movieMatchCodec: [subliminalSettings.movieMatchCodec, [Validators.required]],\r\n      movieMatchReleaseGroup: [subliminalSettings.movieMatchReleaseGroup, [Validators.required]],\r\n      subliminalProviders: [subliminalSettings.subliminalProviders || [], []],\r\n      subtitleUtf8Encoding: [subliminalSettings.subtitleUtf8Encoding, [Validators.required]],\r\n      refineVideo: [subliminalSettings.refineVideo, [Validators.required]],\r\n      manualRefineVideo: [subliminalSettings.manualRefineVideo, [Validators.required]],\r\n      preferHearingImpaired: [subliminalSettings.preferHearingImpaired, [Validators.required]],\r\n      antiCaptchaClass: [subliminalSettings.antiCaptchaClass, []],\r\n      antiCaptchaClientKey: [subliminalSettings.antiCaptchaClientKey, []],\r\n      addic7edUserName: [subliminalSettings.addic7edUserName, []],\r\n      addic7edPassword: [subliminalSettings.addic7edPassword, []],\r\n      addic7edUserId: [subliminalSettings.addic7edUserId, []],\r\n      opensubtitlesUserName: [subliminalSettings.opensubtitlesUserName, []],\r\n      opensubtitlesPassword: [subliminalSettings.opensubtitlesPassword, []],\r\n      legendastvUserName: [subliminalSettings.legendastvUserName, []],\r\n      legendastvPassword: [subliminalSettings.legendastvPassword, []]\r\n    });\r\n  }\r\n\r\n  private getSubliminalSettings(): SubliminalSettings {\r\n    const settings = new SubliminalSettings();\r\n    settings.showMatchSource = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchSource');\r\n    settings.showMatchQuality = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchQuality');\r\n    settings.showMatchCodec = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchCodec');\r\n    settings.showMatchReleaseGroup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'showMatchReleaseGroup');\r\n    settings.movieMatchSource = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchSource');\r\n    settings.movieMatchQuality = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchQuality');\r\n    settings.movieMatchCodec = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchCodec');\r\n    settings.movieMatchReleaseGroup = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'movieMatchReleaseGroup');\r\n    settings.subliminalProviders = FormUtils.getFormControlValue<string[]>(this.settingsForm, 'subliminalProviders');\r\n    settings.subtitleUtf8Encoding = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'subtitleUtf8Encoding');\r\n    settings.refineVideo = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'refineVideo');\r\n    settings.manualRefineVideo = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'manualRefineVideo');\r\n    settings.preferHearingImpaired = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'preferHearingImpaired');\r\n    settings.antiCaptchaClass = FormUtils.getFormControlValue<string>(this.settingsForm, 'antiCaptchaClass');\r\n    settings.antiCaptchaClientKey = FormUtils.getFormControlValue<string>(this.settingsForm, 'antiCaptchaClientKey');\r\n    settings.addic7edUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edUserName');\r\n    settings.addic7edPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edPassword');\r\n    settings.addic7edUserId = FormUtils.getFormControlValue<string>(this.settingsForm, 'addic7edUserId');\r\n    settings.opensubtitlesUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesUserName');\r\n    settings.opensubtitlesPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'opensubtitlesPassword');\r\n    settings.legendastvUserName = FormUtils.getFormControlValue<string>(this.settingsForm, 'legendastvUserName');\r\n    settings.legendastvPassword = FormUtils.getFormControlValue<string>(this.settingsForm, 'legendastvPassword');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Subliminal settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Passwords and keys are stored in plain text!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- General settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">General</span>\r\n        </div>\r\n      </div>\r\n      <!-- Show min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Show MinMatchScore</label>\r\n          <app-icon-dropdown>\r\n            <li>The items that must match before a show subtitle is downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-switches\">\r\n          <app-input-switch formControlName=\"showMatchSource\" label=\"Source\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchQuality\" label=\"Quality\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchCodec\" label=\"Codec\"></app-input-switch>\r\n          <app-input-switch formControlName=\"showMatchReleaseGroup\" label=\"Group\"></app-input-switch>\r\n        </div>\r\n      </div>\r\n      <!-- Movie min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Movie MinMatchScore</label>\r\n          <app-icon-dropdown>\r\n            <li>The items that must match before a movie subtitle is downloaded.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-switches\">\r\n          <app-input-switch formControlName=\"movieMatchSource\" label=\"Source\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchQuality\" label=\"Quality\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchCodec\" label=\"Codec\"></app-input-switch>\r\n          <app-input-switch formControlName=\"movieMatchReleaseGroup\" label=\"Group\"></app-input-switch>\r\n        </div>\r\n      </div>\r\n      <!-- Movie min match score -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label class=\"label\">Providers</label>\r\n          <app-icon-dropdown>\r\n            <li>The subliminal providers that must be used for searching and downloading subtitles.</li>\r\n            <li>Multiple providers can be selected (use ctrl key).</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8 form-row-label\">\r\n          <p-listbox formControlName=\"subliminalProviders\" [options]=\"subliminalProviders\" [multiple]=\"true\"></p-listbox>\r\n        </div>\r\n      </div>\r\n      <!-- Subtitle utf8 encoding -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"subtitleUtf8Encoding\" class=\"label\">Subtitles in utf-8 encoding</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, all subtitles will be saved in utf-8 encoding.</li>\r\n            <li>When disabled, the original encoding of the subtitle is used.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"subtitleUtf8Encoding\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Refine video -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"refineVideo\" class=\"label\">Refine video</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, subliminal will enable 'refiners' to enrich the video meta-data before searching for subtitles.</li>\r\n            <li>This can result in a higher score matching and thus a higher automatic subtitle download.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"refineVideo\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Manual refine video -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"manualRefineVideo\" class=\"label\">Refine video manually</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, you will be able to edit the video meta-data before searching for subtitles.</li>\r\n            <li>An edit icon will appear next to the show/movie name to edit the show/movie details.</li>\r\n            <li>This only affects a manual search temporarily until the next disk scan.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"manualRefineVideo\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Prefer hearing impaired -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"preferHearingImpaired\" class=\"label\">Prefer hearing impaired subs</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, 'hearing impaired' subtitles will be preferred over 'regular' subtitles.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"preferHearingImpaired\" [options]=\"enabledOrDisabled\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-captcha settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Anti-captcha</span>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-Captcha class -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"antiCaptchaClass\" class=\"label\">Anti-captcha service</label>\r\n          <app-icon-dropdown>\r\n            <li>The anti-captcha service.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"antiCaptchaClass\" [options]=\"antiCaptchaProviders\" [validationFeedback]=\"saveAttempt\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Anti-Captcha client key -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"antiCaptchaClientKey\" class=\"label\">Anti-captcha client key</label>\r\n          <app-icon-dropdown>\r\n            <li>The anti-captcha client key.</li>\r\n            <li>anti-captcha.com: account_key</li>\r\n            <li>deathbycaptcha.com: username:password</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"antiCaptchaClientKey\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Addic7ed provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your Addic7ed account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your Addic7ed account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Addic7ed userid -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"addic7edUserId\" class=\"label\">UserId</label>\r\n          <app-icon-dropdown>\r\n            <li>The user id for your Addic7ed account.</li>\r\n            <li> It can be found in the url when you visit the details of your user in the profile page of your account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"addic7edUserId\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">OpenSubtitles provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your OpenSubtitles account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- OpenSubtitles password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"opensubtitlesPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your OpenSubtitles account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"opensubtitlesPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV provider settings -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12\">\r\n          <span class=\"p-tag p-tag-rounded p-tag-small\">Legendas.TV provider</span>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"legendastvUserName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for your Legendas.TV account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"legendastvUserName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Legendas.TV password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"legendastvPassword\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for your Legendas.TV account.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"legendastvPassword\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, DestroyRef, inject, OnInit } from '@angular/core';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { AppSettingsService } from '../../../app-settings.service';\r\nimport { IconDropdownComponent } from '../../../components/icon-dropdown/icon-dropdown.component';\r\nimport { InputDropdownComponent } from '../../../components/input/dropdown/input-dropdown.component';\r\nimport { InputNumberComponent } from '../../../components/input/number/input-number.component';\r\nimport { InputTextComponent } from '../../../components/input/text/input-text.component';\r\nimport { WebServerSettings } from '../../../models/settings';\r\nimport { SettingsService } from '../../../services/api/settings.service';\r\nimport { MessageService } from '../../../services/message.service';\r\nimport { FormUtils } from '../../../utils/form-utils';\r\nimport { FormValidators } from '../../../utils/form-validators';\r\n\r\n@Component({\r\n  selector: 'app-settings-webserver',\r\n  templateUrl: './settings-webserver.component.html',\r\n  styleUrls: ['./settings-webserver.component.scss'],\r\n  standalone: true,\r\n  imports: [NgIf, FormsModule, ReactiveFormsModule, PanelModule, ButtonModule, MessageModule, IconDropdownComponent, InputTextComponent, InputNumberComponent, InputDropdownComponent]\r\n})\r\nexport class SettingsWebserverComponent implements OnInit {\r\n\r\n  settingsForm: UntypedFormGroup;\r\n\r\n  enabledOrDisabled: SelectItem[];\r\n\r\n  saveAttempt = false;\r\n\r\n  private fb = inject(UntypedFormBuilder);\r\n  private settingsService = inject(SettingsService);\r\n  private appSettingsService = inject(AppSettingsService);\r\n  private messageService = inject(MessageService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  ngOnInit(): void {\r\n    this.buildSelectItems();\r\n    this.settingsService.getWebServerSettings().pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n      next: (webServerSettings) => {\r\n        this.buildForm(webServerSettings);\r\n      },\r\n      error: () => this.messageService.showErrorMessage('Unable to get the webserver settings!')\r\n    });\r\n  }\r\n\r\n  formatWebRoot(): void {\r\n    let webRoot = FormUtils.getFormControlValue<string>(this.settingsForm, 'webRoot');\r\n    if (webRoot) {\r\n      if (!webRoot.startsWith('/')) {\r\n        webRoot = `/${webRoot}`;\r\n      }\r\n      if (webRoot.endsWith('/')) {\r\n        webRoot = webRoot.replace(new RegExp('/+$'), '');\r\n      }\r\n    }\r\n    FormUtils.setFormControlValue(this.settingsForm, 'webRoot', webRoot);\r\n  }\r\n\r\n  save(): void {\r\n    this.saveAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.settingsService.updateWebServerSettings(this.getWebServerSettings()).pipe(takeUntilDestroyed(this.destroyRef)).subscribe({\r\n        next: () => {\r\n          this.messageService.showSuccessMessage('Webserver settings saved.');\r\n          this.appSettingsService.reload(); // reload app settings\r\n        },\r\n        error: () => this.messageService.showErrorMessage('Unable to save the webserver settings!')\r\n      });\r\n    } else {\r\n      FormUtils.scrollToFirstInvalidField(this.settingsForm);\r\n    }\r\n  }\r\n\r\n  private buildSelectItems(): void {\r\n    // Enabled or disabled\r\n    this.enabledOrDisabled = FormUtils.enabledOrDisabledSelectItems();\r\n  }\r\n\r\n  private buildForm(webServerSettings: WebServerSettings): void {\r\n    this.settingsForm = this.fb.group({\r\n      webServerIp: [webServerSettings.webServerIp, [Validators.required, FormValidators.notEmpty]],\r\n      webServerPort: [webServerSettings.webServerPort, [Validators.required, FormValidators.notEmpty]],\r\n      webRoot: [webServerSettings.webRoot, []],\r\n      userName: [webServerSettings.userName, []],\r\n      password: [webServerSettings.password, []],\r\n      launchBrowser: [webServerSettings.launchBrowser, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private getWebServerSettings(): WebServerSettings {\r\n    const settings = new WebServerSettings();\r\n    settings.webServerIp = FormUtils.getFormControlValue<string>(this.settingsForm, 'webServerIp');\r\n    settings.webServerPort = FormUtils.getFormControlValue<number>(this.settingsForm, 'webServerPort');\r\n    settings.webRoot = FormUtils.getFormControlValue<string>(this.settingsForm, 'webRoot');\r\n    settings.userName = FormUtils.getFormControlValue<string>(this.settingsForm, 'userName');\r\n    settings.password = FormUtils.getFormControlValue<string>(this.settingsForm, 'password');\r\n    settings.launchBrowser = FormUtils.getFormControlValue<boolean>(this.settingsForm, 'launchBrowser');\r\n    return settings;\r\n  }\r\n}\r\n","<div class=\"container-lg\">\r\n  <p-panel header=\"Webserver settings\">\r\n    <form *ngIf=\"settingsForm\" [formGroup]=\"settingsForm\" class=\"form\">\r\n      <!-- Warning notification -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 form-row-notification\">\r\n          <p-message severity=\"warn\" text=\"Changing webserver settings will result in no automatic reload! You'll need to change the url manually in order to reload correctly!\" styleClass=\"w-100\"></p-message>\r\n        </div>\r\n      </div>\r\n      <!-- Webserver ip -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webServerIp\" class=\"label\">IP address</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver IP address.</li>\r\n            <li>To allow hosts to connect to any IP address, use '0.0.0.0'.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"webServerIp\" mask=\"IP\" [dropSpecialCharacters]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Webserver port -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webServerPort\" class=\"label\">Port</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver port.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-number formControlName=\"webServerPort\" [showButtons]=\"false\" [validationFeedback]=\"saveAttempt\"></app-input-number>\r\n        </div>\r\n      </div>\r\n      <!-- Webroot -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"webRoot\" class=\"label\">Webroot</label>\r\n          <app-icon-dropdown>\r\n            <li>The webserver webroot for reverse proxying.</li>\r\n            <li>Example: to proxy it to 'http://localhost/autosubliminal/' the webroot needs to be '/autosubliminal'.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"webRoot\" [validationFeedback]=\"saveAttempt\" (keyUpEvent)=\"formatWebRoot()\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Username -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"userName\" class=\"label\">Username</label>\r\n          <app-icon-dropdown>\r\n            <li>The username for the webserver authentication.</li>\r\n            <li>If a username and password are set, the webserver requires authentication.</li>\r\n            <li>Otherwise no authentication is set or required.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"userName\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Password -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"password\" class=\"label\">Password</label>\r\n          <app-icon-dropdown>\r\n            <li>The password for the webserver authentication.</li>\r\n            <li>If a username and password are set, the webserver requires authentication.</li>\r\n            <li>Otherwise no authentication is set or required.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-text formControlName=\"password\" type=\"password\" [validationFeedback]=\"saveAttempt\"></app-input-text>\r\n        </div>\r\n      </div>\r\n      <!-- Launch browser -->\r\n      <div class=\"row form-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-4 col-lg-4 form-row-label\">\r\n          <label for=\"launchBrowser\" class=\"label\">Launch browser</label>\r\n          <app-icon-dropdown>\r\n            <li>When enabled, the browser will start every time Auto-Subliminal starts.</li>\r\n          </app-icon-dropdown>\r\n        </div>\r\n        <div class=\"col-12 col-sm-12 col-md-8 col-lg-8\">\r\n          <app-input-dropdown formControlName=\"launchBrowser\" [options]=\"enabledOrDisabled\"></app-input-dropdown>\r\n        </div>\r\n      </div>\r\n      <!-- Button -->\r\n      <div class=\"row button-row\">\r\n        <div class=\"col-12 col-sm-12 col-md-12 col-lg-10\">\r\n          <p-button label=\"Save\" (onClick)=\"save()\"></p-button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </p-panel>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { appSettings } from '../../app-settings.service';\r\nimport { FileBrowserResult } from '../../models/filebrowser';\r\nimport { ApiServiceTemplate } from './api-service-template';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileSystemService extends ApiServiceTemplate {\r\n\r\n  private readonly URL = `${appSettings.webRoot}/api/filesystem`;\r\n\r\n  browse(path = '', includeFiles = true, includeFolders = true): Observable<FileBrowserResult> {\r\n    const url = `${this.URL}?path=${path}&includeFiles=${includeFiles}&includeFolders=${includeFolders}`;\r\n    return this.httpClient.get<FileBrowserResult>(url, this.options);\r\n  }\r\n}\r\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, Header, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { SearchIcon } from 'primeng/icons/search';\nimport { CheckIcon } from 'primeng/icons/check';\n\nconst LISTBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Listbox),\n    multi: true\n};\n/**\n * ListBox is used to select one or more values from a list of items.\n * @group Components\n */\nclass Listbox {\n    el;\n    cd;\n    filterService;\n    config;\n    /**\n     * When specified, allows selecting multiple values.\n     * @group Props\n     */\n    multiple;\n    /**\n     * Inline style of the container.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the container.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the list element.\n     * @group Props\n     */\n    listStyle;\n    /**\n     * Style class of the list element.\n     * @group Props\n     */\n    listStyleClass;\n    /**\n     * When present, it specifies that the element value cannot be changed.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * When specified, allows selecting items with checkboxes.\n     * @group Props\n     */\n    checkbox = false;\n    /**\n     * When specified, displays a filter input at header.\n     * @group Props\n     */\n    filter = false;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    metaKeySelection = true;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Whether header checkbox is shown in multiple mode.\n     * @group Props\n     */\n    showToggleAll = true;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Defines placeholder of the filter input.\n     * @group Props\n     */\n    filterPlaceHolder;\n    /**\n     * Text to display when filtering does not return any results.\n     * @group Props\n     */\n    emptyFilterMessage;\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * An array of selectitems to display as the available options.\n     * @group Props\n     */\n    get options() {\n        return this._options;\n    }\n    set options(val) {\n        this._options = val;\n        if (this.hasFilter())\n            this.activateFilter();\n    }\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n        return this._filterValue;\n    }\n    set filterValue(val) {\n        this._filterValue = val;\n        this.activateFilter();\n    }\n    /**\n     * Callback to invoke on value change.\n     * @param {ListboxChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when option is clicked.\n     * @param {ListboxClickEvent} event - Custom click event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when option is double clicked.\n     * @param {ListboxDoubleClickEvent} event - Custom double click event.\n     * @group Emits\n     */\n    onDblClick = new EventEmitter();\n    headerCheckboxViewChild;\n    filterViewChild;\n    headerFacet;\n    footerFacet;\n    templates;\n    _options;\n    itemTemplate;\n    groupTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    filterIconTemplate;\n    checkIconTemplate;\n    _filterValue;\n    _filteredOptions;\n    filterOptions;\n    filtered;\n    value;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    optionTouched;\n    focus;\n    headerCheckboxFocus;\n    translationSubscription;\n    constructor(el, cd, filterService, config) {\n        this.el = el;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.config = config;\n    }\n    ngOnInit() {\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\n            this.cd.markForCheck();\n        });\n        if (this.filterBy) {\n            this.filterOptions = {\n                filter: (value) => this.onFilter(value),\n                reset: () => this.resetFilter()\n            };\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'filter':\n                    this.filterTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterTemplate = item.template;\n                    break;\n                case 'filtericon':\n                    this.filterIconTemplate = item.template;\n                    break;\n                case 'checkicon':\n                    this.checkIconTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    getOptionLabel(option) {\n        return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option.label != undefined ? option.label : option;\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionValue(option) {\n        return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : this.optionLabel || option.value === undefined ? option : option.value;\n    }\n    isOptionDisabled(option) {\n        return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option.disabled !== undefined ? option.disabled : false;\n    }\n    writeValue(value) {\n        this.value = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onOptionClick(event, option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        if (this.multiple) {\n            if (this.checkbox)\n                this.onOptionClickCheckbox(event, option);\n            else\n                this.onOptionClickMultiple(event, option);\n        }\n        else {\n            this.onOptionClickSingle(event, option);\n        }\n        this.onClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n        this.optionTouched = false;\n    }\n    onOptionTouchEnd(option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        this.optionTouched = true;\n    }\n    onOptionDoubleClick(event, option) {\n        if (this.disabled || this.isOptionDisabled(option) || this.readonly) {\n            return;\n        }\n        this.onDblClick.emit({\n            originalEvent: event,\n            option: option,\n            value: this.value\n        });\n    }\n    onOptionClickSingle(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                if (metaKey) {\n                    this.value = null;\n                    valueChanged = true;\n                }\n            }\n            else {\n                this.value = this.getOptionValue(option);\n                valueChanged = true;\n            }\n        }\n        else {\n            this.value = selected ? null : this.getOptionValue(option);\n            valueChanged = true;\n        }\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n    onOptionClickMultiple(event, option) {\n        let selected = this.isSelected(option);\n        let valueChanged = false;\n        let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = event.metaKey || event.ctrlKey;\n            if (selected) {\n                if (metaKey) {\n                    this.removeOption(option);\n                }\n                else {\n                    this.value = [this.getOptionValue(option)];\n                }\n                valueChanged = true;\n            }\n            else {\n                this.value = metaKey ? this.value || [] : [];\n                this.value = [...this.value, this.getOptionValue(option)];\n                valueChanged = true;\n            }\n        }\n        else {\n            if (selected) {\n                this.removeOption(option);\n            }\n            else {\n                this.value = [...(this.value || []), this.getOptionValue(option)];\n            }\n            valueChanged = true;\n        }\n        if (valueChanged) {\n            this.onModelChange(this.value);\n            this.onChange.emit({\n                originalEvent: event,\n                value: this.value\n            });\n        }\n    }\n    onOptionClickCheckbox(event, option) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        let selected = this.isSelected(option);\n        if (selected) {\n            this.removeOption(option);\n        }\n        else {\n            this.value = this.value ? this.value : [];\n            this.value = [...this.value, this.getOptionValue(option)];\n        }\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    }\n    removeOption(option) {\n        this.value = this.value.filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.dataKey));\n    }\n    isSelected(option) {\n        let selected = false;\n        let optionValue = this.getOptionValue(option);\n        if (this.multiple) {\n            if (this.value) {\n                for (let val of this.value) {\n                    if (ObjectUtils.equals(val, optionValue, this.dataKey)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            selected = ObjectUtils.equals(this.value, optionValue, this.dataKey);\n        }\n        return selected;\n    }\n    get allChecked() {\n        let optionsToRender = this.optionsToRender;\n        if (!optionsToRender || optionsToRender.length === 0) {\n            return false;\n        }\n        else {\n            let selectedDisabledItemsLength = 0;\n            let unselectedDisabledItemsLength = 0;\n            let selectedEnabledItemsLength = 0;\n            let visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\n            for (let option of optionsToRender) {\n                if (!this.group) {\n                    let disabled = this.isOptionDisabled(option);\n                    let selected = this.isSelected(option);\n                    if (disabled) {\n                        if (selected)\n                            selectedDisabledItemsLength++;\n                        else\n                            unselectedDisabledItemsLength++;\n                    }\n                    else {\n                        if (selected)\n                            selectedEnabledItemsLength++;\n                        else\n                            return false;\n                    }\n                }\n                else {\n                    for (let opt of this.getOptionGroupChildren(option)) {\n                        let disabled = this.isOptionDisabled(opt);\n                        let selected = this.isSelected(opt);\n                        if (disabled) {\n                            if (selected)\n                                selectedDisabledItemsLength++;\n                            else\n                                unselectedDisabledItemsLength++;\n                        }\n                        else {\n                            if (selected)\n                                selectedEnabledItemsLength++;\n                            else {\n                                return false;\n                            }\n                        }\n                        visibleOptionsLength++;\n                    }\n                }\n            }\n            return (visibleOptionsLength === selectedDisabledItemsLength ||\n                visibleOptionsLength === selectedEnabledItemsLength ||\n                (selectedEnabledItemsLength && visibleOptionsLength === selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength));\n        }\n    }\n    get optionsToRender() {\n        return this._filteredOptions || this.options;\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n        return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    hasFilter() {\n        return this._filterValue && this._filterValue.trim().length > 0;\n    }\n    isEmpty() {\n        return !this.optionsToRender || (this.optionsToRender && this.optionsToRender.length === 0);\n    }\n    onFilter(event) {\n        this._filterValue = event.target.value;\n        this.activateFilter();\n    }\n    activateFilter() {\n        if (this.hasFilter() && this._options) {\n            if (this.group) {\n                let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n                let filteredGroups = [];\n                for (let optgroup of this.options) {\n                    let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push({ ...optgroup, ...{ [this.optionGroupChildren]: filteredSubOptions } });\n                    }\n                }\n                this._filteredOptions = filteredGroups;\n            }\n            else {\n                this._filteredOptions = this._options.filter((option) => this.filterService.filters[this.filterMatchMode](this.getOptionLabel(option), this._filterValue, this.filterLocale));\n            }\n        }\n        else {\n            this._filteredOptions = null;\n        }\n    }\n    resetFilter() {\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this._filterValue = null;\n        this._filteredOptions = null;\n    }\n    get toggleAllDisabled() {\n        let optionsToRender = this.optionsToRender;\n        if (!optionsToRender || optionsToRender.length === 0) {\n            return true;\n        }\n        else {\n            for (let option of optionsToRender) {\n                if (!this.isOptionDisabled(option))\n                    return false;\n            }\n            return true;\n        }\n    }\n    toggleAll(event) {\n        if (this.disabled || this.toggleAllDisabled || this.readonly) {\n            return;\n        }\n        let allChecked = this.allChecked;\n        if (allChecked)\n            this.uncheckAll();\n        else\n            this.checkAll();\n        this.onModelChange(this.value);\n        this.onChange.emit({ originalEvent: event, value: this.value });\n        event.preventDefault();\n    }\n    checkAll() {\n        let optionsToRender = this.optionsToRender;\n        let val = [];\n        optionsToRender.forEach((opt) => {\n            if (!this.group) {\n                let optionDisabled = this.isOptionDisabled(opt);\n                if (!optionDisabled || (optionDisabled && this.isSelected(opt))) {\n                    val.push(this.getOptionValue(opt));\n                }\n            }\n            else {\n                let subOptions = this.getOptionGroupChildren(opt);\n                if (subOptions) {\n                    subOptions.forEach((option) => {\n                        let optionDisabled = this.isOptionDisabled(option);\n                        if (!optionDisabled || (optionDisabled && this.isSelected(option))) {\n                            val.push(this.getOptionValue(option));\n                        }\n                    });\n                }\n            }\n        });\n        this.value = val;\n    }\n    uncheckAll() {\n        let optionsToRender = this.optionsToRender;\n        let val = [];\n        optionsToRender.forEach((opt) => {\n            if (!this.group) {\n                let optionDisabled = this.isOptionDisabled(opt);\n                if (optionDisabled && this.isSelected(opt)) {\n                    val.push(this.getOptionValue(opt));\n                }\n            }\n            else {\n                if (opt.items) {\n                    opt.items.forEach((option) => {\n                        let optionDisabled = this.isOptionDisabled(option);\n                        if (optionDisabled && this.isSelected(option)) {\n                            val.push(this.getOptionValue(option));\n                        }\n                    });\n                }\n            }\n        });\n        this.value = val;\n    }\n    onOptionKeyDown(event, option) {\n        if (this.readonly) {\n            return;\n        }\n        let item = event.currentTarget;\n        switch (event.which) {\n            //down\n            case 40:\n                var nextItem = this.findNextItem(item);\n                if (nextItem) {\n                    nextItem.focus();\n                }\n                event.preventDefault();\n                break;\n            //up\n            case 38:\n                var prevItem = this.findPrevItem(item);\n                if (prevItem) {\n                    prevItem.focus();\n                }\n                event.preventDefault();\n                break;\n            //enter\n            case 13:\n                this.onOptionClick(event, option);\n                event.preventDefault();\n                break;\n        }\n    }\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n        if (nextItem)\n            return DomHandler.hasClass(nextItem, 'p-disabled') || DomHandler.isHidden(nextItem) || DomHandler.hasClass(nextItem, 'p-listbox-item-group') ? this.findNextItem(nextItem) : nextItem;\n        else\n            return null;\n    }\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n        if (prevItem)\n            return DomHandler.hasClass(prevItem, 'p-disabled') || DomHandler.isHidden(prevItem) || DomHandler.hasClass(prevItem, 'p-listbox-item-group') ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return null;\n    }\n    onHeaderCheckboxFocus() {\n        this.headerCheckboxFocus = true;\n    }\n    onHeaderCheckboxBlur() {\n        this.headerCheckboxFocus = false;\n    }\n    ngOnDestroy() {\n        if (this.translationSubscription) {\n            this.translationSubscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Listbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: Listbox, selector: \"p-listbox\", inputs: { multiple: \"multiple\", style: \"style\", styleClass: \"styleClass\", listStyle: \"listStyle\", listStyleClass: \"listStyleClass\", readonly: \"readonly\", disabled: \"disabled\", checkbox: \"checkbox\", filter: \"filter\", filterBy: \"filterBy\", filterMatchMode: \"filterMatchMode\", filterLocale: \"filterLocale\", metaKeySelection: \"metaKeySelection\", dataKey: \"dataKey\", showToggleAll: \"showToggleAll\", optionLabel: \"optionLabel\", optionValue: \"optionValue\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", optionDisabled: \"optionDisabled\", ariaFilterLabel: \"ariaFilterLabel\", filterPlaceHolder: \"filterPlaceHolder\", emptyFilterMessage: \"emptyFilterMessage\", emptyMessage: \"emptyMessage\", group: \"group\", options: \"options\", filterValue: \"filterValue\" }, outputs: { onChange: \"onChange\", onClick: \"onClick\", onDblClick: \"onDblClick\" }, host: { classAttribute: \"p-element\" }, providers: [LISTBOX_VALUE_ACCESSOR], queries: [{ propertyName: \"headerFacet\", first: true, predicate: Header, descendants: true }, { propertyName: \"footerFacet\", first: true, predicate: Footer, descendants: true }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"headerCheckboxViewChild\", first: true, predicate: [\"headerchkbox\"], descendants: true }, { propertyName: \"filterViewChild\", first: true, predicate: [\"filter\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"{ 'p-listbox p-component': true, 'p-disabled': disabled }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple && showToggleAll\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\">\n                    <div class=\"p-hidden-accessible\">\n                        <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\" [disabled]=\"disabled || toggleAllDisabled\" />\n                    </div>\n                    <div #headerchkbox class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\" (click)=\"toggleAll($event)\">\n                        <ng-container *ngIf=\"allChecked\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filter\n                            type=\"text\"\n                            [value]=\"filterValue || ''\"\n                            (input)=\"onFilter($event)\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            [disabled]=\"disabled\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\">\n                <ul class=\"p-listbox-list\" role=\"listbox\" [attr.aria-multiselectable]=\"multiple\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"optionsToRender\">\n                            <li class=\"p-listbox-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: optionsToRender }\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-optionsToDisplay>\n                        <li\n                            *ngFor=\"let option of optionsToDisplay; let i = index\"\n                            [attr.tabindex]=\"disabled || isOptionDisabled(option) ? null : '0'\"\n                            pRipple\n                            [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-disabled': this.isOptionDisabled(option) }\"\n                            role=\"option\"\n                            [attr.aria-label]=\"getOptionLabel(option)\"\n                            [attr.aria-selected]=\"isSelected(option)\"\n                            (click)=\"onOptionClick($event, option)\"\n                            (dblclick)=\"onOptionDoubleClick($event, option)\"\n                            (touchend)=\"onOptionTouchEnd(option)\"\n                            (keydown)=\"onOptionKeyDown($event, option)\"\n                        >\n                            <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                    <ng-container *ngIf=\"isSelected(option)\">\n                                        <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                                        <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                            <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                        </li>\n                    </ng-template>\n                    <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                            {{ emptyFilterMessageLabel }}\n                        </ng-container>\n                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                    </li>\n                    <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                            {{ emptyMessageLabel }}\n                        </ng-container>\n                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i2.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i3.Ripple; }), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(function () { return SearchIcon; }), selector: \"SearchIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: Listbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-listbox', template: `\n        <div [ngClass]=\"{ 'p-listbox p-component': true, 'p-disabled': disabled }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-listbox-header\" *ngIf=\"headerFacet || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-listbox-header\" *ngIf=\"(checkbox && multiple && showToggleAll) || filter\">\n                <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple && showToggleAll\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || toggleAllDisabled }\">\n                    <div class=\"p-hidden-accessible\">\n                        <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"allChecked\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\" [disabled]=\"disabled || toggleAllDisabled\" />\n                    </div>\n                    <div #headerchkbox class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': allChecked, 'p-focus': headerCheckboxFocus, 'p-disabled': disabled || toggleAllDisabled }\" (click)=\"toggleAll($event)\">\n                        <ng-container *ngIf=\"allChecked\">\n                            <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                            <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                            </span>\n                        </ng-container>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"filterTemplate; else builtInFilterElement\">\n                    <ng-container *ngTemplateOutlet=\"filterTemplate; context: { options: filterOptions }\"></ng-container>\n                </ng-container>\n                <ng-template #builtInFilterElement>\n                    <div class=\"p-listbox-filter-container\" *ngIf=\"filter\">\n                        <input\n                            #filter\n                            type=\"text\"\n                            [value]=\"filterValue || ''\"\n                            (input)=\"onFilter($event)\"\n                            class=\"p-listbox-filter p-inputtext p-component\"\n                            [disabled]=\"disabled\"\n                            [attr.placeholder]=\"filterPlaceHolder\"\n                            [attr.aria-label]=\"ariaFilterLabel\"\n                        />\n                        <SearchIcon *ngIf=\"!filterIconTemplate\" [styleClass]=\"'p-listbox-filter-icon'\" />\n                        <span *ngIf=\"filterIconTemplate\" class=\"p-listbox-filter-icon\">\n                            <ng-template *ngTemplateOutlet=\"filterIconTemplate\"></ng-template>\n                        </span>\n                    </div>\n                </ng-template>\n            </div>\n            <div [ngClass]=\"'p-listbox-list-wrapper'\" [ngStyle]=\"listStyle\" [class]=\"listStyleClass\">\n                <ul class=\"p-listbox-list\" role=\"listbox\" [attr.aria-multiselectable]=\"multiple\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"optionsToRender\">\n                            <li class=\"p-listbox-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{ getOptionGroupLabel(optgroup) || 'empty' }}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: optgroup }\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: getOptionGroupChildren(optgroup) }\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                        <ng-container *ngTemplateOutlet=\"itemslist; context: { $implicit: optionsToRender }\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-optionsToDisplay>\n                        <li\n                            *ngFor=\"let option of optionsToDisplay; let i = index\"\n                            [attr.tabindex]=\"disabled || isOptionDisabled(option) ? null : '0'\"\n                            pRipple\n                            [ngClass]=\"{ 'p-listbox-item': true, 'p-highlight': isSelected(option), 'p-disabled': this.isOptionDisabled(option) }\"\n                            role=\"option\"\n                            [attr.aria-label]=\"getOptionLabel(option)\"\n                            [attr.aria-selected]=\"isSelected(option)\"\n                            (click)=\"onOptionClick($event, option)\"\n                            (dblclick)=\"onOptionDoubleClick($event, option)\"\n                            (touchend)=\"onOptionTouchEnd(option)\"\n                            (keydown)=\"onOptionKeyDown($event, option)\"\n                        >\n                            <div class=\"p-checkbox p-component\" *ngIf=\"checkbox && multiple\" [ngClass]=\"{ 'p-checkbox-disabled': disabled || isOptionDisabled(option) }\">\n                                <div class=\"p-checkbox-box\" [ngClass]=\"{ 'p-highlight': isSelected(option) }\">\n                                    <ng-container *ngIf=\"isSelected(option)\">\n                                        <CheckIcon [styleClass]=\"'p-checkbox-icon'\" *ngIf=\"!checkIconTemplate\" />\n                                        <span *ngIf=\"checkIconTemplate\" class=\"p-checkbox-icon\">\n                                            <ng-template *ngTemplateOutlet=\"checkIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                </div>\n                            </div>\n                            <span *ngIf=\"!itemTemplate\">{{ getOptionLabel(option) }}</span>\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: option, index: i }\"></ng-container>\n                        </li>\n                    </ng-template>\n                    <li *ngIf=\"hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyFilterTemplate && !emptyTemplate; else emptyFilter\">\n                            {{ emptyFilterMessageLabel }}\n                        </ng-container>\n                        <ng-container #emptyFilter *ngTemplateOutlet=\"emptyFilterTemplate || emptyTemplate\"></ng-container>\n                    </li>\n                    <li *ngIf=\"!hasFilter() && isEmpty()\" class=\"p-listbox-empty-message\">\n                        <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                            {{ emptyMessageLabel }}\n                        </ng-container>\n                        <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"p-listbox-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                <ng-content select=\"p-footer\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </div>\n    `, providers: [LISTBOX_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-listbox-list-wrapper{overflow:auto}.p-listbox-list{list-style-type:none;margin:0;padding:0}.p-listbox-item{cursor:pointer;position:relative;overflow:hidden;display:flex;align-items:center;-webkit-user-select:none;user-select:none}.p-listbox-header{display:flex;align-items:center}.p-listbox-filter-container{position:relative;flex:1 1 auto}.p-listbox-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-listbox-filter{width:100%}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }, { type: i1.PrimeNGConfig }]; }, propDecorators: { multiple: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], listStyle: [{\n                type: Input\n            }], listStyleClass: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], checkbox: [{\n                type: Input\n            }], filter: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], showToggleAll: [{\n                type: Input\n            }], optionLabel: [{\n                type: Input\n            }], optionValue: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], optionDisabled: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], filterPlaceHolder: [{\n                type: Input\n            }], emptyFilterMessage: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], filterValue: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }], onDblClick: [{\n                type: Output\n            }], headerCheckboxViewChild: [{\n                type: ViewChild,\n                args: ['headerchkbox']\n            }], filterViewChild: [{\n                type: ViewChild,\n                args: ['filter']\n            }], headerFacet: [{\n                type: ContentChild,\n                args: [Header]\n            }], footerFacet: [{\n                type: ContentChild,\n                args: [Footer]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ListboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, declarations: [Listbox], imports: [CommonModule, SharedModule, RippleModule, SearchIcon, CheckIcon], exports: [Listbox, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, imports: [CommonModule, SharedModule, RippleModule, SearchIcon, CheckIcon, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: ListboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, RippleModule, SearchIcon, CheckIcon],\n                    exports: [Listbox, SharedModule],\n                    declarations: [Listbox]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LISTBOX_VALUE_ACCESSOR, Listbox, ListboxModule };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { ExclamationTriangleIcon } from 'primeng/icons/exclamationtriangle';\nimport { InfoCircleIcon } from 'primeng/icons/infocircle';\nimport { TimesCircleIcon } from 'primeng/icons/timescircle';\n\n/**\n * Message groups a collection of contents in tabs.\n * @group Components\n */\nclass UIMessage {\n    /**\n     * Severity level of the message.\n     * @group Props\n     */\n    severity;\n    /**\n     * Text content.\n     * @group Props\n     */\n    text;\n    /**\n     * Whether displaying messages would be escaped or not.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    get icon() {\n        if (this.severity && this.severity.trim()) {\n            return this.severity;\n        }\n        else {\n            return 'info';\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: UIMessage, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.2\", type: UIMessage, selector: \"p-message\", inputs: { severity: \"severity\", text: \"text\", escape: \"escape\", style: \"style\", styleClass: \"styleClass\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div\n            aria-live=\"polite\"\n            class=\"p-inline-message p-component p-inline-message\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-inline-message-info': severity === 'info',\n                'p-inline-message-warn': severity === 'warn',\n                'p-inline-message-error': severity === 'error',\n                'p-inline-message-success': severity === 'success',\n                'p-inline-message-icon-only': this.text == null\n            }\"\n        >\n            <CheckIcon *ngIf=\"icon === 'success'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <InfoCircleIcon *ngIf=\"icon === 'info'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <TimesCircleIcon *ngIf=\"icon === 'error'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <ExclamationTriangleIcon *ngIf=\"icon === 'warn'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{ text }}</span>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(function () { return CheckIcon; }), selector: \"CheckIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return InfoCircleIcon; }), selector: \"InfoCircleIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return TimesCircleIcon; }), selector: \"TimesCircleIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ExclamationTriangleIcon; }), selector: \"ExclamationTriangleIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: UIMessage, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-message', template: `\n        <div\n            aria-live=\"polite\"\n            class=\"p-inline-message p-component p-inline-message\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-inline-message-info': severity === 'info',\n                'p-inline-message-warn': severity === 'warn',\n                'p-inline-message-error': severity === 'error',\n                'p-inline-message-success': severity === 'success',\n                'p-inline-message-icon-only': this.text == null\n            }\"\n        >\n            <CheckIcon *ngIf=\"icon === 'success'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <InfoCircleIcon *ngIf=\"icon === 'info'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <TimesCircleIcon *ngIf=\"icon === 'error'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <ExclamationTriangleIcon *ngIf=\"icon === 'warn'\" [styleClass]=\"'p-inline-message-icon'\" />\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{ text }}</span>\n            </ng-template>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}\\n\"] }]\n        }], propDecorators: { severity: [{\n                type: Input\n            }], text: [{\n                type: Input\n            }], escape: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }] } });\nclass MessageModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, declarations: [UIMessage], imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon], exports: [UIMessage] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.2\", ngImport: i0, type: MessageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, CheckIcon, InfoCircleIcon, TimesCircleIcon, ExclamationTriangleIcon],\n                    exports: [UIMessage],\n                    declarations: [UIMessage]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MessageModule, UIMessage };\n"],"names":["NgIf","DestroyRef","EventEmitter","inject","takeUntilDestroyed","FormsModule","ReactiveFormsModule","UntypedFormControl","SharedModule","ButtonModule","DialogModule","InputTextModule","TableModule","catchError","debounceTime","mergeMap","of","appSettings","FileBrowserFile","FileBrowserFileType","FileSystemService","joinPaths","splitPathInChunks","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","selectedFilePath","ɵɵtext","ɵɵtemplate","FileBrowserComponent_ng_template_4_i_3_Template","FileBrowserComponent_ng_template_4_i_4_Template","FileBrowserComponent_ng_template_4_i_5_Template","file_r4","ɵɵattribute","name","ctx_r2","isFolder","type","isFolderUp","isFile","ɵɵtextInterpolate","ɵɵlistener","FileBrowserComponent_ng_template_5_Template_p_button_click_0_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","close","FileBrowserComponent_ng_template_5_Template_p_button_click_1_listener","ctx_r11","selectFile","FileBrowserComponent","constructor","visible","visibleChange","path","pathChange","folderMode","FOLDER_UP","includeFiles","includeFolders","fileSystemService","destroyRef","ngOnInit","valueChanges","pipe","browse","subscribe","next","result","loadFileBrowserResult","select","selectedFile","FOLDER","folder","pathInChunks","fileBrowserPath","parentFolderchunks","slice","length","match","getFilePath","setValue","FILE","emit","value","fileBrowserResult","selectedFileName","getSelectedFileName","fileBrowserFiles","getFileBrowserFiles","unshift","scrollToSelectedFileName","filter","part","includes","files","folders","forEach","push","file","fileBrowserFile","setTimeout","row","rowElements","find","r","nativeElement","getAttribute","scrollIntoView","inline","block","endsWith","pathSeparator","selectors","viewQuery","FileBrowserComponent_Query","rf","ctx","FileBrowserComponent_Template_p_dialog_visibleChange_0_listener","$event","FileBrowserComponent_Template_p_table_selectionChange_1_listener","FileBrowserComponent_Template_p_table_onRowSelect_1_listener","FileBrowserComponent_ng_template_2_Template","FileBrowserComponent_ng_template_3_Template","FileBrowserComponent_ng_template_4_Template","FileBrowserComponent_ng_template_5_Template","i1","DefaultValueAccessor","NgControlStatus","FormControlDirective","i2","Dialog","i3","PrimeTemplate","i4","Table","SelectableRow","i5","Button","i6","InputText","styles","NgClass","forwardRef","NG_VALUE_ACCESSOR","DropdownModule","InputComponent","InputDropdownComponent","writeValue","obj","changeDetectorRef","detectChanges","onDropDownChange","event","changeEvent","originalEvent","t","inputs","options","standalone","features","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","InputDropdownComponent_Template","InputDropdownComponent_Template_p_dropdown_onFocus_0_listener","onFocus","InputDropdownComponent_Template_p_dropdown_onChange_0_listener","InputDropdownComponent_Template_p_dropdown_onBlur_0_listener","onBlur","id","formControlName","control","validationClass","Dropdown","InputFileBrowserComponent_app_file_browser_3_Template_app_file_browser_visibleChange_0_listener","_r2","ctx_r1","showFileBrowser","InputFileBrowserComponent_app_file_browser_3_Template_app_file_browser_pathChange_0_listener","ctx_r3","setFilePath","browserPath","InputFileBrowserComponent","placeholder","openFileBrowser","filePath","InputFileBrowserComponent_Template","InputFileBrowserComponent_Template_input_focus_1_listener","InputFileBrowserComponent_Template_input_keydown_1_listener","onKeyDown","InputFileBrowserComponent_Template_input_keyup_1_listener","onKeyUp","InputFileBrowserComponent_Template_input_change_1_listener","onChange","InputFileBrowserComponent_Template_input_blur_1_listener","InputFileBrowserComponent_Template_p_button_onClick_2_listener","InputFileBrowserComponent_app_file_browser_3_Template","NgFor","InputMultiFileBrowserComponent_div_1_Template_input_keyup_2_listener","restoredCtx","_r5","value_r2","$implicit","ctx_r4","onValueKeyup","InputMultiFileBrowserComponent_div_1_Template_p_button_onClick_3_listener","i_r3","index","ctx_r6","InputMultiFileBrowserComponent_div_1_Template_p_button_onClick_4_listener","ctx_r7","removeValue","InputMultiFileBrowserComponent_app_file_browser_7_Template_app_file_browser_visibleChange_0_listener","_r9","ctx_r8","InputMultiFileBrowserComponent_app_file_browser_7_Template_app_file_browser_pathChange_0_listener","ctx_r10","InputMultiFileBrowserComponent","addButtonDisabled","browserIndex","values","trackValueByIndex","originalValue","changedValue","target","trim","map","val","onNewValueKeyup","addNewValue","newValue","concat","InputMultiFileBrowserComponent_Template","InputMultiFileBrowserComponent_div_1_Template","InputMultiFileBrowserComponent_Template_input_ngModelChange_4_listener","InputMultiFileBrowserComponent_Template_input_keyup_4_listener","InputMultiFileBrowserComponent_Template_p_button_onClick_5_listener","InputMultiFileBrowserComponent_Template_p_button_onClick_6_listener","InputMultiFileBrowserComponent_app_file_browser_7_Template","NgModel","InputMultiTextComponent_div_1_p_dropdown_1_Template_p_dropdown_onChange_0_listener","value_r3","onValueChange","ctx_r5","i_r4","InputMultiTextComponent_div_1_input_2_Template_input_keyup_0_listener","_r13","InputMultiTextComponent_div_1_p_dropdown_1_Template","InputMultiTextComponent_div_1_input_2_Template","InputMultiTextComponent_div_1_Template_p_button_onClick_3_listener","_r16","ctx_r15","InputMultiTextComponent_p_dropdown_3_Template_p_dropdown_ngModelChange_0_listener","_r18","ctx_r17","InputMultiTextComponent_p_dropdown_3_Template_p_dropdown_onChange_0_listener","ctx_r19","onNewValueChange","InputMultiTextComponent_input_4_Template_input_ngModelChange_0_listener","_r21","ctx_r20","InputMultiTextComponent_input_4_Template_input_keyup_0_listener","ctx_r22","InputMultiTextComponent","InputMultiTextComponent_Template","InputMultiTextComponent_div_1_Template","InputMultiTextComponent_p_dropdown_3_Template","InputMultiTextComponent_input_4_Template","InputMultiTextComponent_Template_p_button_onClick_5_listener","FileBrowserResult","UntypedFormBuilder","Validators","PanelModule","AppSettingsService","IconDropdownComponent","InputNumberComponent","GeneralSettings","SettingsService","MessageService","FormUtils","FormValidators","saveAttempt","SettingsGeneralComponent_form_2_div_215_Template","SettingsGeneralComponent_form_2_Template_p_button_onClick_251_listener","_r3","save","settingsForm","languages","enabledOrDisabled","ɵɵtextInterpolate1","scanDiskIntervalDefault","checkSubIntervalDefault","checkSubDeadlineDefault","checkSubDeltaDefault","checkVersionIntervalDefault","showFfmpegPath","timestampFormats","SettingsGeneralComponent","fb","settingsService","appSettingsService","messageService","initDefaults","buildSelectItems","getGeneralSettings","generalSettings","buildForm","error","showErrorMessage","valid","updateGeneralSettings","showSuccessMessage","reload","scrollToFirstInvalidField","getFormControlValue","enabledOrDisabledSelectItems","label","language","code","group","videoPaths","required","notEmpty","defaultLanguage","defaultLanguageSuffix","additionalLanguages","manualSearchWithScoring","scanDiskInterval","scanDiskAtStartup","checkSubInterval","checkSubAtStartup","checkSubDeadline","checkSubDelta","checkVersionInterval","checkVersionAtStartup","checkVersionAutoUpdate","scanEmbeddedSubs","scanHardcodedSubs","skipHiddenDirs","detectInvalidSubLanguage","detectedLanguageProbability","manualSubSync","ffmpegPath","minVideoFileSize","maxDbResults","timestampFormat","validator","globalFormValidator","formGroup","ffmpegPathRequired","addFormControlValidationErrors","controls","markFormControlFieldsAsDirty","clearFormControlValidationErrors","settings","SettingsGeneralComponent_Template","SettingsGeneralComponent_form_2_Template","Panel","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","LibrarySettings","SettingsLibraryComponent_form_2_Template_p_button_onClick_56_listener","scanLibraryIntervalDefault","SettingsLibraryComponent","getLibrarySettings","librarySettings","updateLibrarySettings","libraryMode","libraryPaths","scanLibraryInterval","scanLibraryAtStartup","libraryEditMode","SettingsLibraryComponent_Template","SettingsLibraryComponent_form_2_Template","InputTextComponent","LogSettings","SettingsLoggingComponent_form_2_Template_p_button_onClick_92_listener","logLevels","SettingsLoggingComponent","getLogSettings","logSettings","updateLogSettings","logFile","logLevel","logNum","logSize","logHttpAccess","logExternalLibs","logDetailedFormat","logReversed","logLevelConsole","SettingsLoggingComponent_Template","SettingsLoggingComponent_form_2_Template","MessageModule","NameMappingSettings","SettingsNamemappingComponent_form_2_Template_p_button_onClick_89_listener","SettingsNamemappingComponent","getNameMappingSettings","nameMappingSettings","updateNameMappingSettings","showNameMapping","addic7edShowNameMapping","alternativeShowNameMapping","movieNameMapping","alternativeMovieNameMapping","SettingsNamemappingComponent_Template","SettingsNamemappingComponent_form_2_Template","UIMessage","NotificationSettings","SettingsNotificationComponent_form_2_Template_p_button_onClick_23_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_125_listener","test","SettingsNotificationComponent_form_2_Template_p_button_onClick_126_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_162_listener","registerTwitter","SettingsNotificationComponent_form_2_Template_p_button_onClick_163_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_164_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_191_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_192_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_239_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_240_listener","ctx_r12","SettingsNotificationComponent_form_2_Template_p_button_onClick_294_listener","ctx_r13","SettingsNotificationComponent_form_2_Template_p_button_onClick_295_listener","ctx_r14","SettingsNotificationComponent_form_2_Template_p_button_onClick_335_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_336_listener","ctx_r16","SettingsNotificationComponent_form_2_Template_p_button_onClick_363_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_364_listener","ctx_r18","SettingsNotificationComponent_form_2_Template_p_button_onClick_408_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_409_listener","SettingsNotificationComponent_form_2_Template_p_button_onClick_412_listener","ctx_r21","growlProwlPriorities","SettingsNotificationComponent_div_4_Template_input_ngModelChange_29_listener","_r23","twitterRegistration","tokenPin","SettingsNotificationComponent_div_4_Template_p_button_onClick_30_listener","ctx_r24","authorizeTwitter","url","ɵɵsanitizeUrl","SettingsNotificationComponent","twitterRegistrationDialog","getNotificationSettings","notificationSettings","updateNotificationSettings","notifierName","testNotifier","twitterAuthorization","setFormControlValue","twitterKey","twitterSecret","notify","notifyMail","mailServer","mailFromName","mailFrom","mailTo","mailUserName","mailPassword","mailSubject","mailEncryption","mailAuthentication","notifyTwitter","notifyPushalot","pushalotApi","notifyPushover","pushoverKey","pushoverApi","pushoverDevices","notifyGrowl","growlHost","growlPort","growlPassword","growlPriority","notifyProwl","prowlApi","prowlPriority","notifyPushbullet","pushbulletApi","notifyTelegram","telegramBotApi","telegramChatId","SettingsNotificationComponent_Template","SettingsNotificationComponent_form_2_Template","SettingsNotificationComponent_Template_p_dialog_visibleChange_3_listener","SettingsNotificationComponent_div_4_Template","PostProcessSettings","SettingsPostprocessingComponent_form_2_Template_p_button_onClick_82_listener","SettingsPostprocessingComponent","getPostProcessSettings","postProcessSettings","updatePostProcessSettings","postProcess","postProcessIndividual","postProcessUtf8Encoding","showPostProcessCmd","showPostProcessArgs","moviePostProcessCmd","moviePostProcessArgs","SettingsPostprocessingComponent_Template","SettingsPostprocessingComponent_form_2_Template","SettingsSkipmappingComponent","SettingsSubliminalComponent","SettingsWebserverComponent","routes","redirectTo","pathMatch","component","SkipMappingSettings","SettingsSkipmappingComponent_form_2_Template_p_button_onClick_45_listener","getSkipMappingSettings","skipMappingSettings","updateSkipMappingSettings","skipShowMapping","skipMovieMapping","SettingsSkipmappingComponent_Template","SettingsSkipmappingComponent_form_2_Template","ListboxModule","InputSwitchComponent","SubliminalSettings","SettingsSubliminalComponent_form_2_Template_p_button_onClick_192_listener","subliminalProviders","antiCaptchaProviders","getSubliminalSettings","subliminalSettings","updateSubliminalSettings","provider","source","class","showMatchSource","showMatchQuality","showMatchCodec","showMatchReleaseGroup","movieMatchSource","movieMatchQuality","movieMatchCodec","movieMatchReleaseGroup","subtitleUtf8Encoding","refineVideo","manualRefineVideo","preferHearingImpaired","antiCaptchaClass","antiCaptchaClientKey","addic7edUserName","addic7edPassword","addic7edUserId","opensubtitlesUserName","opensubtitlesPassword","legendastvUserName","legendastvPassword","SettingsSubliminalComponent_Template","SettingsSubliminalComponent_form_2_Template","Listbox","WebServerSettings","SettingsWebserverComponent_form_2_Template_app_input_text_keyUpEvent_34_listener","formatWebRoot","SettingsWebserverComponent_form_2_Template_p_button_onClick_72_listener","getWebServerSettings","webServerSettings","webRoot","startsWith","replace","RegExp","updateWebServerSettings","webServerIp","webServerPort","userName","password","launchBrowser","SettingsWebserverComponent_Template","SettingsWebserverComponent_form_2_Template","ApiServiceTemplate","URL","httpClient","get","factory","ɵfac","providedIn","asyncScheduler","operate","createOperatorSubscriber","dueTime","scheduler","subscriber","activeTask","lastValue","lastTime","unsubscribe","emitWhenIdle","targetTime","now","schedule","undefined","add","complete","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChild","ContentChildren","NgModule","CommonModule","TranslationKeys","Header","Footer","DomHandler","ObjectUtils","RippleModule","SearchIcon","CheckIcon","_c0","_c1","Listbox_div_1_ng_container_2_Template","ɵɵelementContainer","Listbox_div_1_Template","ɵɵprojection","headerTemplate","Listbox_div_2_div_1_ng_container_5_CheckIcon_1_Template","Listbox_div_2_div_1_ng_container_5_span_2_1_ng_template_0_Template","Listbox_div_2_div_1_ng_container_5_span_2_1_Template","Listbox_div_2_div_1_ng_container_5_span_2_Template","checkIconTemplate","Listbox_div_2_div_1_ng_container_5_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","_c2","a0","_c3","a1","a2","Listbox_div_2_div_1_Template","ɵɵgetCurrentView","Listbox_div_2_div_1_Template_input_focus_2_listener","onHeaderCheckboxFocus","Listbox_div_2_div_1_Template_input_blur_2_listener","onHeaderCheckboxBlur","Listbox_div_2_div_1_Template_input_keydown_space_2_listener","ctx_r23","toggleAll","Listbox_div_2_div_1_Template_div_click_3_listener","ɵɵpureFunction1","disabled","toggleAllDisabled","allChecked","ɵɵpureFunction3","headerCheckboxFocus","Listbox_div_2_ng_container_2_ng_container_1_Template","_c4","Listbox_div_2_ng_container_2_Template","filterTemplate","filterOptions","Listbox_div_2_ng_template_3_div_0_SearchIcon_3_Template","Listbox_div_2_ng_template_3_div_0_span_4_1_ng_template_0_Template","Listbox_div_2_ng_template_3_div_0_span_4_1_Template","Listbox_div_2_ng_template_3_div_0_span_4_Template","ctx_r29","filterIconTemplate","Listbox_div_2_ng_template_3_div_0_Template","_r33","Listbox_div_2_ng_template_3_div_0_Template_input_input_1_listener","ctx_r32","onFilter","ctx_r26","filterValue","filterPlaceHolder","ariaFilterLabel","Listbox_div_2_ng_template_3_Template","Listbox_div_2_Template","ɵɵtemplateRefExtractor","_r12","ɵɵreference","checkbox","multiple","showToggleAll","Listbox_ng_container_5_ng_template_1_span_1_Template","optgroup_r35","ctx_r36","getOptionGroupLabel","Listbox_ng_container_5_ng_template_1_ng_container_2_Template","Listbox_ng_container_5_ng_template_1_ng_container_3_Template","_c5","Listbox_ng_container_5_ng_template_1_Template","ctx_r34","_r4","groupTemplate","getOptionGroupChildren","Listbox_ng_container_5_Template","optionsToRender","Listbox_ng_container_6_ng_container_1_Template","Listbox_ng_container_6_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_CheckIcon_1_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_span_2_1_ng_template_0_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_span_2_1_Template","Listbox_ng_template_7_li_0_div_1_ng_container_2_span_2_Template","ctx_r50","Listbox_ng_template_7_li_0_div_1_ng_container_2_Template","ctx_r48","_c6","Listbox_ng_template_7_li_0_div_1_Template","option_r43","ctx_r45","isOptionDisabled","isSelected","Listbox_ng_template_7_li_0_span_2_Template","ctx_r46","getOptionLabel","Listbox_ng_template_7_li_0_ng_container_3_Template","_c7","_c8","Listbox_ng_template_7_li_0_Template","_r56","Listbox_ng_template_7_li_0_Template_li_click_0_listener","ctx_r55","onOptionClick","Listbox_ng_template_7_li_0_Template_li_dblclick_0_listener","ctx_r57","onOptionDoubleClick","Listbox_ng_template_7_li_0_Template_li_touchend_0_listener","ctx_r58","onOptionTouchEnd","Listbox_ng_template_7_li_0_Template_li_keydown_0_listener","ctx_r59","onOptionKeyDown","i_r44","ctx_r42","ɵɵpureFunction2","itemTemplate","Listbox_ng_template_7_Template","optionsToDisplay_r41","Listbox_li_9_ng_container_1_Template","ctx_r60","emptyFilterMessageLabel","Listbox_li_9_ng_container_2_Template","Listbox_li_9_Template","emptyFilterTemplate","emptyTemplate","emptyFilter","Listbox_li_10_ng_container_1_Template","ctx_r63","emptyMessageLabel","Listbox_li_10_ng_container_2_Template","Listbox_li_10_Template","empty","Listbox_div_11_ng_container_2_Template","Listbox_div_11_Template","footerTemplate","_c9","_c10","_c11","LISTBOX_VALUE_ACCESSOR","_options","hasFilter","activateFilter","_filterValue","el","cd","filterService","config","_defineProperty","translationSubscription","translationObserver","markForCheck","filterBy","reset","resetFilter","ngAfterContentInit","templates","item","getType","option","optionLabel","resolveFieldData","optionGroup","optionGroupChildren","items","optionGroupLabel","getOptionValue","optionValue","optionDisabled","registerOnChange","fn","onModelChange","registerOnTouched","onModelTouched","setDisabledState","readonly","onOptionClickCheckbox","onOptionClickMultiple","onOptionClickSingle","onClick","optionTouched","onDblClick","selected","valueChanged","metaSelection","metaKeySelection","metaKey","ctrlKey","removeOption","equals","dataKey","selectedDisabledItemsLength","unselectedDisabledItemsLength","selectedEnabledItemsLength","visibleOptionsLength","opt","_filteredOptions","emptyMessage","getTranslation","EMPTY_MESSAGE","emptyFilterMessage","EMPTY_FILTER_MESSAGE","isEmpty","searchFields","split","filteredGroups","optgroup","filteredSubOptions","filterMatchMode","filterLocale","filters","filterViewChild","uncheckAll","checkAll","preventDefault","subOptions","currentTarget","which","nextItem","findNextItem","focus","prevItem","findPrevItem","nextElementSibling","hasClass","isHidden","previousElementSibling","ngOnDestroy","Listbox_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","FilterService","PrimeNGConfig","ɵɵdefineComponent","contentQueries","Listbox_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","headerFacet","first","footerFacet","Listbox_Query","ɵɵviewQuery","headerCheckboxViewChild","hostAttrs","style","styleClass","listStyle","listStyleClass","outputs","ngContentSelectors","Listbox_Template","ɵɵprojectionDef","ɵɵclassMap","dependencies","NgForOf","NgTemplateOutlet","NgStyle","Ripple","encapsulation","changeDetection","ngDevMode","ListboxModule_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","imports","ExclamationTriangleIcon","InfoCircleIcon","TimesCircleIcon","UIMessage_CheckIcon_1_Template","UIMessage_InfoCircleIcon_2_Template","UIMessage_TimesCircleIcon_3_Template","UIMessage_ExclamationTriangleIcon_4_Template","UIMessage_div_5_span_1_Template","text","ɵɵsanitizeHtml","UIMessage_div_5_Template","escape","UIMessage_ng_template_6_span_0_Template","UIMessage_ng_template_6_Template","a3","a4","icon","severity","UIMessage_Factory","UIMessage_Template","ɵɵpureFunction5","MessageModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[31,32,33]}