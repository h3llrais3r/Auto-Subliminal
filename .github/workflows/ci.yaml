# CI workflow for Auto-Subliminal

name: Auto-Subliminal

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches:
      - development
      - master

jobs:
  ci:

    runs-on: ${{ matrix.os }} # Use matrix os to run on multiple os
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Print python version
      run: |
        python --version

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade six
        pip install --upgrade pytest
        pip install -e .[dev,test]
        pip install --upgrade coveralls

    - name: Get node version (Linux)
      id: get-node-version-linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        # Get minimal required node version from package.json
        cd web/autosubliminal
        echo "::set-output name=node-version::$(jq -r '.engines.node' package.json | sed 's/[>=]//g')"
        cd ../..

    - name: Set up node (Linux)
      if: ${{ runner.os == 'Linux' }}
      uses: actions/setup-node@v2
      with:
        node-version: "${{steps.get-node-version-linux.outputs.node-version}}"

    - name: Get node version (Windows)
      id: get-node-version-windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        # Get minimal required node version from package.json
        cd web/autosubliminal
        echo "::set-output name=node-version::$((Get-Content -Raw -Path package.json | ConvertFrom-Json).engines.node -replace '[>=]')"
        cd ../..

    - name: Set up node (Windows)
      if: ${{ runner.os == 'Windows' }}
      uses: actions/setup-node@v2
      with:
        node-version: "${{steps.get-node-version-windows.outputs.node-version}}"

    - name: Print node version
      run: |
        node --version
        npm --version

    - name: Install npm dependencies
      run: |
        cd web/autosubliminal
        npm install
        cd ../..

    - name: Lint python code
      run: |
        # Configuration is done in .flake8
        flake8 -v

    - name: Lint angular code
      run: |
        cd web/autosubliminal
        npm run lint
        cd ../..

    - name: Test python code
      run: |
        # Configuration is done in .coveragerc
        coverage run setup.py test
        coverage report

    - name: Publish python coverage report
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_PARALLEL: true
        # Set service name as work around -> https://github.com/TheKevJames/coveralls-python/issues/252
        COVERALLS_SERVICE_NAME: github
      run: |
        coveralls

  ci-finish:

    needs: ci

    runs-on: ubuntu-latest

    steps:

    - name: Install python dependencies
      run: |
        pip install --upgrade coveralls

    - name: Aggregate python coverage reports
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --finish
