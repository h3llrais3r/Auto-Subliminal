# Workflow for continuous integration

name: Continuous integration

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches:
      - development
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:

    runs-on: ${{ matrix.os }} # Use matrix os to run on multiple os
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    defaults:
      run:
        shell: bash # required for poetry

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Print concurrency group
      run: |
        echo "${{ github.workflow }}-${{ github.ref }}"

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Print python version
      run: |
        python --version

    - name: Setup poetry
      uses: snok/install-poetry@v1

    - name: Print poetry version
      run: |
        poetry --version

    # Workaround for https://github.com/numpy/numpy/issues/17216 (should be fixed in next numpy release)
    - name: Set environment variable to work around setuptools/numpy issue
      if: ${{ matrix.os == 'windows-latest' }}
      run: echo "SETUPTOOLS_USE_DISTUTILS=stdlib" >> $GITHUB_ENV # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-6

    - name: Install python dependencies
      run: |
        poetry install --no-interaction

    - name: Get node version
      id: get-node-version
      working-directory: web/autosubliminal
      run: |
        echo "node-version=$(jq -r '.engines.node' package.json | sed 's/[>=]//g')" >> $GITHUB_OUTPUT

    - name: Set up node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ steps.get-node-version.outputs.node-version }}

    - name: Print node version
      run: |
        echo "Node version $(node --version)"
        echo "Npm version $(npm --version)"

    - name: Install npm dependencies
      working-directory: web/autosubliminal
      run: |
        npm install

    - name: Lint python code
      run: |
        # Configuration is done in .flake8
        poetry run flake8 --verbose

    - name: Lint angular code
      working-directory: web/autosubliminal
      run: |
        npm run lint

    - name: Test python code
      run: |
        # Configuration is done in .coveragerc
        poetry run coverage run --module pytest
        poetry run coverage report

    - name: Publish python coverage report
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_PARALLEL: true
        # Set service name as work around -> https://github.com/TheKevJames/coveralls-python/issues/252
        COVERALLS_SERVICE_NAME: github
      run: |
        poetry run coveralls

  ci-finish:

    needs: ci

    runs-on: ubuntu-latest

    steps:

    - name: Install python dependencies
      run: |
        pip install --upgrade coveralls

    - name: Aggregate python coverage reports
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        coveralls --finish
